window.SIDEBAR_ITEMS = {"struct":[["Base58EncodableType","A wrapper of versioned type that is base58 encodable"],["Base58EncodableVersionedType","A wrapper of versioned type that is base58 encodable with an version byte"],["ByteVec","Wrapper of Vec"],["ByteVecJson","Wrapper of Vec (json)"],["CharJson","char (json)"],["DecimalJson","u64 wrapper (json) Note that integers are represented as string in mina json"],["I64","i64 wrapper (json)"],["U32Json","u32 wrapper (json) Note that integers are represented as string in mina json"],["U64Json","u64 wrapper (json) Note that integers are represented as string in mina json"]],"type":[["AccountNonceV1","u64 representing an account nonce (v1) // This should also be an extendedu32"],["AmountV1","u64 representing an amount of currency (v1)"],["AuxHashJson","base58 string representation of a aux hash"],["BigInt256","32 bytes representing a BigInt256"],["BlockTimeV1","u64 representing a block time (v1)"],["ByteVecV1","Vector of bytes with a version number. Also encodes its own length when encoded using bin-prot"],["ChainHashV1Json","base58 string representation of a chain hash"],["CharV1","char (v1)"],["CoinBaseHashV1Json","base58 string representation of a coinbase hash"],["CoinBaseStackDataV1Json","base58 string representation of a coinbase stack data hash"],["CoinBaseStackHashV1Json","base58 string representation of a coinbase stack hash"],["DeltaV1","u32 representing a delta (i.e. difference) (v1)"],["EpochSeedHashV1Json","base58 string representation of a coinbase hash"],["ExtendedU32","u32 wrapped in 1 version byte"],["ExtendedU64","u64 wrapped in 1 version byte"],["ExtendedU64_2","u64 wrapped in 2 version bytes"],["ExtendedU64_3","u64 wrapped in 3 version bytes"],["GlobalSlotNumberV1","u32 representing a slot number (v1)"],["Hash2V1","32 bytes representing a hash of some kind (v1) with extra version byte"],["HashV1","32 bytes representing a hash of some kind (v1)"],["HashV1Json","base58 string representation of a hash"],["Hex64V1","Versioned 64 bytes"],["LedgerHashV1Json","base58 string representation of a ledger hash"],["LengthV1","u32 representing a length (v1)"],["PendingCoinbaseAuxHashJson","base58 string representation of a pending coinbase aux hash"],["StateHashV1Json","base58 string representation of a state hash"],["TokenIdV1","u64 representing a token ID (v1)"],["VrfOutputHashV1Json","base58 string representation of a vrf output hash"]]};