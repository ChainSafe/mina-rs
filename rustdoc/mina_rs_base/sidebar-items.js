initSidebarItems({"macro":[["finite_ec_point",""],["finite_ec_point_pair",""]],"mod":[["account","Module contains the Account data type and associated types"],["blockchain_state","Types related to the Blockchain State"],["common","Common data types."],["consensus_state","Types and funcions related to the Mina consensus state"],["delta_transition_chain_proof","Delta transition chain proof structures and functions"],["epoch_data","Types and functions related to the EpochData structure"],["external_transition","Mina ExternalTransition"],["global_slot","Structure of a global slot"],["numbers","Newtypes for different numeric types used throughout Mina"],["protocol_state","Types related to the Mina protocol state"],["protocol_state_proof","Module containing the components of a protocol state proof"],["protocol_version","Protocol version structure"],["snark_work","Types related to the Transaction Snark Work"],["staged_ledger_diff","In this context a diff refers to a difference between two states of the blockchain. In this case it is between the current state and the proposed next state."],["types","Re-export all the public types under this module for convenience"],["user_commands","User commands are how external users can mutate the state of the Mina ledger This module contains the command data structures and helpers to create and serialize new commands to broadcast to the network"],["verification_key","types and functions related to Mina verificiation keys"]],"trait":[["BinProtSerializationType","Re-export serialization type annotations This trait annotates a given type its corresponding bin-prot serialization type,"],["JsonSerializationType","Re-export serialization type annotations This trait annotates a given type its corresponding json serialization type, and provide utility functions to easily convert between them"]]});