initSidebarItems({"fn":[["caml_hash_variant","Hash the label string (ASCII not UTF-8) into a OCaml style variant hash"],["from_reader","Convenience method, create a BinProt deserializer from the given reader and then read from it"],["to_writer","Convenience function, creates  serializer and uses it to write the given value to the writer"]],"mod":[["error","Error objects and codes"],["integers","The variable length integer types used in BinProt By default rust integer types are serialized using variable length integer. To force a specific type annotate a field with `#[serde(with = \"nat0\")] or `#[serde(with = “integer”)]` where nat0 and integer are the submodule exported from this module."],["value","The Value enum, a loosely typed way of representing any valid bin_prot value."]],"struct":[["Deserializer","A BinProt deserializer that reads from a BufReader Can operate in strong or loose deserialization mode"],["Serializer","Serializer for writing BinProt bytes to a writer"]],"trait":[["ReadBinProtExt","Extension trait for readers implementing io::Read to allow them to read a bin_prot encoded values"],["WriteBinProtExt","extension trait for writers implementing io::Write to allow them to write the primitive values for bin_prot"]],"type":[["VariantHash","Type alias for hash result"]]});