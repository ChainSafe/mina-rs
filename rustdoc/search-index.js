var searchIndex = JSON.parse('{\
"bin_prot":{"doc":"Serde Bin-prot","t":[2,3,2,8,3,2,6,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,5,11,0,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,11,13,13,13,13,4,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,0,0,5,5,5,5,13,13,3,13,8,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,0,12,11,0,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,13,13,13,13,3,13,13,13,13,13,3,13,13,13,13,4,13,13,3,13,13,3,4,13,13,13,3,13,3,13,13,13,13,13,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["BinProtRule","Deserializer","Layout","ReadBinProtExt","Serializer","Value","VariantHash","WriteBinProtExt","bin_read_bool","bin_read_bool","bin_read_bytes","bin_read_bytes","bin_read_char","bin_read_char","bin_read_integer","bin_read_integer","bin_read_nat0","bin_read_nat0","bin_read_polyvar_tag","bin_read_polyvar_tag","bin_read_string","bin_read_string","bin_read_unit","bin_read_unit","bin_read_variant_index","bin_read_variant_index","bin_write_bool","bin_write_bool","bin_write_char","bin_write_char","bin_write_float32","bin_write_float32","bin_write_float64","bin_write_float64","bin_write_integer","bin_write_integer","bin_write_nat0","bin_write_nat0","bin_write_polyvar_tag","bin_write_polyvar_tag","bin_write_unit","bin_write_unit","bin_write_variant_index","bin_write_variant_index","borrow","borrow","borrow_mut","borrow_mut","caml_hash_variant","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_loose","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","end","end","end","end","end","end","end","error","from","from","from_reader","from_reader","integers","into","into","mode","new","rdr","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","to_writer","try_from","try_from","try_into","try_into","type_id","type_id","value","with_layout","Custom","DeserializingLooseTypeWithoutLayout","DestinationIntegerOverflow","EndOfStream","Error","InvalidByte","InvalidIntegerByte","InvalidOptionByte","InvalidUtf8","Io","LayoutIteratorError","MapSizeNotProvided","Result","SeqSizeNotProvided","UnexpectedEndOfLayout","UnimplementedRule","UnknownCustomType","UnknownPolyvarTag","VariantIndexTooLarge","WontImplement","borrow","borrow_mut","custom","custom","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","0","0","allowed","byte","byte","bytes","dtype","got","index","message","typ","integer","nat0","deserialize","serialize","deserialize","serialize","Bool","Char","EnumData","Float","Index","Int","List","Nat0","Option","Polyvar","Record","String","Sum","Tuple","Unit","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deserialize","deserialize","eq","fmt","from","from","index","index","index_into","inner","into","into","layout","name","ne","ser","serialize","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","0","index","name","name","tag","value","value","Bigstring","BinProtRule","Bool","Char","Custom","CustomForPath","Float","HashTblEntry","Hashtable","Inherited","Int","Int32","Int64","Layout","List","Nat0","NativeInt","Option","Polyvar","Polyvar","Record","RecordField","Reference","Resolved","ResolvedPayload","RuleRef","SelfReference","String","Sum","Summand","Tagged","TaggedPolyvar","Tuple","TypeAbstraction","TypeClosure","TypeVar","Unit","Unresolved","UnresolvedPayload","Vec","bin_prot_rule","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_iter","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","0","0","0","0"],"q":["bin_protbin_prot::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bin_prot::error::Error","","","","","","","","","","","bin_prot::integers","","bin_prot::integers::integer","","bin_prot::integers::nat0","","bin_prot::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bin_prot::value::Value","","","","","","","","","","","","","","","","bin_prot::value::layoutbin_prot::value::layout::BinProtRule","","","","","","","","","","","","","","","","","","","bin_prot::value::layout::Polyvar","","bin_prot::value::layout::RuleRef",""],"d":["","A BinProt deserializer that reads from a BufReader Can …","","Extension trait for readers implementing io::Read to allow …","Serializer for writing BinProt bytes to a writer","","Type alias for hash result","extension trait for writers implementing io::Write to …","Read a bool","Read a bool","read some bytes","read some bytes","Read a single byte as char","Read a single byte as char","Read a variable length integer","Read a variable length integer","Read a variable length natural integer","Read a variable length natural integer","Read the tag of a polyvar variant (4 bytes) You can …","Read the tag of a polyvar variant (4 bytes) You can …","Read a string","Read a string","Read a unit","Read a unit","Read the index of a variant","Read the index of a variant","Write a bool","Write a bool","Write a single char character","Write a single char character","Write a float","Write a float","Write a 64 bit float","Write a 64 bit float","Write a variable length integer","Write a variable length integer","bin_prot also supports a slightly different encoding …","bin_prot also supports a slightly different encoding …","For Polyvar types write the 4 bytes of the tag/hash for a …","For Polyvar types write the 4 bytes of the tag/hash for a …","Write a unit","Write a unit","for enums/variants with n variants the variant index is …","for enums/variants with n variants the variant index is …","","","","","Hash the label string (ASCII not UTF-8) into a OCaml style …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The loose deserializer version of deserialize Only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error objects and codes","Returns the argument unchanged.","Returns the argument unchanged.","Convenience method, create a BinProt deserializer from the …","Create a BinProt deserializer from a reader","The variable length integer types used in BinProt By …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Deserialization mode, StronglyTyped or LooselyTyped","Create a new serializer given a writer","BufReader to read the bytes from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenience function, creates  serializer and uses it to …","","","","","","","The Value enum, a loosely typed way of representing any …","Converts a strong type deserializer into a loose type …","Some user-defined error occurred.","Have not provided a layout","Destination integer type too small","The end of stream was reached unexpectedly.","Error type for BinProt serialization and deserialization","Invalid byte encountered when deserializing","Invalid integer prefix byte","Invalid byte encountered deserializing option","Invalid utf-8 char","Error in underlying IO","Layout iterator errored, can be due to invalid layout or …","Size not given when serializing a sequence","A result whose error type is <code>Error</code>.","Size not given when serializing a sequence","The layout ended before the reader is empty","There is no logic implemented to deserialize this rule yet","An unknown custom type found in layout that deserializer …","When deserializing a polyvar the tag does not match any …","Encountered a variant index larger than allowed","Functionality will not be implemented. Probably it does …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Bytes that are allowed in this context","The byte that is invalid","Invalid byte encountered","Invalid byte sequence encountered","The data type that the deserializer is attempting to …","Invalid byte encountered","Invalid index encountered","The user-defined error message.","The custom type identifier","Implements serializer and deserializer for BinProt …","Implements serializer and deserializer for BinProt …","Deserializer for variable length integer","Serializer for variable length integer","Deserializer for variable length natural integer","Serializer for variable length natural integer","Boolean","Char","This is the data that needs to be serialized and passed to …","Float","A type that can be used to index into a <code>bin_prot::Value</code>.","Variable length integer","List of types (variable length)","Variable length natural integer","Option","Polymorphic Variant (Polyvar) types","records/structs","String","Sum/enum types","Tuples (fixed length list)","Unit type","Recursive enum that can define any BinProt serializable …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Index of variant","Return None if the key is not already in the array or …","Inner reveals an Option variant as a Rust Option type …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Defines a BinProt layout A layout is a data structure that …","Name of variant","","Serialization implementation for a BinProt loosely typed …","","","","","","","","","","","","","","","","","","","","summand index","summand/variant name","Polyvar variant name","Polyvar variant tag (e.g. hash)","value wrapped by variant","value wrapped by variant","A set of utils for dealing with <code>bigarrays</code> of <code>char</code>","Recursively defined BinProtRule is how the type tree is …","Boolean","OCaml char type","Type that does not use standard derived BinProt encoding","does not occur in source files, used in traverse","Floating point number","Entry in a BinProt hash table hash types for the key and …","Hash table of BinProt types","An instance of Γ(a)","Variable length integer","32 bit Integer","64 bit Integer","The main top level type for a layout file. Parse into this …","Variable length list of any BinProt type","Variable length natural Integer","OS Native integer","OCaml option","τ ≤ Γ(a), τ is an instance of Γ(a) and (Γ(a) a type …","τ ≤ Γ(a), τ is an instance of Γ(a) and (Γ(a) a type …","records/structs","Field of a BinProt record with a name and a value","track indirections for debugging","Resolved Payload","Resolved reference of payload","Define rule reference into Resolved and Unresolved Payload","inside a recursive type, list of type parameters","OCaml string type (different to a rust string)","sum types/enums","Variant of a BinProt sum type (enum) has a name, index and …","An instance of Γ(a)","τ ≤ Γ(a), τ is an instance of Γ(a) and (Γ(a) a type …","tuple","parameterized type: ’a t = …","recursive parameterized type with bindings","your type","Unit type","Unresolved Payload","Unable to resolve reference of payload","fixed length of BinProt types","Rule defining this layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,3,4,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,0,3,4,0,3,0,3,4,3,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,3,4,3,4,3,4,0,3,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,7,8,8,9,10,8,11,12,13,14,0,0,0,0,0,0,15,15,0,15,0,15,15,15,15,15,15,15,15,15,15,0,16,15,16,15,15,15,15,16,15,15,15,16,15,15,16,17,15,16,15,0,16,15,0,16,15,15,16,15,16,15,16,15,18,19,20,21,22,23,24,25,26,27,28,28,29,29,28,29,30,0,30,30,30,30,30,0,30,31,30,30,30,0,30,30,30,30,0,30,30,0,30,32,0,0,30,30,30,0,31,0,30,30,30,30,30,32,0,30,33,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,30,34,35,36,31,37,32,38,39,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,30,33,30,34,35,36,31,37,32,38,39,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,33,30,34,35,36,31,37,32,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,47,51,52,54,55,56,57,58],"f":[null,null,null,null,null,null,null,null,[[["",0]],["result",6,[["bool",0]]]],[[["",0]],["result",6,[["bool",0]]]],[[["",0]],["result",6,[["vec",3,[["u8",0]]]]]],[[["",0]],["result",6,[["vec",3,[["u8",0]]]]]],[[["",0]],["result",6,[["char",0]]]],[[["",0]],["result",6,[["char",0]]]],[[["",0]],["result",6,[["fromprimitive",8]]]],[[["",0]],["result",6,[["fromprimitive",8]]]],[[["",0]],["result",6,[["",26,[["fromprimitive",8],["unsigned",8]]]]]],[[["",0]],["result",6,[["",26,[["fromprimitive",8],["unsigned",8]]]]]],[[["",0]],["result",6,[["u32",0]]]],[[["",0]],["result",6,[["u32",0]]]],[[["",0]],["result",6,[["string",3]]]],[[["",0]],["result",6,[["string",3]]]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6,[["u8",0]]]],[[["",0]],["result",6,[["u8",0]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["char",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["char",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["f32",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["f32",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["f64",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["f64",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["into",8,[["i64",0]]]],["result",4,[["usize",0],["error",3]]]],[[["",0],["into",8,[["i64",0]]]],["result",4,[["usize",0],["error",3]]]],[[["",0],["into",8,[["u64",0]]]],["result",4,[["usize",0],["error",3]]]],[[["",0],["into",8,[["u64",0]]]],["result",4,[["usize",0],["error",3]]]],[[["",0],["u32",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["u32",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["u8",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["u8",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["varianthash",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3],["str",0]],["result",6]],[[["deserializer",3],["str",0]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["ds",3,[["read",8],["looselytyped",3]]]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3],["str",0]],["result",4]],[[["deserializer",3],["str",0]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3],["str",0]],["result",4]],[[["deserializer",3],["str",0]],["result",6]],[[["deserializer",3],["usize",0]],["result",6]],[[["deserializer",3],["usize",0]],["result",4]],[[["deserializer",3],["str",0],["usize",0]],["result",6]],[[["deserializer",3],["str",0],["usize",0]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",6]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",4]],[[["deserializer",3]],["result",6]],[[["deserializer",3],["str",0]],["result",4]],[[["deserializer",3],["str",0]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3]],["result",6]],null,[[]],[[]],[[["read",8]],["result",6,[["deserialize",8]]]],[[["read",8]],["deserializer",3,[["read",8],["stronglytyped",3]]]],null,[[]],[[]],null,[[],["serializer",3]],null,[[["serializer",3],["bool",0]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3],["char",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["f32",0]],["result",6]],[[["serializer",3],["f64",0]],["result",6]],[[["serializer",3],["str",0],["",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["str",0],["",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["i16",0]],["result",6]],[[["serializer",3],["i32",0]],["result",6]],[[["serializer",3],["i64",0]],["result",6]],[[["serializer",3],["i8",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["option",4,[["usize",0]]]],["result",6]],[[["serializer",3],["str",0],["",0]],["result",6]],[[["serializer",3],["str",0],["u32",0],["str",0],["",0]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3],["option",4,[["usize",0]]]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["serializer",3],["str",0]],["result",6]],[[["serializer",3],["str",0],["usize",0]],["result",6]],[[["serializer",3],["str",0],["u32",0],["str",0],["usize",0]],["result",6]],[[["serializer",3],["usize",0]],["result",6]],[[["serializer",3],["str",0],["usize",0]],["result",6]],[[["serializer",3],["str",0],["u32",0],["str",0],["usize",0]],["result",6]],[[["serializer",3],["u16",0]],["result",6]],[[["serializer",3],["u32",0]],["result",6]],[[["serializer",3],["u64",0]],["result",6]],[[["serializer",3],["u8",0]],["result",6]],[[["serializer",3]],["result",6]],[[["serializer",3],["str",0]],["result",6]],[[["serializer",3],["str",0],["u32",0],["str",0]],["result",6]],[[["serializer",3],["",0]],["result",6]],[[["",0],["",0]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["deserializer",3,[["read",8],["stronglytyped",3]]],["binprotrule",4]],["deserializer",3,[["read",8],["looselytyped",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["display",8]],["error",4]],[[["display",8]],["error",4]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["error",3]],["error",4]],[[]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["",0]],["result",4]],[[],["result",4]],[[["",0]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["value",4]],["value",4]],[[["",0],["",0]]],[[],["value",4]],[[],["result",4,[["enumdata",3]]]],[[],["result",4,[["value",4]]]],[[["value",4],["value",4]],["bool",0]],[[["value",4],["formatter",3]],["result",6]],[[]],[[]],[[["value",4]],["value",4]],null,[[["",0],["value",4]],["option",4,[["value",4]]]],[[["value",4]],["option",4,[["value",4]]]],[[]],[[]],null,null,[[["value",4],["value",4]],["bool",0]],null,[[["enumdata",3]],["result",4]],[[["value",4]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["binprotrule",4]],["binprotrule",4]],[[["recordfield",3]],["recordfield",3]],[[["summand",3]],["summand",3]],[[["hashtblentry",3]],["hashtblentry",3]],[[["polyvar",4]],["polyvar",4]],[[["taggedpolyvar",3]],["taggedpolyvar",3]],[[["ruleref",4]],["ruleref",4]],[[["unresolvedpayload",3]],["unresolvedpayload",3]],[[["resolvedpayload",3]],["resolvedpayload",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["result",4,[["layout",3]]]],[[],["result",4,[["binprotrule",4]]]],[[],["result",4,[["recordfield",3]]]],[[],["result",4,[["summand",3]]]],[[],["result",4,[["hashtblentry",3]]]],[[],["result",4,[["polyvar",4]]]],[[],["result",4,[["taggedpolyvar",3]]]],[[],["result",4,[["ruleref",4]]]],[[],["result",4,[["unresolvedpayload",3]]]],[[],["result",4,[["resolvedpayload",3]]]],[[["layout",3],["formatter",3]],["result",6]],[[["binprotrule",4],["formatter",3]],["result",6]],[[["recordfield",3],["formatter",3]],["result",6]],[[["summand",3],["formatter",3]],["result",6]],[[["hashtblentry",3],["formatter",3]],["result",6]],[[["polyvar",4],["formatter",3]],["result",6]],[[["taggedpolyvar",3],["formatter",3]],["result",6]],[[["ruleref",4],["formatter",3]],["result",6]],[[["unresolvedpayload",3],["formatter",3]],["result",6]],[[["resolvedpayload",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["binprotrule",4]]],[[["layout",3]],["result",4]],[[["binprotrule",4]],["result",4]],[[["recordfield",3]],["result",4]],[[["summand",3]],["result",4]],[[["hashtblentry",3]],["result",4]],[[["polyvar",4]],["result",4]],[[["taggedpolyvar",3]],["result",4]],[[["ruleref",4]],["result",4]],[[["unresolvedpayload",3]],["result",4]],[[["resolvedpayload",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[8,"ReadBinProtExt"],[8,"WriteBinProtExt"],[3,"Deserializer"],[3,"Serializer"],[4,"Error"],[13,"Io"],[13,"UnknownPolyvarTag"],[13,"InvalidByte"],[13,"InvalidIntegerByte"],[13,"InvalidUtf8"],[13,"InvalidOptionByte"],[13,"VariantIndexTooLarge"],[13,"Custom"],[13,"UnknownCustomType"],[4,"Value"],[3,"EnumData"],[8,"Index"],[13,"Nat0"],[13,"Bool"],[13,"String"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Option"],[13,"Record"],[13,"Tuple"],[13,"List"],[13,"Sum"],[13,"Polyvar"],[4,"BinProtRule"],[4,"Polyvar"],[4,"RuleRef"],[3,"Layout"],[3,"RecordField"],[3,"Summand"],[3,"HashTblEntry"],[3,"TaggedPolyvar"],[3,"UnresolvedPayload"],[3,"ResolvedPayload"],[13,"Option"],[13,"Record"],[13,"Tuple"],[13,"Sum"],[13,"Polyvar"],[13,"List"],[13,"Hashtable"],[13,"Vec"],[13,"Reference"],[13,"TypeVar"],[13,"SelfReference"],[13,"TypeAbstraction"],[13,"TypeClosure"],[13,"Custom"],[13,"CustomForPath"],[13,"Tagged"],[13,"Inherited"],[13,"Unresolved"],[13,"Resolved"]]},\
"bin_prot_checker":{"doc":"","t":[13,13,13,13,13,13,13,13,4,13,13,13,13,13,3,13,3,13,4,4,4,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["A","A","B","B","Bool","C","C","Deserialize","E","Enum","Int","Int32","Int64","Nat0","Opt","Record","S","Serialize","Subcommand","Test","V","Variant","a","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clap","clap","cmd","deserialize","deserialize","deserialize","deserialize_test","fmt","fmt","fmt","from","from","from","from","from","from","from_clap","from_clap","from_str","into","into","into","into","into","into","main","path","serialize","serialize","serialize","serialize","test","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0"],"q":["bin_prot_checker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bin_prot_checker::Test","","","","","","","","bin_prot_checker::V","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Output file, stdout if not present","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,2,3,1,2,4,0,3,3,3,3,3,0,3,0,4,0,0,0,3,5,5,6,4,1,5,2,3,6,4,1,5,2,3,5,6,4,6,1,5,2,0,1,5,2,6,4,1,5,2,3,6,4,3,6,4,1,5,2,3,0,6,1,5,2,3,6,3,6,4,1,5,2,3,6,4,1,5,2,3,6,4,1,5,2,3,7,8,9,10,11,12,13,14,15,16,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[],["app",3]],[[],["app",3]],null,[[],["result",4,[["e",4]]]],[[],["result",4,[["s",3]]]],[[],["result",4,[["v",4]]]],[[["read",8],["test",4]],["result",4,[["test",4],["error",4]]]],[[["e",4],["formatter",3]],["result",6]],[[["s",3],["formatter",3]],["result",6]],[[["v",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]],["opt",3]],[[["argmatches",3]],["subcommand",4]],[[["str",0]],["result",4,[["test",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["e",4]],["result",4]],[[["s",3]],["result",4]],[[["v",4]],["result",4]],[[["test",4]],["result",4]],null,[[["test",4]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"E"],[4,"V"],[4,"Test"],[4,"Subcommand"],[3,"S"],[3,"Opt"],[13,"Nat0"],[13,"Bool"],[13,"Int"],[13,"Int32"],[13,"Int64"],[13,"Enum"],[13,"Record"],[13,"Variant"],[13,"A"],[13,"B"],[13,"C"]]},\
"mina_consensus":{"doc":"Contains definitions of data structures and APIs for mina …","t":[0,0,0,12,8,16,8,3,3,11,11,11,11,11,11,10,11,10,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,10,11,12,10,11,12,11,11,11,11,10,11,12,10,11,10,11,11,10,11,10,11,10,11,10,11,12,12,10,11,12,11,10,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["common","error","genesis","0","Chain","Chain","Consensus","ConsensusConstants","ProtocolStateChain","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config","config","consensus_state","consensus_state","default","delta","deref","deref","deref_mut","deref_mut","devnet","drop","drop","epoch_slot","epoch_slot","fmt","from","from","genesis_block","genesis_block","genesis_state_timestamp","global_slot","global_slot","grace_period_end","init","init","into","into","is_short_range","is_short_range","k","last_vrf_hash","last_vrf_hash","length","length","mainnet","push","push","relative_min_window_density","relative_min_window_density","select_longer_chain","select_longer_chain","select_secure_chain","select_secure_chain","slots_per_epoch","slots_per_sub_window","state_hash","state_hash","sub_windows_per_window","to_owned","top","top","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CandidatesNotFound","ConsensusError","ConsensusStateNotFound","GlobalSlotNotFound","InvalidHeight","TopBlockNotFound","borrow","borrow_mut","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","to_string","try_from","try_into","type_id","vzip","DEVNET_CONFIG","Genesis","GenesisInitConfig","MAINNET_CONFIG","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_genesis_config","init","init","init","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["mina_consensus","","","mina_consensus::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_consensus::error","","","","","","","","","","","","","","","","","","","","","","mina_consensus::genesis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Implements common APIs for the blockchain in the context …","Types that represent errors in mina consensus operations","This modules contains all genesis block related stuff","","Trait that represents a chain of block data structure","Chain type","A trait that defines operations for consensus calculation","Type that defines constant values for mina consensus …","A chain of ProtocolState","","","","","","","Constants used for consensus","","he function returns the consensus state of a block or …","","","Maximum permissable delay of packets (in slots after the …","","","","","Pre-defined constant values for devnet","","","The function computes the epoch slot number of a block. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets ProtocolState of the genesis block","","Timestamp of genesis block in unixtime","The function returns the global slot number of a chain or …","","Number of slots before minimum density is used in chain …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the fork is short range wrt to candidate …","","Point of finality (number of confirmations)","This function returns the hex digest of the hash of the …","","The function the length of a chain. The output is the …","","Pre-defined constant values for mainnet","Pushes an item into the chain","","Calculates the relate minimum window density wrt to …","Computes the relative minimum window density of the given …","Selects the longer chain when there’s a short range fork.","","Top level API to select between chains during a fork.","","Number of slots per epoch","No of slots in a sub-window = 7","This function returns hash of the top block’s protocol …","","Sub windows within a window","","This function returns the last block of a given chain. The …","","","","","","","","","","candidates not found","Type that represents errors in mina consensus operations","Consensus state not found","Global slot not found","header must have height 1 greater than top","Top block not found","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Config instance for initializing genesis block in devnet","Trait for genesis block initialization logic","Config for initializing genesis block","Config instance for initializing genesis block in mainnet","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a genesis block from config","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,1,0,2,0,0,0,3,1,3,1,1,1,2,1,4,1,1,3,3,1,3,1,3,3,1,4,1,1,3,1,4,1,3,4,1,3,3,1,3,1,2,1,3,4,1,4,1,3,4,1,2,1,2,1,2,1,3,3,4,1,3,1,4,1,3,1,3,1,3,1,3,1,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,6,7,8,6,7,8,6,7,7,8,8,6,7,8,6,7,8,6,7,8,9,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolstatechain",3]],["protocolstatechain",3]],[[["",0],["",0]]],[[["",0]],["consensusconstants",3]],[[["protocolstatechain",3]],["consensusconstants",3]],[[["",0]],["option",4,[["consensusstate",3]]]],[[["protocolstatechain",3]],["option",4,[["consensusstate",3]]]],[[],["protocolstatechain",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["consensusconstants",3]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["option",4,[["u32",0]]]],[[["protocolstatechain",3]],["option",4,[["u32",0]]]],[[["protocolstatechain",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["option",4,[["protocolstate",3]]]],[[["protocolstatechain",3]],["option",4,[["protocolstate",3]]]],null,[[["",0]],["option",4,[["globalslot",3]]]],[[["protocolstatechain",3]],["option",4,[["globalslot",3]]]],null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0],["protocolstatechain",3]],["result",4,[["bool",0],["consensuserror",4]]]],[[["protocolstatechain",3],["protocolstatechain",3]],["result",4,[["bool",0],["consensuserror",4]]]],null,[[["",0]],["option",4,[["fp",6]]]],[[["protocolstatechain",3]],["option",4,[["fp",6]]]],[[["",0]],["usize",0]],[[["protocolstatechain",3]],["usize",0]],[[],["consensusconstants",3]],[[["",0]],["result",4,[["consensuserror",4]]]],[[["protocolstatechain",3],["protocolstate",3]],["result",4,[["consensuserror",4]]]],[[["",0],["protocolstatechain",3]],["result",4,[["u32",0],["consensuserror",4]]]],[[["protocolstatechain",3],["protocolstatechain",3]],["result",4,[["u32",0],["consensuserror",4]]]],[[["",0],["protocolstatechain",3]],["result",4,[["protocolstatechain",3],["consensuserror",4]]]],[[["protocolstatechain",3],["protocolstatechain",3]],["result",4,[["protocolstatechain",3],["consensuserror",4]]]],[[["",0]],["result",4,[["protocolstatechain",3],["consensuserror",4]]]],[[["protocolstatechain",3]],["result",4,[["protocolstatechain",3],["consensuserror",4]]]],null,null,[[["",0]],["option",4,[["fp",6]]]],[[["protocolstatechain",3]],["option",4,[["fp",6]]]],null,[[["",0]]],[[["",0]],["option",4]],[[["protocolstatechain",3]],["option",4,[["protocolstate",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["consensuserror",4],["consensuserror",4]],["bool",0]],[[["consensuserror",4],["formatter",3]],["result",6]],[[["consensuserror",4],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["mainnet_config",3]],["genesisinitconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["devnet_config",3]],["genesisinitconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[]],[[["genesisinitconfig",3]],["externaltransition",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ProtocolStateChain"],[8,"Consensus"],[3,"ConsensusConstants"],[8,"Chain"],[4,"ConsensusError"],[3,"GenesisInitConfig"],[3,"MAINNET_CONFIG"],[3,"DEVNET_CONFIG"],[8,"Genesis"]]},\
"mina_crypto":{"doc":"Contains definitions of common simple crypto primitives …","t":[0,0,14,0,12,12,3,3,3,3,8,8,3,3,18,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,8,5,10,10,2],"n":["hash","hex","impl_from_for_hash","prelude","0","0","AuxHash","ChainHash","CoinBaseHash","EpochSeed","Hash","Hashable","LedgerHash","NonSnarkStagedLedgerHash","PREFIX","PendingCoinbaseAuxHash","SnarkedLedgerHash","StagedLedgerHash","StateHash","VrfOutputHash","aux_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_string","domain_string","domain_string","domain_string","domain_string","domain_string","domain_string","domain_string","domain_string","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","impl_from_for_hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","ledger_hash","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","non_snark","pending_coinbase_aux","pending_coinbase_hash","prefixes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ACCOUNT","BASE_SNARK","BOWE_GABIZON_HASH","CHECKPOINT_LIST","COINBASE","COINBASE_STACK","COINBASE_STACK_DATA","COINBASE_STACK_STATE_HASH","EPOCH_SEED","HashPrefix","MERGE_SNARK","PENDING_COINBASES","PROTOCOL_STATE","PROTOCOL_STATE_BODY","RECEIPT_CHAIN_SNAPP","RECEIPT_CHAIN_USER_COMMAND","SIDE_LOADED_VK","SIGNATURE_MAINNET","SIGNATURE_TESTNET","SNAPP_ACCOUNT","SNAPP_BODY","SNAPP_PAYLOAD","SNAPP_PREDICATE","SNAPP_PREDICATE_ACCOUNT","SNAPP_PREDICATE_PROTOCOL_STATE","TRANSITION_SYSTEM_SNARK","VRF_MESSAGE","VRF_OUTPUT","Error","HexEncodable","skip_0x_prefix_when_needed","to_hex_string","try_from_hex","HexEncodable"],"q":["mina_crypto","","","","mina_crypto::hashmina_crypto::hash::prefixes","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_crypto::hex","","","","","mina_crypto::prelude"],"d":["","","","","","","","","","","Trait that any internal hash wrapper type must implement …","Any internal type that needs to be hashed must implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,8,9,10,11,4,1,2,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,5,6,6,7,7,8,8,9,9,10,10,11,4,1,1,2,2,12,12,5,5,5,6,6,6,7,7,7,8,8,8,8,9,9,9,10,10,10,11,11,4,4,1,1,1,2,2,2,12,12,12,5,6,7,8,9,10,1,2,12,13,13,0,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,4,5,6,7,8,9,10,11,4,1,2,12,11,4,11,0,5,6,7,8,9,10,11,4,1,2,12,5,6,8,9,10,11,4,1,2,5,6,7,8,9,10,1,2,12,5,5,6,6,7,7,8,8,9,9,10,10,11,4,1,1,2,2,12,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,5,6,7,8,9,10,11,4,1,2,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,14,14,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["statehash",3]],["statehash",3]],[[["ledgerhash",3]],["ledgerhash",3]],[[["chainhash",3]],["chainhash",3]],[[["coinbasehash",3]],["coinbasehash",3]],[[["epochseed",3]],["epochseed",3]],[[["snarkedledgerhash",3]],["snarkedledgerhash",3]],[[["stagedledgerhash",3]],["stagedledgerhash",3]],[[["nonsnarkstagedledgerhash",3]],["nonsnarkstagedledgerhash",3]],[[["auxhash",3]],["auxhash",3]],[[["pendingcoinbaseauxhash",3]],["pendingcoinbaseauxhash",3]],[[["vrfoutputhash",3]],["vrfoutputhash",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["statehash",3]],[[],["ledgerhash",3]],[[],["chainhash",3]],[[],["coinbasehash",3]],[[],["epochseed",3]],[[],["snarkedledgerhash",3]],[[],["stagedledgerhash",3]],[[],["nonsnarkstagedledgerhash",3]],[[],["auxhash",3]],[[],["pendingcoinbaseauxhash",3]],[[],["vrfoutputhash",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["statehash",3],["statehash",3]],["bool",0]],[[["ledgerhash",3],["ledgerhash",3]],["bool",0]],[[["chainhash",3],["chainhash",3]],["bool",0]],[[["coinbasehash",3],["coinbasehash",3]],["bool",0]],[[["epochseed",3],["epochseed",3]],["bool",0]],[[["snarkedledgerhash",3],["snarkedledgerhash",3]],["bool",0]],[[["stagedledgerhash",3],["stagedledgerhash",3]],["bool",0]],[[["nonsnarkstagedledgerhash",3],["nonsnarkstagedledgerhash",3]],["bool",0]],[[["auxhash",3],["auxhash",3]],["bool",0]],[[["pendingcoinbaseauxhash",3],["pendingcoinbaseauxhash",3]],["bool",0]],[[["vrfoutputhash",3],["vrfoutputhash",3]],["bool",0]],[[["statehash",3],["formatter",3]],["result",4,[["error",3]]]],[[["statehash",3],["formatter",3]],["result",6]],[[["ledgerhash",3],["formatter",3]],["result",4,[["error",3]]]],[[["ledgerhash",3],["formatter",3]],["result",6]],[[["chainhash",3],["formatter",3]],["result",4,[["error",3]]]],[[["chainhash",3],["formatter",3]],["result",6]],[[["coinbasehash",3],["formatter",3]],["result",6]],[[["coinbasehash",3],["formatter",3]],["result",4,[["error",3]]]],[[["epochseed",3],["formatter",3]],["result",6]],[[["epochseed",3],["formatter",3]],["result",4,[["error",3]]]],[[["snarkedledgerhash",3],["formatter",3]],["result",6]],[[["snarkedledgerhash",3],["formatter",3]],["result",4,[["error",3]]]],[[["stagedledgerhash",3],["formatter",3]],["result",6]],[[["nonsnarkstagedledgerhash",3],["formatter",3]],["result",6]],[[["auxhash",3],["formatter",3]],["result",4,[["error",3]]]],[[["auxhash",3],["formatter",3]],["result",6]],[[["pendingcoinbaseauxhash",3],["formatter",3]],["result",4,[["error",3]]]],[[["pendingcoinbaseauxhash",3],["formatter",3]],["result",6]],[[["vrfoutputhash",3],["formatter",3]],["result",6]],[[["vrfoutputhash",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["statehashv1json",6]],["statehash",3]],[[["hashv1",6]],["statehash",3]],[[["hashv1",6]],["ledgerhash",3]],[[["ledgerhashv1json",6]],["ledgerhash",3]],[[]],[[]],[[["hashv1",6]],["chainhash",3]],[[["chainhashv1json",6]],["chainhash",3]],[[["coinbasehashv1json",6]],["coinbasehash",3]],[[["hash2v1",6]],["coinbasehash",3]],[[["hashv1",6]],["coinbasehash",3]],[[]],[[]],[[["hashv1",6]],["epochseed",3]],[[["epochseedhashv1json",6]],["epochseed",3]],[[]],[[["hashv1",6]],["snarkedledgerhash",3]],[[["ledgerhashv1json",6]],["snarkedledgerhash",3]],[[["stagedledgerhashv1",6]],["stagedledgerhash",3]],[[]],[[]],[[["nonsnarkstagedledgerhashv1",6]],["nonsnarkstagedledgerhash",3]],[[["vec",3,[["u8",0]]]],["auxhash",3]],[[]],[[["auxhashjson",6]],["auxhash",3]],[[]],[[["pendingcoinbaseauxhashjson",6]],["pendingcoinbaseauxhash",3]],[[["vec",3,[["u8",0]]]],["pendingcoinbaseauxhash",3]],[[["vrfoutputhashv1json",6]],["vrfoutputhash",3]],[[["hashv1",6]],["vrfoutputhash",3]],[[]],[[["str",0]],["result",4,[["statehash",3]]]],[[["str",0]],["result",4,[["ledgerhash",3]]]],[[["str",0]],["result",4,[["chainhash",3]]]],[[["str",0]],["result",4,[["coinbasehash",3]]]],[[["str",0]],["result",4,[["epochseed",3]]]],[[["str",0]],["result",4,[["snarkedledgerhash",3]]]],[[["str",0]],["result",4,[["auxhash",3]]]],[[["str",0]],["result",4,[["pendingcoinbaseauxhash",3]]]],[[["str",0]],["result",4,[["vrfoutputhash",3]]]],[[["",0]]],[[["",0]]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["statehash",3],["statehash",3]],["bool",0]],[[["ledgerhash",3],["ledgerhash",3]],["bool",0]],[[["chainhash",3],["chainhash",3]],["bool",0]],[[["coinbasehash",3],["coinbasehash",3]],["bool",0]],[[["epochseed",3],["epochseed",3]],["bool",0]],[[["snarkedledgerhash",3],["snarkedledgerhash",3]],["bool",0]],[[["stagedledgerhash",3],["stagedledgerhash",3]],["bool",0]],[[["nonsnarkstagedledgerhash",3],["nonsnarkstagedledgerhash",3]],["bool",0]],[[["auxhash",3],["auxhash",3]],["bool",0]],[[["pendingcoinbaseauxhash",3],["pendingcoinbaseauxhash",3]],["bool",0]],[[["vrfoutputhash",3],["vrfoutputhash",3]],["bool",0]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["statehash",3]],["roinput",3]],[[["ledgerhash",3]],["roinput",3]],[[["coinbasehash",3]],["roinput",3]],[[["epochseed",3]],["roinput",3]],[[["snarkedledgerhash",3]],["roinput",3]],[[["stagedledgerhash",3]],["roinput",3]],[[["nonsnarkstagedledgerhash",3]],["roinput",3]],[[["auxhash",3]],["roinput",3]],[[["pendingcoinbaseauxhash",3]],["roinput",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[["str",0]],["result",4,[["statehash",3]]]],[[["str",0]],["result",4,[["ledgerhash",3]]]],[[],["result",4]],[[["str",0]],["result",4,[["chainhash",3]]]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["coinbasehash",3]]]],[[["str",0]],["result",4,[["epochseed",3]]]],[[],["result",4]],[[["str",0]],["result",4,[["snarkedledgerhash",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["auxhash",3]]]],[[],["result",4]],[[["str",0]],["result",4,[["pendingcoinbaseauxhash",3]]]],[[],["result",4]],[[["str",0]],["result",4,[["vrfoutputhash",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["",0]],["string",3]],[[["asref",8]],["result",4]],null],"p":[[3,"AuxHash"],[3,"PendingCoinbaseAuxHash"],[8,"Hash"],[3,"NonSnarkStagedLedgerHash"],[3,"StateHash"],[3,"LedgerHash"],[3,"ChainHash"],[3,"CoinBaseHash"],[3,"EpochSeed"],[3,"SnarkedLedgerHash"],[3,"StagedLedgerHash"],[3,"VrfOutputHash"],[8,"Hashable"],[8,"HexEncodable"]]},\
"mina_ledger":{"doc":"Functionality relating to the ledger or genesis ledgers","t":[16,8,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","GenesisLedger","MinaLedgerMerkleHasher","MinaLedgerMerkleTree","RocksDbGenesisLedger","accounts","accounts","borrow","borrow_mut","depth","depth","deref","deref_mut","drop","from","init","into","into_iter","new","to_mina_merkle_ledger","to_mina_merkle_ledger","try_from","try_into","type_id","vzip"],"q":["mina_ledger","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error type that can be produces when trying to access the …","A genesis ledger provides access to its accounts by …","Type alias for mina merkle ledger hasher","Type alias for mina merkle ledger","A genesis ledger backed by a RocksDB instance","Return a iterator over the accounts in this genesis ledger …","Return a iterator over the accounts in this genesis ledger …","","","Return the depth of the ledger","Return the depth of the ledger","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new rocksDB genesis ledger given a database …","Build mina merkle ledger tree with a fixed height","Build mina merkle ledger tree with a fixed height","","","",""],"i":[1,0,0,0,0,1,1,2,2,1,1,2,2,2,2,2,2,2,2,1,1,2,2,2,2],"f":[null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["rocksdbgenesisledger",3]],["box",3,[["iterator",8]]]],[[["db",6]],["rocksdbgenesisledger",3]],[[["",0]],["minaledgermerkletree",6]],[[["",0]],["minaledgermerkletree",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]]],"p":[[8,"GenesisLedger"],[3,"RocksDbGenesisLedger"]]},\
"mina_merkle":{"doc":"mina-merkle crate provides traits and data structure …","t":[3,16,16,16,16,16,16,8,8,8,8,8,3,3,3,3,8,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,2,2,16,8,6,8,8,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,10,10,11,11,11,11,11,10,11,11,11,10,11,11,0,10,0,11,11,11,10,11,11,11,10,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,3,6,3,13,4,3,6,3,3,3,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,0,12,11,11,12,12,0,0,10,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,3,4,13,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,13,13,13,13,13,3,17,13,3,4,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,3,12,12,8,8,8,0,0,0,10,0,0,10,10,10,0,0,11,10,10,10,0,10,10,11,10,10,10,10,10,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,8,10,10,10,10,8,10,10,10,10,13,13,8,4,6,11,11,11,11,11,11,11,11,11,11,11,10,10,10,5,11,11,11,11,10,10,10,11,11,11,11,11,11,8,18,11,5,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,5,5,6,6,0,6,6,5,5],"n":["FixedHeightMode","Hash","Hash","Hash","Item","Item","Item","MaskableMerkleTree","MaskingMerkleTree","MerkleHasher","MerkleMerger","MerkleTree","MerkleTreeNodeMetadata","MinaMerkleTree","MinaPoseidonMerkleHasher","MinaPoseidonMerkleMerger","PoseidonLegacyHasherPoolProvider","VariableHeightMode","add","add","add","add_batch","add_batch","add_batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","count","count","count","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","get_pool","hash","hash","height","height","height","height","impl_poseidon_legacy_hasher_pool_provider","impl_poseidon_legacy_hasher_pool_provider","init","init","init","init","init","init","into","into","into","into","into","into","macros","merge","merge","new","new","new","prefixes","register","root","root","root","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unregister","update","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","lockfree_object_pool","once_cell","D","DomainParameter","Fp","Hashable","Hasher","PoseidonHasherKimchi","PoseidonHasherLegacy","ROInput","append_bool","append_bytes","append_field","append_hashable","append_roinput","append_scalar","append_u32","append_u64","borrow","borrow_mut","clone","clone_into","create_kimchi","create_legacy","default","deref","deref_mut","digest","domain_string","drop","eq","fmt","from","hash","init","init","init_and_hash","into","into_bytes","ne","new","poseidon","reset","roinput","to_bytes","to_fields","to_owned","to_roinput","try_from","try_into","type_id","update","vzip","Poseidon","PoseidonHasherKimchi","PoseidonHasherLegacy","borrow","borrow_mut","deref","deref_mut","digest","drop","from","init","init","into","reset","try_from","try_into","type_id","update","vzip","ROInput","BaseField","CompressedPubKey","CurvePoint","Keypair","MAINNET","NetworkId","PubKey","ScalarField","Schnorr","SecKey","Signature","Signer","TESTNET","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_kimchi","create_legacy","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_address","from_address","from_hex","from_parts_unsafe","from_point_unsafe","get_address","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_address","into_address","into_bytes","into_compressed","into_point","into_scalar","is_odd","keypair","ne","ne","ne","ne","ne","new","new","pubkey","public","rand","rand","rx","s","schnorr","seckey","sign","sign","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","Keypair","KeypairError","NonCurvePoint","Result","SecretKeyBytes","SecretKeyHex","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","public","to_owned","to_string","try_from","try_into","type_id","vzip","AddressBase58","AddressChecksum","AddressLength","AddressRawByteLength","AddressVersion","CompressedPubKey","MINA_ADDRESS_LEN","NonCurvePoint","PubKey","PubKeyError","Result","XCoordinate","XCoordinateBytes","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","is_odd","to_owned","to_string","try_from","try_into","type_id","vzip","x","Schnorr","SecKey","Signature","rx","s","ExtendedDensePolynomial","ExtendedEvaluations","FieldHelpers","adjacent_pairs","chunked_polynomial","dense_polynomial","eval_polynomial","evaluations","field_helpers","from_bits","from_bytes","from_hex","hasher","math","modulus_biguint","pow","scale","scale","serialization","shift","shiftr","size_in_bytes","square","to_bits","to_bytes","to_chunked_polynomial","to_hex","types","AdjacentPairs","borrow","borrow_mut","deref","deref_mut","drop","from","from","from","init","into","into_iter","next","try_from","try_into","type_id","vzip","ChunkedPolynomial","borrow","borrow_mut","deref","deref_mut","drop","evaluate_chunks","from","init","into","linearize","polys","size","try_from","try_into","type_id","vzip","ExtendedDensePolynomial","eval_polynomial","scale","shiftr","to_chunked_polynomial","ExtendedEvaluations","pow","scale","shift","square","DecodeHex","DeserializeBytes","FieldHelpers","FieldHelpersError","Result","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from_bits","from_bytes","from_hex","i32_to_field","init","into","modulus_biguint","size_in_bytes","to_bits","to_bytes","to_hex","to_owned","to_string","try_from","try_into","type_id","vzip","CryptoDigest","PREFIX","digest","ceil_log2","SerdeAs","borrow","borrow_mut","deref","deref_mut","deserialize_as","drop","from","init","into","ser","serialize_as","try_from","try_into","type_id","vzip","deserialize","serialize","BaseField","ScalarField","fields","BaseField","ScalarField","make_prefix_coinbase_merkle_tree","make_prefix_merkle_tree"],"q":["mina_merkle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros","","mina_merkle::macros::mina_hasher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros::mina_hasher::poseidon","","","","","","","","","","","","","","","","","","","mina_merkle::macros::mina_hasher::roinput","mina_merkle::macros::mina_signermina_merkle::macros::mina_signer::keypair","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros::mina_signer::pubkey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros::mina_signer::schnorr","mina_merkle::macros::mina_signer::seckey","mina_merkle::macros::mina_signer::signature","","","mina_merkle::macros::o1_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros::o1_utils::adjacent_pairs","","","","","","","","","","","","","","","","","mina_merkle::macros::o1_utils::chunked_polynomial","","","","","","","","","","","","","","","","","mina_merkle::macros::o1_utils::dense_polynomial","","","","","mina_merkle::macros::o1_utils::evaluations","","","","","mina_merkle::macros::o1_utils::field_helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_merkle::macros::o1_utils::hasher","","","mina_merkle::macros::o1_utils::math","mina_merkle::macros::o1_utils::serialization","","","","","","","","","","","","","","","","mina_merkle::macros::o1_utils::serialization::ser","","mina_merkle::macros::o1_utils::types","","","mina_merkle::macros::o1_utils::types::fields","","mina_merkle::prefixes",""],"d":["Type state mode for a tree with a fixed height","Type of the hash values","Type that represents the hash value","Type that represents the hash value","Type of the leaf data","Type that MerkleHasher calculates hash from","Item type","A merkle tree that can be masked by …","A merkle tree that can be used to mask …","Trait for implementing merkle tree hasher degree defaults …","Trait that merges the hashes of child nodes and calculates …","Trait for implementing general n-degree merkle tree","Metadata of a give tree node, including index and depth in …","Special complete binary merkle tree that is compatible with","Hasher for mina binary merkle tree that uses poseidon hash","Merger for mina binary merkle tree that uses poseidon hash …","Trait that provides poseidon hasher pool as it’s …","Type state mode for a tree with a variable height that …","Adds a new leaf","","","Adds a batch of leaves in the give order","","","","","","","","","","","","","","","","","Commits changes from a super::MaskingMerkleTree to the …","Number of leafs","","","","","","","distance to the root node","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets hasher pool for the associated Item type","Calculates hash from an item and its associated metadata","","Height of the tree, leaf nodes that store data are counted","","","distance to the leaf nodes that store data","Macro that auto-implements PoseidonLegacyHasherPoolProvider","Macro that auto-implements PoseidonLegacyHasherPoolProvider","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Re-exports external types that macro implementations …","Merges hashes of child nodes, with metadata of the target …","","Creates a new instance of a fixed height MinaMerkleTree","Creates a new instance of a variable height MinaMerkletree","Creates a new instance of MerkleTreeNodeMetadata with the …","This module defines functions that generate domain prefix …","Register a super::MaskingMerkleTree","Root hash, lazy-evaluated","","","","","","","","","","","","","","","","","","","","","","Unregister a super::MaskingMerkleTree","Update a super::MaskingMerkleTree with changed notified …","","","","","","","Creates a new instance of MinaMerkleTree with estimated …","","","Generic domain string argument type","The domain parameter trait is used during hashing to …","","Interface for hashable objects","Interface for hashing <code>Hashable</code> inputs","Poseidon hasher type with experimental kimchi plonk sponge …","Poseidon hasher type with legacy plonk sponge constants","Random oracle input structure","Append a single bit","Append bytes","Append a base field element","Append a <code>Hashable</code> input","Append another random oracle input","Append a scalar field element","Append a 32-bit unsigned integer","Append a 64-bit unsigned integer","","","","","Create an experimental kimchi hasher context","Create a legacy hasher context","","","","Obtain has result output","Generate unique domain string of length <code>&lt;= 20</code>.","","","","Returns the argument unchanged.","Hash input and obtain result output","Set the initial state based on domain separation string …","","Initialize state, hash input and obtain result output","Calls <code>U::from(self)</code>.","Conversion into vector of bytes","","Create a new empty random oracle input","Mina Poseidon hasher","Restore the initial state that was set most recently","Random oracle input structures and algorithms","Serialize random oracle input to bytes","Serialize random oracle input to vector of base field …","","Serialization to random oracle input","","","","Consume hash <code>input</code>","","Poseidon hasher context","Poseidon hasher type with experimental kimchi plonk sponge …","Poseidon hasher type with legacy plonk sponge constants","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Random oracle input structure","Base field element type","Compressed public keys consist of x-coordinate and …","","Keypair structure","Id for mainnet","Mina network (or blockchain) identifier","Public key","Scalar field element type","Schnorr signer context for the Mina signature algorithm","Secret key","Signature structure","Interface for signed objects","Id for all testnets","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an experimental kimchi signer context with domain …","Create a legacy signer context with domain parameters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize Mina address into public key","Deserialize Mina address into compressed public key (via …","Deserialize a keypair from secret key hex","Create a keypair from scalar field <code>secret</code> element and …","Create a public key from curve point Note: Does not check …","Obtain the Mina address corresponding to the keypair’s …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Serialize public key into corresponding Mina address","Serialize compressed public key into corresponding Mina …","","Convert public key into compressed public key","Convert public key into curve point","Convert secret key into scalar field element","Parity of y-coordinate","Keypair structures and algorithms","","","","","","Create a secret key from scalar field element","Create a new signature","Public key structures and algorithms","Public key","Generate a random keypair","Generate a random secret key","Base field component","Scalar field component","Mina Schnorr signature scheme","Secret key structures and helpers","Sign <code>input</code> (see <code>Hashable</code>) using keypair <code>kp</code> and return the …","","Mina signature structure and associated helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify that the signature <code>sig</code> on <code>input</code> (see <code>Hashable</code>) is …","","","","","","","","","X-coordinate","Keypair structure","Keypair error","point not on curve","Keypair result","Invalid secret key bytes","Invalid secret key hex","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Public key","","","","","","","Invalid address base58","Invalid address checksum","Invalid address length","Invalid raw address bytes length","Invalid address version","Compressed public keys consist of x-coordinate and …","Length of Mina addresses","Point not on curve","Public key","Public key errors","Public key Result","Invalid x-coordinate","Invalid x-coordinate bytes","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Parity of y-coordinate","","","","","","","X-coordinate","Schnorr signer context for the Mina signature algorithm","Secret key","Signature structure","Base field component","Scalar field component","An extension for the DensePolynomial type.","An extension for the Evaluations type.","Field element helpers Unless otherwise stated everything …","This module hosts the AdjacentPairs type, which can be …","","This adds a few utility functions for the DensePolynomial …","<code>eval_polynomial(coeffs, x)</code> evaluates a polynomial given …","This adds a few utility functions for the Evaluations …","","Deserialize from bits","Deserialize from bytes","Deserialize from little-endian hex","This module provides the CryptoDigest trait, which …","This modules implements some math helper functions.","Get the modulus as <code>BigUint</code>","Raise each evaluation to some power <code>pow</code>","This function “scales” (multiplies all the …","This function “scales” (multiplies) a polynomial with …","This adds a few utility functions for serializing and …","Utility function for shifting poly along domain coordinate","Shifts all the coefficients to the right.","Field size in bytes","Square each evaluation","Serialize to bits","Serialize to bytes","Convert a polynomial into chunks.","Serialize to hex","This is used to define common types and associated …","You can create a new AdjacentPairs from an iterator using:","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","This struct contains multiple chunk polynomials with …","","","","","","This function evaluates polynomial in chunks.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Multiplies the chunks of a polynomial with powers of …","The chunk polynomials.","Each chunk polynomial has degree <code>size-1</code>.","","","","","An extension for the DensePolynomial type.","<code>eval_polynomial(coeffs, x)</code> evaluates a polynomial given …","This function “scales” (multiplies all the …","Shifts all the coefficients to the right.","Convert a polynomial into chunks.","An extension for the Evaluations type.","Raise each evaluation to some power <code>pow</code>","This function “scales” (multiplies) a polynomial with …","Utility function for shifting poly along domain coordinate","Square each evaluation","","","Field element helpers Unless otherwise stated everything …","","","","","","","","","","","","","Returns the argument unchanged.","Deserialize from bits","Deserialize from bytes","Deserialize from little-endian hex","","","Calls <code>U::from(self)</code>.","Get the modulus as <code>BigUint</code>","Field size in bytes","Serialize to bits","Serialize to bytes","Serialize to hex","","","","","","","This trait can be implemented on any type that implements […","The domain separation string to use in the hash. This is …","Returns the digest of <code>self</code>. Note: this is implemented as …","Returns ceil(log2(d)) but panics if d = 0.","You can use SerdeAs with [serde_with] in order to …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","You can use this module for serialization and …","","","","","","You can use this to deserialize an arkworks type with …","You can use this to serialize an arkworks type with serde …","Alias to refer to the base field of a curve.","Alias to refer to the scalar field of a curve.","Fields prologue","Alias to refer to the base field of a curve.","Alias to refer to the scalar field of a curve.","Builds a hash prefix for a node at the given height in a …","Builds a hash prefix for a node at the given height in a …"],"i":[0,1,2,3,1,3,4,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,5,5,5,6,7,8,9,10,5,6,7,8,9,10,10,10,11,1,5,5,5,8,9,10,10,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,10,5,6,7,8,9,10,4,3,7,1,5,5,10,0,0,5,6,7,8,9,10,5,6,7,8,9,10,0,2,6,5,5,10,0,12,1,5,5,10,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,12,11,5,6,7,8,9,10,5,0,0,13,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,15,13,14,14,14,14,15,15,14,15,14,16,14,14,0,15,0,14,14,14,13,14,14,14,15,14,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,18,0,0,0,0,0,0,0,18,19,20,21,22,23,24,18,19,20,21,22,23,24,18,20,21,22,23,24,18,20,21,22,23,24,18,0,0,19,20,21,22,23,24,18,19,20,21,22,23,24,18,19,20,21,22,23,24,18,20,21,22,23,24,20,20,21,21,22,24,24,19,20,21,22,23,24,18,21,22,20,20,21,20,19,20,21,22,23,24,18,19,20,21,22,23,24,18,21,22,18,21,21,23,22,0,20,21,22,23,24,23,24,0,20,20,23,24,24,0,0,25,19,0,20,21,22,23,24,18,20,21,24,19,20,21,22,23,24,18,19,20,21,22,23,24,18,19,20,21,22,23,24,18,25,19,19,20,21,22,23,24,18,22,0,0,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,20,26,26,26,26,26,26,27,27,27,27,27,0,0,27,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,22,27,27,27,27,27,27,22,0,0,0,24,24,0,0,0,0,0,0,28,0,0,29,29,29,0,0,29,30,28,30,0,30,28,29,30,29,29,28,29,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,28,28,28,28,0,30,30,30,30,33,33,0,0,0,33,33,33,33,33,33,33,33,33,33,33,29,29,29,0,33,33,29,29,29,29,29,33,33,33,33,33,33,0,34,34,0,0,35,35,35,35,35,35,35,35,35,0,35,35,35,35,35,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["minamerkletree",3,[["fixedheightmode",3]]]]],[[["minamerkletree",3,[["variableheightmode",3]]]]],[[["",0],["intoiterator",8]]],[[["minamerkletree",3,[["fixedheightmode",3]]],["intoiterator",8]]],[[["minamerkletree",3,[["variableheightmode",3]]],["intoiterator",8]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["merkletreenodemetadata",3]],["merkletreenodemetadata",3]],[[["",0],["",0]]],[[["maskablemerkletree",8]]],[[["",0]],["usize",0]],[[["minamerkletree",3,[["variableheightmode",3]]]],["usize",0]],[[["minamerkletree",3,[["fixedheightmode",3]]]],["usize",0]],[[],["minamerkletree",3]],[[],["fixedheightmode",3]],[[],["variableheightmode",3]],[[],["merkletreenodemetadata",3]],[[["merkletreenodemetadata",3]],["u32",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["merkletreenodemetadata",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["spinlockobjectpool",3]],[[["merkletreenodemetadata",3]]],[[["merkletreenodemetadata",3]]],[[["",0]],["u32",0]],[[["minamerkletree",3,[["variableheightmode",3]]]],["u32",0]],[[["minamerkletree",3,[["fixedheightmode",3]]]],["u32",0]],[[["merkletreenodemetadata",3]],["u32",0]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["merkletreenodemetadata",3]],["option",4]],[[["merkletreenodemetadata",3]],["option",4]],[[["u32",0]],["minamerkletree",3,[["fixedheightmode",3]]]],[[],["minamerkletree",3,[["variableheightmode",3]]]],[[["usize",0],["u32",0]],["merkletreenodemetadata",3]],null,[[["",0],["maskingmerkletree",8]],["bool",0]],[[["",0]],["option",4]],[[["minamerkletree",3,[["variableheightmode",3]]]],["option",4]],[[["minamerkletree",3,[["fixedheightmode",3]]]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["maskingmerkletree",8]],["bool",0]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]],["minamerkletree",3]],null,null,null,null,null,null,null,null,null,null,[[["roinput",3],["bool",0]],["roinput",3]],[[["roinput",3]],["roinput",3]],[[["roinput",3],["fp256",3,[["fpparameters",3]]]],["roinput",3]],[[["roinput",3]],["roinput",3]],[[["roinput",3],["roinput",3]],["roinput",3]],[[["roinput",3],["fp256",3,[["fqparameters",3]]]],["roinput",3]],[[["roinput",3],["u32",0]],["roinput",3]],[[["roinput",3],["u64",0]],["roinput",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["roinput",3]],["roinput",3]],[[["",0],["",0]]],[[],["poseidon",3,[["plonkspongeconstantskimchi",3]]]],[[],["poseidon",3,[["plonkspongeconstantslegacy",3]]]],[[],["roinput",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["fp256",3,[["fpparameters",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["roinput",3],["roinput",3]],["bool",0]],[[["roinput",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["",0],["",0]],["fp256",3,[["fpparameters",3]]]],[[["",0]],["hasher",8]],[[],["usize",0]],[[["",0],["",0]],["fp256",3,[["fpparameters",3]]]],[[]],[[],["vec",3,[["u8",0],["global",3]]]],[[["roinput",3],["roinput",3]],["bool",0]],[[],["roinput",3]],null,[[["",0]],["hasher",8]],null,[[["roinput",3]],["vec",3,[["u8",0],["global",3]]]],[[["roinput",3]],["vec",3,[["fp256",3,[["fpparameters",3]]],["global",3]]]],[[["",0]]],[[["",0]],["roinput",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["",0]],["hasher",8]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["poseidon",3]],["fp256",3,[["fpparameters",3]]]],[[["usize",0]]],[[]],[[["poseidon",3]],["hasher",8]],[[],["usize",0]],[[]],[[["poseidon",3]],["hasher",8]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["poseidon",3],["",0]],["hasher",8]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["keypair",3]],["keypair",3]],[[["pubkey",3]],["pubkey",3]],[[["compressedpubkey",3]],["compressedpubkey",3]],[[["seckey",3]],["seckey",3]],[[["signature",3]],["signature",3]],[[["networkid",4]],["networkid",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["signer",8]],[[],["signer",8]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["keypair",3],["keypair",3]],["bool",0]],[[["pubkey",3],["pubkey",3]],["bool",0]],[[["compressedpubkey",3],["compressedpubkey",3]],["bool",0]],[[["seckey",3],["seckey",3]],["bool",0]],[[["signature",3],["signature",3]],["bool",0]],[[["keypair",3],["formatter",3]],["result",4,[["error",3]]]],[[["keypair",3],["formatter",3]],["result",4,[["error",3]]]],[[["pubkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["pubkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["compressedpubkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["signature",3],["formatter",3]],["result",4,[["error",3]]]],[[["signature",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["pubkey",3],["pubkeyerror",4]]]],[[["str",0]],["result",4,[["compressedpubkey",3],["pubkeyerror",4]]]],[[["str",0]],["result",4,[["keypair",3],["keypairerror",4]]]],[[["groupaffine",3,[["pallasparameters",3]]]],["keypair",3]],[[["groupaffine",3,[["pallasparameters",3]]]],["pubkey",3]],[[["keypair",3]],["string",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pubkey",3]],["string",3]],[[["compressedpubkey",3]],["string",3]],[[["networkid",4]],["vec",3,[["u8",0],["global",3]]]],[[["pubkey",3]],["compressedpubkey",3]],[[["pubkey",3]],["groupaffine",3,[["pallasparameters",3]]]],[[["seckey",3]]],null,null,[[["keypair",3],["keypair",3]],["bool",0]],[[["pubkey",3],["pubkey",3]],["bool",0]],[[["compressedpubkey",3],["compressedpubkey",3]],["bool",0]],[[["seckey",3],["seckey",3]],["bool",0]],[[["signature",3],["signature",3]],["bool",0]],[[],["seckey",3]],[[],["signature",3]],null,null,[[],["keypair",3]],[[],["seckey",3]],null,null,null,null,[[["",0],["keypair",3],["",0]],["signature",3]],[[["schnorr",3],["keypair",3],["",0]],["signature",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["signature",3],["pubkey",3],["",0]],["bool",0]],[[["schnorr",3],["signature",3],["pubkey",3],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["keypairerror",4]],["keypairerror",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["keypairerror",4],["keypairerror",4]],["bool",0]],[[["keypairerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["keypairerror",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["usize",0]],[[]],null,[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["pubkeyerror",4]],["pubkeyerror",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["pubkeyerror",4],["pubkeyerror",4]],["bool",0]],[[["pubkeyerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["pubkeyerror",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["usize",0]],[[]],null,[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[],["result",4,[["fieldhelperserror",4]]]],[[],["result",4,[["fieldhelperserror",4]]]],[[["str",0]],["result",4,[["fieldhelperserror",4]]]],null,null,[[],["biguint",3]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]]],null,[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[],["usize",0]],[[["",0]]],[[],["vec",3,[["bool",0],["global",3]]]],[[],["vec",3,[["u8",0],["global",3]]]],[[["",0],["usize",0]],["chunkedpolynomial",3]],[[],["string",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[],["adjacentpairs",3]],[[]],[[["never",0]]],[[],["usize",0]],[[]],[[]],[[["adjacentpairs",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["chunkedpolynomial",3]],["vec",3,[["global",3]]]],[[]],[[],["usize",0]],[[]],[[["chunkedpolynomial",3]],["densepolynomial",3]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[]],[[["",0]]],[[["",0],["usize",0]]],[[["",0],["usize",0]],["chunkedpolynomial",3]],null,[[["",0],["usize",0]]],[[["",0]]],[[["",0],["usize",0]]],[[["",0]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["fieldhelperserror",4]],["fieldhelperserror",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["fieldhelperserror",4],["fieldhelperserror",4]],["bool",0]],[[["fieldhelperserror",4],["formatter",3]],["result",4,[["error",3]]]],[[["fieldhelperserror",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["result",4,[["fieldhelperserror",4]]]],[[],["result",4,[["fieldhelperserror",4]]]],[[["str",0]],["result",4,[["fieldhelperserror",4]]]],[[["i32",0]]],[[],["usize",0]],[[]],[[],["biguint",3]],[[],["usize",0]],[[],["vec",3,[["bool",0],["global",3]]]],[[],["vec",3,[["u8",0],["global",3]]]],[[],["string",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]]],[[["usize",0]],["usize",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],null,[[["",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["result",4]],[[["canonicalserialize",8]],["result",4]],null,null,null,null,null,[[["u32",0]],["string",3]],[[["u32",0]],["string",3]]],"p":[[8,"MerkleTree"],[8,"MerkleMerger"],[8,"MerkleHasher"],[8,"PoseidonLegacyHasherPoolProvider"],[3,"MinaMerkleTree"],[3,"MinaPoseidonMerkleMerger"],[3,"MinaPoseidonMerkleHasher"],[3,"FixedHeightMode"],[3,"VariableHeightMode"],[3,"MerkleTreeNodeMetadata"],[8,"MaskingMerkleTree"],[8,"MaskableMerkleTree"],[8,"Hashable"],[3,"ROInput"],[8,"Hasher"],[8,"DomainParameter"],[3,"Poseidon"],[4,"NetworkId"],[3,"Schnorr"],[3,"Keypair"],[3,"PubKey"],[3,"CompressedPubKey"],[3,"SecKey"],[3,"Signature"],[8,"Signer"],[4,"KeypairError"],[4,"PubKeyError"],[8,"ExtendedDensePolynomial"],[8,"FieldHelpers"],[8,"ExtendedEvaluations"],[3,"AdjacentPairs"],[3,"ChunkedPolynomial"],[4,"FieldHelpersError"],[8,"CryptoDigest"],[3,"SerdeAs"]]},\
"mina_network":{"doc":"Network crate provides utilities that facilites libp2p …","t":[0,0,6,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,3,3,8,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,10,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["p2p","processor","BoxedP2PTransport","MAINNET_CONFIG","P2PTransport","TransportBuilder","TransportConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","get_mplex_config","get_shared_key","init","init","init","into","into","into","mplex_protocol_name","new","new_with_key","new_with_key_and_config","rendezvous_string","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_config","with_mainnet_config","with_timeout","Block","Block","NaiveTransitionFrontier","NetworkMessageProcessor","NonConsensusNetworkingOps","QueryBlockRequest","TransitionFrontier","add_block","add_block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","get_best_chain","height","init","init","init","into","into","into","new","new","nonconsensus_ops","query_block","run","set_block_requester","set_block_requester","set_block_responder","state_hash","to_owned","transition_frontier","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["mina_network","","mina_network::p2p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_network::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["libp2p setup utilities for mina","Implementation agnostic abstraction of networking …","Type alias for boxed libp2p transport","Mainnet config for mina p2p network","Type alias for libp2p transport","Builds libp2p transport for mina with various …","Configuration type for super::TransportBuilder","","","","","","","Builds libp2p transport","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets MplexConfig from the TransportConfig instance","Gets PreSharedKey from the TransportConfig instance","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Protocol name for configuring libp2p multiplexer","Creates a new instance of TransportBuilder with random …","Creates a new instance of TransportBuilder with given …","Creates a new instance of TransportBuilder with given …","Rendezvous string for configuring private network","","","","","","","","","","","","","","","Updates config for the TransportBuilder instance","Uses mainnet config for the TransportBuilder instance","Sets timeout duration for the TransportBuilder instance","Type that represents a block","Type that represents a block","Struct that represents a naive implementation of the …","This struct processes all the interactions and data …","abstraction of networking operations for non-consensus …","Request struct for querying a block","This struct handles the blocks that are received from the …","Adds a block that is received from networking layer. The …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","TODO: Doc","Height of the block","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new NetworkMessageProcessor with the given …","TODO: Doc","Gets the NonConsensusNetworkingOps instance","Queries a block with its height and state hash","Schedules event loops of all types of communications …","Sets the block requester for querying a block, e.g. parent …","","Sets the block responder that sends the blocks to the …","State hash of the block","","Gets the TransitionFrontier instance","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,1,2,3,3,2,3,2,3,2,3,1,1,2,3,1,2,3,1,2,3,2,1,2,3,2,2,1,2,3,1,2,3,2,3,3,3,2,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,3,3,4,5,0,0,0,0,0,4,6,7,8,6,7,8,6,6,6,6,7,8,6,7,8,6,7,8,6,6,7,8,6,6,7,7,8,6,7,8,6,8,6,8,5,8,4,6,5,7,6,8,7,8,6,7,8,6,7,8,6,7,8,6],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["transportbuilder",3]],["result",4,[["error",3]]]],[[["transportconfig",3]],["transportconfig",3]],[[["transportbuilder",3]],["transportbuilder",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["transportconfig",3]],[[],["transportbuilder",3]],[[["mainnet_config",3]],["transportconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["transportconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["transportconfig",3]],["mplexconfig",3]],[[["transportconfig",3]],["presharedkey",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],null,[[],["transportbuilder",3]],[[["keypair",4]],["transportbuilder",3]],[[["keypair",4],["transportconfig",3]],["transportbuilder",3]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[["transportbuilder",3],["transportconfig",3]],["transportbuilder",3]],[[["transportbuilder",3]],["transportbuilder",3]],[[["transportbuilder",3],["duration",3]],["transportbuilder",3]],null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["naivetransitionfrontier",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["naivetransitionfrontier",3]],["naivetransitionfrontier",3]],[[["",0],["",0]]],[[],["naivetransitionfrontier",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["naivetransitionfrontier",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["naivetransitionfrontier",3]],["protocolstatechain",3]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[],["networkmessageprocessor",3]],[[],["naivetransitionfrontier",3]],[[["networkmessageprocessor",3]],["future",8]],[[["",0],["queryblockrequest",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["networkmessageprocessor",3]],["future",8]],[[["",0],["sender",3,[["queryblockrequest",3]]]]],[[["naivetransitionfrontier",3],["sender",3,[["queryblockrequest",3]]]]],[[["",0],["sender",3]]],null,[[["",0]]],[[["networkmessageprocessor",3]],["future",8]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"MAINNET_CONFIG"],[3,"TransportConfig"],[3,"TransportBuilder"],[8,"TransitionFrontier"],[8,"NonConsensusNetworkingOps"],[3,"NaiveTransitionFrontier"],[3,"QueryBlockRequest"],[3,"NetworkMessageProcessor"]]},\
"mina_rs_base":{"doc":"This crate implements a number of the base types required …","t":[8,8,16,16,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,3,2,2,2,2,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,12,0,12,11,11,12,0,12,11,11,11,12,11,4,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,13,3,4,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,12,12,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,13,13,3,3,3,3,3,18,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,12,10,11,11,11,11,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,2,2,3,3,3,2,3,3,3,3,2,4,13,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,12,12,12,12,12,0,0,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,4,3,6,3,13,3,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,12,12,3,3,13,13,4,3,3,13,4,3,3,3,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,4,13,3,3,13,3,4,13,3,3,3,4,3,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,2,2,13,2,2,2,2,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,0,11,11,11,11,11,11,12,12,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,13,13,3,3,4,3,4,13,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BinProtSerializationType","JsonSerializationType","T","T","account","blockchain_state","common","consensus_state","delta_transition_chain_proof","epoch_data","external_transition","finite_ec_point","finite_ec_point_pair","global_slot","numbers","protocol_state","protocol_state_proof","protocol_version","snark_work","staged_ledger_diff","try_from_binprot","try_from_json","try_into_binprot","try_into_json","types","user_commands","verifiable","verification_key","Account","AuthRequired","Permissions","Timing","TokenPermissions","balance","borrow","borrow_mut","clone","clone_into","delegate","deref","deref_mut","domain_string","drop","fmt","from","from","from","from","from","from","get_pool","init","into","nonce","permissions","permissions","public_key","receipt_chain_hash","snapp","timing","timing","to_owned","to_roinput","token_id","token_permissions","token_permissions","try_from","try_into","type_id","voting_for","vzip","AuthRequired","Both","Either","Impossible","None","Permissions","Proof","Signature","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","edit_state","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","into","into","receive","send","set_delegate","set_permissions","set_verification_key","stake","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Timed","TimedData","Timing","Untimed","borrow","borrow","borrow_mut","borrow_mut","cliff_amount","cliff_time","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","initial_minimum_balance","into","into","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vesting_increment","vesting_period","vzip","vzip","0","NotOwned","TokenOwned","TokenPermissions","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from","from","from","from","from","init","into","to_owned","try_from","try_into","type_id","vzip","account_disabled","disable_new_accounts","BlockchainState","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","domain_string","drop","eq","fmt","from","from","from","from","from","from","from","genesis_ledger_hash","init","into","ne","snarked_ledger_hash","snarked_next_available_token","staged_ledger_hash","timestamp","to_owned","to_roinput","try_from","try_into","type_id","vzip","0","ByteVec","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","init","into","ne","to_owned","try_from","try_into","type_id","vzip","0","ConsensusState","VrfOutputTruncated","block_creator","block_stake_winner","blockchain_length","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","coinbase_receiver","curr_global_slot","default","default","deref","deref","deref_mut","deref_mut","domain_string","domain_string","drop","drop","epoch_count","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","global_slot_since_genesis","has_ancestor_in_same_checkpoint_window","init","init","into","into","last_vrf_output","min_window_density","ne","ne","next_epoch_data","staking_epoch_data","sub_window_densities","sub_window_densities","supercharge_coinbase","to_owned","to_owned","to_roinput","to_roinput","to_string","total_currency","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","1","DeltaTransitionChainProof","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","from","from","init","into","ne","to_owned","try_from","try_into","type_id","vzip","EpochData","EpochLedger","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","domain_string","domain_string","drop","drop","epoch_length","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","init","init","into","into","ledger","lock_checkpoint","ne","ne","seed","start_checkpoint","to_owned","to_owned","to_roinput","to_roinput","total_currency","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExternalTransition","borrow","borrow_mut","clone","clone_into","current_protocol_version","delta_transition_chain_proof","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","from","init","into","ne","proposed_protocol_version_opt","protocol_state","protocol_state_proof","staged_ledger_diff","to_owned","try_from","try_into","type_id","validation_callback","verify","vzip","GlobalSlot","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","domain_string","drop","eq","fmt","from","from","from","from","from","from","init","into","ne","slot_number","slots_per_epoch","to_owned","to_roinput","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","AccountNonce","Amount","BigInt256","BlockTime","BlockTimeSpan","Char","Delta","ErrorInvalidFormat","ErrorParsingInteger","ExtendedU32","ExtendedU64","GlobalSlotNumber","Hex64","Length","MAX","ParseAmountError","TokenId","as_bits","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","datetime","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_string","domain_string","domain_string","domain_string","domain_string","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","epoch_millis","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_unix_epoch","from_unix_epoch_millis","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","source","to_hex_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_roinput","to_roinput","to_roinput","to_roinput","to_roinput","to_string","to_string","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_hex","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","Header","ProtocolConstants","ProtocolState","ProtocolStateBody","blockchain_state","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_state","constants","curr_global_slot","default","default","default","delta","deref","deref","deref","deref_mut","deref_mut","deref_mut","domain_string","domain_string","domain_string","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_state_hash","genesis_state_timestamp","get_height","get_height","init","init","init","into","into","into","k","min_window_density","min_window_density","ne","ne","ne","previous_state_hash","slots_per_epoch","slots_per_sub_window","sub_window_densities","sub_window_densities","to_owned","to_owned","to_owned","to_roinput","to_roinput","to_roinput","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","1","1","1","2","3","4","BulletproofChallenge","BulletproofChallengeTuple17","BulletproofChallengeTuple18","BulletproofChallenges","BulletproofPreChallenge","ECPoint","ECPointVec","FieldElement","FieldElementVec","FiniteECPoint","FiniteECPointPair","FiniteECPointPairVec","FiniteECPointVec","OpeningProof","PairingBased","Plonk","PrevEvals","PrevXHat","Proof","ProofEvaluations","ProofMessages","ProofOpenings","ProofOpeningsEvals","ProofState","ProofStateBulletproofChallenges","ProofStateDeferredValues","ProofStatePairingBased","ProofStatement","ProtocolStateProof","ScalarChallengeVector2","ShiftedValue","ShiftedValue","SpongeDigestBeforeEvaluations","alpha","app_state","b","beta","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulletproof_challenges","bulletproof_challenges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combined_inner_product","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deferred_values","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","evals","field_and_curve_elements","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gamma","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","me_only","messages","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","old_bulletproof_challenges","old_bulletproof_challenges","opening_proof","openings","pass_through","plonk","prev_evals","prev_x_hat","proof","proof","proof_evaluations","proof_messages","proof_state","sg","sg","sponge_digest_before_evaluations","statement","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","which_branch","xi","zeta","0","0","0","0","0","0","1","1","1","1","10","10","11","11","12","12","13","13","14","14","15","15","16","16","17","17","18","2","2","2","2","3","3","4","4","5","5","6","6","7","7","8","8","9","9","BulletproofChallenge","BulletproofChallengeTuple17","BulletproofChallengeTuple18","BulletproofChallenges","BulletproofPreChallenge","ProofStateBulletproofChallenges","ScalarChallenge","ScalarChallengeVector2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","prechallenge","scalar","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","1","1","ECPoint","ECPointVec","FieldElement","FieldElementVec","Finite","FiniteECPoint","FiniteECPointPair","FiniteECPointPairVec","FiniteECPointVec","Infinite","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","to_hex_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_hex","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","OpeningProof","borrow","borrow_mut","clone","clone_into","default","delta","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","init","into","lr","ne","sg","to_owned","try_from","try_into","type_id","vzip","z_1","z_2","ProofEvaluations","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","f","fmt","from","from","from","from","from","from","init","into","l","ne","o","r","sigma1","sigma2","t","to_owned","try_from","try_into","type_id","vzip","z","0","ProofMessageWithDegreeBound","ProofMessageWithoutDegreeBoundList","ProofMessages","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","into","into","into","l_comm","ne","ne","ne","o_comm","r_comm","shifted","t_comm","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unshifted","vzip","vzip","vzip","z_comm","ProtocolVersion","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","init","into","major","minor","ne","patch","to_owned","try_from","try_into","type_id","vzip","0","1","FeeExcess","FeeExcessPair","Neg","One","OneORTwo","PendingCoinbase","PendingCoinbaseStackState","Pos","SgnType","Signed","StateStack","Statement","TransactionSnark","TransactionSnarkWork","Two","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","curr","data_stack","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fee_excess","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","magnitude","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","next_available_token_after","next_available_token_before","pending_coinbase_stack_state","proofs","prover","sgn","sok_digest","source","source","state_stack","statement","supply_increase","target","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","transaction_snark_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","Applied","CoinBase","CoinBase","CoinBaseBalanceData","CoinBaseFeeTransfer","FeeTransfer","FeeTransferBalanceData","InternalCommandBalanceData","One","StagedLedgerDiff","StagedLedgerDiffTuple","StagedLedgerPreDiff","TransactionStatus","TransactionStatusAuxiliaryData","TransactionStatusBalanceData","Two","UserCommandWithStatus","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coinbase","coinbase_receiver_balance","commands","completed_works","created_token","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","diff_one","diff_two","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fee_payer_account_creation_fee_paid","fee_payer_balance","fee_transfer_receiver_balance","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","internal_command_balances","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","receiver1_balance","receiver2_balance","receiver_account_creation_fee_paid","receiver_balance","receiver_pk","source_balance","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","1","PaymentPayload","SignedCommand","SignedCommand","SignedCommandMemo","SignedCommandPayload","SignedCommandPayloadBody","SignedCommandPayloadCommon","UserCommand","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","from","init","into","memo","ne","payment","signed_command","to_owned","try_from","try_into","type_id","verify","vzip","0","0","SignedCommandMemo","SignedCommandMemoError","StringTooLong","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","init","init","into","into","ne","to_owned","to_string","to_string","to_text","try_from","try_from","try_from","try_from_text","try_into","try_into","type_id","type_id","vzip","vzip","PaymentPayload","amount","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from","from","from","from","from","init","into","ne","receiver_pk","source_pk","to_owned","token_id","try_from","try_into","type_id","vzip","PaymentPayload","SetDelegate","SignedCommand","SignedCommandPayload","SignedCommandPayloadBody","SignedCommandPayloadCommon","StakeDelegation","StakeDelegation","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","common","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_string","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fee","fee_payer_pk","fee_token","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_payload","init","init","init","init","init","into","into","into","into","into","into_signed_command","memo","ne","ne","ne","ne","ne","nonce","payload","signature","signer","to_owned","to_owned","to_owned","to_owned","to_owned","to_roinput","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","valid_until","verify","vzip","vzip","vzip","vzip","vzip","0","0","delegator","new_delegate","SignedTransferCommandBuilder","borrow","borrow_mut","build","deref","deref_mut","drop","fee_payer","fee_token","from","init","into","memo","new","transfer_token","try_from","try_into","type_id","valid_until","vzip","Verifiable","verify","Data","VerificationKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","constraints","data","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["mina_rs_base","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::account::permissions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::account::timing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::account::timing::Timing","mina_rs_base::account::token_permissions","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::account::token_permissions::TokenPermissions","","mina_rs_base::blockchain_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::common","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::consensus_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::delta_transition_chain_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::epoch_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::external_transition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::global_slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::numbersmina_rs_base::numbers::ParseAmountError","","mina_rs_base::protocol_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::protocol_state_proofmina_rs_base::protocol_state_proof::ShiftedValue","mina_rs_base::protocol_state_proof::bulletproof_challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::protocol_state_proof::bulletproof_challenges::BulletproofPreChallenge","mina_rs_base::protocol_state_proof::field_and_curve_elementsmina_rs_base::protocol_state_proof::field_and_curve_elements::ECPoint","mina_rs_base::protocol_state_proof::opening_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::protocol_state_proof::proof_evaluations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::protocol_state_proof::proof_messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::protocol_version","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::snark_workmina_rs_base::snark_work::OneORTwo","","","mina_rs_base::staged_ledger_diffmina_rs_base::staged_ledger_diff::CoinBase","mina_rs_base::staged_ledger_diff::InternalCommandBalanceData","","mina_rs_base::staged_ledger_diff::TransactionStatus","","mina_rs_base::user_commands","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::user_commands::UserCommand","mina_rs_base::user_commands::memo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::user_commands::payment","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::user_commands::signed_command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_rs_base::user_commands::signed_command::SignedCommandPayloadBody","","mina_rs_base::user_commands::signed_command::StakeDelegation","","mina_rs_base::user_commands::signed_command::builder","","","","","","","","","","","","","","","","","","","","mina_rs_base::verifiable","","mina_rs_base::verification_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Re-export serialization type annotations This trait …","Re-export serialization type annotations This trait …","The corresponding serialization type for bin-prot format …","The corresponding serialization type for json format Self …","Module contains the Account data type and associated types","Types related to the Blockchain State","Common data types.","Types and funcions related to the Mina consensus state","Delta transition chain proof structures and functions","Types and functions related to the EpochData structure","Mina ExternalTransition","","","Structure of a global slot","Newtypes for different numeric types used throughout Mina","Types related to the Mina protocol state","Module containing the components of a protocol state proof","Protocol version structure","Types related to the Transaction Snark Work","In this context a diff refers to a difference between two …","Construct from binprot bytes reader","Construct from json string","Convert into binprot byte vec","Convert into json string","Re-export all the public types under this module for …","User commands are how external users can mutate the state …","Traits and helpers for data structures that require …","types and functions related to Mina verificiation keys","An account identified by its public key and token ID. …","","","","","Balance of token held by account","","","","","Delegate for staking purposes","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Nonce (incremented with each tx to prevent replay)","Account based permissions","Level of permission required to do different account …","Account public key","?","TODO: This should contain a Snapp account data once we …","Account Timing","Any timing limitations places on this accounts balance …","","","Account token ID","Account token permissions","Permission associated with the given token","","","","The state hash this account is voting for","","The level of auth required to perform a particular action …","Both proof and signature must be provided","Either a proof or a signature","This action can never occur","None required","Permissions associated with the account","Proof must be provided","Signature must be provided","","","","","","","","","","","","","","","Permission required to edit state","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Permission required to receive balance","Permission required to send a balance","Permission required to set the delegate","Permission required to cange permissions","Permission require to set verification key","If the account can stake","","","","","","","","","","","Account does have timing limitations as specified","Payload for the timing variant Timed","Timing information for an account with regard to when its …","Account does not have any timing limitations","","","","","Amount extra available when fully fested","Time when all balance is avaiable","","","","","Return <code>Timing::Untimed</code>","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Initial balance for the account","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Ammount released in each vesting period","Period in whcih allocation is released in chunks","","","","Account does not own a token","Account owns a token","Need to learn exactly what this is..","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","?","?","Mina blockchain state struct","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Hash of the genesis state","","Calls <code>U::from(self)</code>.","","Hash of the most recently proven state of the blockchain","Check whether the change of the next token ID is …","Hash of the proposed next state of the blockchain","Timestamps for blocks","","","","","","","","Wrapper of Vec","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","This structure encapsulates the succinct state of the …","Wrapper struct for the output for a VRF","Compressed public key of the block producer","Compressed public key of winning account","Height of block","","","","","","","","","Compresed public key of account receiving the block reward","Current global slot number relative to the current hard …","","Return …","","","","","","","","","Epoch number","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Absolute global slot number since genesis","If the block has an ancestor in the same checkpoint window","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Additional VRS output from leader (for seeding Random …","Minimum window density oberved on the chain","","","Epoch data for current epoch","Epoch data for previous epoch","Returns the sub-window densities as a vec of u32","Current sliding window of densities","true if block_stake_winner has no locked tokens, false …","","","","","","Total supply of currency","","","","","","","","","","","","Proof that the block was produced within the allotted slot …","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Epoch data","Epoch Ledger","","","","","","","","","","","","","","","","","","","Length of an epoch","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","A unique identifier of the EpochLedger","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Epoch Ledger, contains ledger related data for the epoch","State hash of last known block in the first 2/3 of epoch …","","","Initialize the random number generator","State hash of first block of epoch","","","","","The total currency in circulation after the block was …","","","","","","","","","This structure represents a mina block This structure …","","","","","Current protocol version","Proof that the block was produced within the allotted slot …","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Proposed protocol version","The blockchain state, including consensus and the ledger","Proof that the protocol state and entire history of the …","Diff of the proposed next state of the blockchain","","","","","Validation callback","","","A global slot","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","The global slot number of a chain or block","Number of slots per epoch","","","","","","","","","","","","","","","","","","","","Number representing how many txns sent from an account","This structure represents fixed point numbers typically …","Mina 256 bit Bit Integer type","Block time numeric type","Time span between two block time instants","A single char defined by a single byte (not variable …","Represents a difference between two lengths","Unable to split the string on a ‘.’ into to integer …","Error occurs when parsing the integer components","u32 wrapped in 1 version byte This will not be part of the …","This will not be part of the public API once the …","Consensus slot index","4 bytes wrapped by a version Will not form part of the …","Represents the length of something (e.g. an epoch or …","Maximum value this type can hold","Error that can be returned when parsing an Amount from …","Newtype for TokenIds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets timestamp in time::OffsetDateTime format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets unix timestamp in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Unix timestamp conversion (seconds since the unix epoch)","Unix timestamp conversion (milliseconds since the unix …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementing types have some notion of height and can …","Constants that define the consensus parameters","This structure can be thought of like the block header. It …","Body of the protocol state","Ledger related state","The body of the protocol state","","","","","","","","","","","","","Consensus related state","Consensus constants","Gets the current global slot the current epoch","","","","Maximum permissable delay of packets (in slots after the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Genesis protocol state hash (used for hardforks)","Timestamp of genesis block in unixtime","Get the height for the implementing type","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Point of finality (number of confirmations)","The minimum window density at the current epoch.","","","","","Commitment to previous block (hash of previous protocol …","Number of slots per epoch","No of slots in a sub-window = 7","A list of density values of the sub windows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNARK proof of the protocol state at some point in time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Elliptic curve point that can either be the coordinates of …","Vector of EC points (with version number defined in the …","Represents an element in a finite field that can be …","Vector of finite field elements (with version number …","","An elliptic curve point defined over a base field with …","","Vector of 2-tuples of finite EC points (with version …","Vector of finite EC points (with version number defined in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>ECPoint::Infinite</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Defines a version of the Mina protocol in semver format","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Major version number","Minor version number","","Patch version number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Top level wrapper type for a StagedLedgerDiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>CoinBase::Zero</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A command signed by a private key","","","","","The top level user command type This is the output of the …","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Commands can include memo fields which contain arbitrary …","","Payment commands are for transfering some token amounts …","Signed commands are commands that require signing with …","","","","","","","","","A memo byte strong for a signed command","Error type for converting memo types","Tried to build a memo from a string that is too long to fit","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Convert into text","","","","Try build from text","","","","","","","The data specific to payload commands","The ammount of that token to transfer","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","Account to transfer to","Account to transfer from","","The token to transfer","","","","","Payment transfer fields","Set Delegate","Top level signed command type","The part of a signed command that needs to be serialized …","Enum of variable fields in a signed command","Common fields required by all signed commands","Enum of variable fields for stake delegation","Stake Delegation fields","Fields that depend on the type of command (e.g. payment, …","","","","","","","","","","","Helpers for building a user command","","","","","","","","","","","Fields common to all command types","","","","","","","","","","","","","","","","","","","","","","Amount paid in fees to include this command in a block","The public key of the payer of the fees (need not be the …","Token to be used to pay the fees","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Sign a SignedCommandPayload to construct a SignedCommand","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into a signed command by signing with the given …","Arbitary bytes that can be included","","","","","","Nonce assicociated with account sending transaction","The payload to sign","The signature (result of signing payload with public key)","The signer (public key)","","","","","","","","","","","","","","","","","","","","","","UNIX timestamp after which the signed command is no longer …","","","","","","","","","Delegator","New Delegate","A builder for UserCommands to transfer funds","","","Sign the transaction and produce a UserCommand with the …","","","","Set the fee payer to something other than the sender","Set the fee token to pay the block producer","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Set a non-empty memo for the command","All required fields must be defined initially","Set token to transfer","","","","Set the global slot which this command is valid until","","Types that implement Verifiable are able to self-check …","Accepts self and a context and returns if the implementor …","Data associated with a verification key","Public data required to verify a Mina snark","","","","","","","","","Number of constaints","Associated data","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,3,0,4,4,4,4,0,4,4,4,5,4,5,4,5,4,5,4,5,4,5,4,5,5,4,5,4,4,4,4,4,4,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,4,5,4,5,4,5,4,5,4,5,6,0,0,6,7,6,7,6,7,7,7,6,7,6,6,7,6,7,6,7,6,7,7,6,7,7,7,7,7,7,6,6,6,6,6,6,7,6,7,7,6,7,7,6,7,6,7,6,7,6,7,7,7,6,8,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,0,0,15,15,15,14,15,14,15,14,15,14,15,15,15,14,15,14,15,14,15,14,15,14,15,15,14,15,14,14,15,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,14,15,15,14,15,14,15,15,15,14,15,15,15,15,15,15,14,15,14,15,14,15,14,14,15,14,15,14,15,14,15,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,18,17,18,17,18,17,17,17,17,17,17,18,18,18,18,18,18,17,17,18,17,18,18,18,17,18,18,18,17,18,17,18,17,17,18,17,18,17,18,17,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,0,0,0,0,0,0,34,34,0,0,0,0,0,28,0,0,33,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,27,28,29,30,31,32,33,21,22,23,24,25,26,27,28,29,30,31,32,33,31,21,22,23,24,25,26,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,26,28,31,21,22,23,24,25,26,34,27,28,29,30,31,32,33,33,33,31,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,26,34,34,27,28,29,30,30,31,32,33,21,21,21,22,22,22,23,23,23,24,24,24,25,25,26,26,26,26,34,34,27,27,27,27,28,28,28,28,29,29,29,30,30,30,30,30,30,30,30,31,31,31,32,32,33,33,26,30,31,31,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,22,23,24,25,34,33,21,22,23,24,25,26,27,28,29,30,31,32,33,21,22,26,28,31,26,34,30,33,21,22,23,24,25,26,34,27,28,29,30,30,31,32,33,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,21,22,23,24,25,26,34,27,28,29,30,31,32,33,35,36,0,0,0,0,37,38,39,38,37,39,38,37,39,38,37,39,38,37,37,37,38,39,38,37,39,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37,37,37,37,37,37,37,39,40,38,39,38,37,39,38,37,39,40,38,39,38,37,38,39,39,40,38,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,41,42,43,44,41,42,44,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,46,47,48,46,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,0,48,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,48,49,50,51,48,46,45,41,52,47,42,43,53,44,54,51,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,54,0,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,48,48,48,48,48,48,46,46,46,46,46,46,45,45,45,45,45,45,41,41,41,41,41,41,52,52,52,52,52,52,47,47,47,47,47,47,42,42,42,42,42,42,43,43,43,43,43,43,53,53,53,53,53,53,44,44,44,44,44,44,54,54,54,54,54,54,46,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,51,53,49,50,51,48,46,45,41,52,47,42,43,53,44,54,52,47,0,53,50,48,49,49,49,54,0,0,50,52,47,51,49,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,49,50,51,48,46,45,41,52,47,42,43,53,44,54,48,48,46,55,56,57,58,59,60,57,58,59,60,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,59,57,58,59,60,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,0,0,0,0,0,61,0,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,62,62,62,62,62,56,56,56,56,56,56,57,57,57,57,57,57,58,58,58,58,58,58,59,59,59,59,59,59,61,61,61,61,61,61,60,60,60,60,60,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,58,59,60,62,61,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,62,56,57,58,59,61,60,63,64,65,66,67,68,69,65,67,0,0,0,0,70,0,0,0,0,70,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,64,64,64,64,64,65,65,65,65,65,65,66,66,66,66,66,66,67,67,67,67,67,67,68,68,68,68,68,68,70,70,70,70,70,70,69,69,69,69,69,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,64,65,66,67,68,70,69,64,65,66,67,68,70,69,64,65,66,67,68,70,69,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,0,0,0,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,74,76,75,75,75,75,75,75,74,74,74,74,74,74,76,76,76,76,76,76,75,74,76,75,74,76,75,75,74,76,75,75,76,75,75,74,76,75,74,76,75,74,76,75,74,76,76,75,74,76,75,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,0,0,79,80,0,0,0,79,0,0,0,0,0,0,80,81,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,87,86,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,84,82,80,83,84,85,86,87,78,81,88,79,82,82,82,82,82,82,82,80,80,80,80,80,80,83,83,83,83,83,83,84,84,84,84,84,84,84,85,85,85,85,85,85,86,86,86,86,86,86,87,87,87,87,87,87,78,78,78,78,78,78,81,81,81,81,81,81,88,88,88,88,88,88,79,79,79,79,79,79,82,80,83,84,85,86,87,78,81,88,79,87,82,80,83,84,85,86,87,78,81,88,79,88,82,80,83,84,85,86,87,78,81,88,84,84,84,82,82,88,84,84,85,86,83,84,84,85,82,80,83,84,85,86,87,78,81,88,79,81,83,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,82,80,83,84,85,86,87,78,81,88,79,89,90,90,91,0,92,0,0,92,0,0,93,0,0,0,0,0,0,93,0,93,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,96,101,96,96,98,97,94,95,96,93,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,95,95,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,100,98,99,101,94,95,96,97,91,98,99,93,100,92,101,102,94,94,94,94,94,94,94,95,95,95,95,95,95,96,96,96,96,96,96,97,97,97,97,97,97,97,91,91,91,91,91,91,91,98,98,98,98,98,98,99,99,99,99,99,99,93,93,93,93,93,93,93,100,100,100,100,100,100,92,92,92,92,92,92,92,101,101,101,101,101,101,102,102,102,102,102,102,94,95,96,97,91,98,99,93,100,92,101,102,96,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,102,102,98,99,100,99,97,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,95,96,97,91,98,99,93,100,92,101,102,94,96,94,95,96,97,91,98,99,93,100,92,101,102,103,104,105,106,106,0,0,107,0,0,0,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,107,0,0,107,107,107,107,107,107,108,109,0,0,110,109,110,109,110,109,109,109,109,110,109,110,109,110,109,109,109,110,110,109,109,109,109,109,109,109,109,109,109,109,109,110,109,109,110,109,110,109,109,109,110,109,109,109,110,109,109,110,109,110,109,110,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,113,0,0,0,0,0,112,114,115,114,116,112,113,115,114,116,112,113,0,115,114,116,112,113,115,114,116,112,113,114,115,114,116,112,113,115,114,116,112,113,114,115,114,116,112,113,115,114,116,112,113,116,116,116,115,114,116,112,113,115,115,115,115,115,115,114,114,114,114,114,114,116,116,116,116,116,116,112,112,112,112,112,112,113,113,113,113,113,113,115,115,114,116,112,113,115,114,116,112,113,114,116,115,114,116,112,113,116,115,115,115,115,114,116,112,113,114,115,114,116,112,113,115,114,116,112,113,115,114,116,112,113,116,115,115,114,116,112,113,117,118,119,119,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,121,0,0,122,123,122,123,122,123,122,123,123,122,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["read",8]],["result",4,[["error",4]]]],[[["str",0]],["result",4,[["error",3]]]],[[],["result",4,[["vec",3,[["u8",0],["global",3]]],["error",4]]]],[[],["result",4,[["string",3],["error",3]]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["account",3]],["account",3]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["account",3],["formatter",3]],["result",6]],[[["account",3]],["account",3]],[[["versioned",3,[["account",3]]]],["account",3]],[[["versioned",3,[["versioned",3,[["account",3]]]]]],["account",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["account",3]]]]]]]],["account",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["account",3]]]]]]]]]],["account",3]],[[]],[[],["spinlockobjectpool",3]],[[],["usize",0]],[[]],null,null,null,null,null,null,null,null,[[["",0]]],[[["account",3]],["roinput",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["authrequired",4]],["authrequired",4]],[[["permissions",3]],["permissions",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],null,[[["authrequired",4],["formatter",3]],["result",6]],[[["permissions",3],["formatter",3]],["result",6]],[[["authrequired",4]],["authrequired",4]],[[["versioned",3,[["authrequired",4]]]],["authrequired",4]],[[["versioned",3,[["versioned",3,[["authrequired",4]]]]]],["authrequired",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["authrequired",4]]]]]]]],["authrequired",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["authrequired",4]]]]]]]]]],["authrequired",4]],[[]],[[]],[[["versioned",3,[["permissions",3]]]],["permissions",3]],[[["versioned",3,[["versioned",3,[["permissions",3]]]]]],["permissions",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["permissions",3]]]]]]]],["permissions",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["permissions",3]]]]]]]]]],["permissions",3]],[[["permissions",3]],["permissions",3]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["timeddata",3]],["timeddata",3]],[[["timing",4]],["timing",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["timing",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["timeddata",3],["timeddata",3]],["bool",0]],[[["timeddata",3],["formatter",3]],["result",6]],[[["timing",4],["formatter",3]],["result",6]],[[["timeddata",3]],["timeddata",3]],[[["versioned",3,[["timeddata",3]]]],["timeddata",3]],[[["versioned",3,[["versioned",3,[["timeddata",3]]]]]],["timeddata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["timeddata",3]]]]]]]],["timeddata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["timeddata",3]]]]]]]]]],["timeddata",3]],[[]],[[["versioned",3,[["timing",4]]]],["timing",4]],[[]],[[["timing",4]],["timing",4]],[[["versioned",3,[["versioned",3,[["timing",4]]]]]],["timing",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["timing",4]]]]]]]],["timing",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["timing",4]]]]]]]]]],["timing",4]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[["timeddata",3],["timeddata",3]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["tokenpermissions",4]],["tokenpermissions",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["tokenpermissions",4],["formatter",3]],["result",6]],[[["versioned",3,[["tokenpermissions",4]]]],["tokenpermissions",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["tokenpermissions",4]]]]]]]]]],["tokenpermissions",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["tokenpermissions",4]]]]]]]],["tokenpermissions",4]],[[["versioned",3,[["versioned",3,[["tokenpermissions",4]]]]]],["tokenpermissions",4]],[[["tokenpermissions",4]],["tokenpermissions",4]],[[],["usize",0]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["blockchainstate",3]],["blockchainstate",3]],[[["",0],["",0]]],[[],["blockchainstate",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["blockchainstate",3],["blockchainstate",3]],["bool",0]],[[["blockchainstate",3],["formatter",3]],["result",6]],[[["blockchainstatejson",3]],["blockchainstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]]]]]],["blockchainstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]]]],["blockchainstate",3]],[[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]],["blockchainstate",3]],[[["versioned",3,[["blockchainstate",3]]]],["blockchainstate",3]],[[]],[[["blockchainstate",3]],["blockchainstate",3]],null,[[],["usize",0]],[[]],[[["blockchainstate",3],["blockchainstate",3]],["bool",0]],null,null,null,null,[[["",0]]],[[["blockchainstate",3]],["roinput",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["bytevec",3]],["bytevec",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["bytevec",3],["bytevec",3]],["bool",0]],[[["bytevec",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["bytevec",3]]]]]],["bytevec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bytevec",3]]]]]]]],["bytevec",3]],[[["bytevec",3]],["bytevec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bytevec",3]]]]]]]]]],["bytevec",3]],[[]],[[["versioned",3,[["bytevec",3]]]],["bytevec",3]],[[],["usize",0]],[[]],[[["bytevec",3],["bytevec",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["vrfoutputtruncated",3]],["vrfoutputtruncated",3]],[[["consensusstate",3]],["consensusstate",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[],["vrfoutputtruncated",3]],[[],["consensusstate",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],null,[[["vrfoutputtruncated",3],["vrfoutputtruncated",3]],["bool",0]],[[["consensusstate",3],["consensusstate",3]],["bool",0]],[[["vrfoutputtruncated",3],["formatter",3]],["result",6]],[[["vrfoutputtruncated",3],["formatter",3]],["result",4,[["error",3]]]],[[["consensusstate",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["vrfoutputtruncatedjson",3]]]]]],["vrfoutputtruncated",3]],[[]],[[["versioned",3,[["vrfoutputtruncated",3]]]],["vrfoutputtruncated",3]],[[["vrfoutputtruncated",3]],["vrfoutputtruncated",3]],[[["vec",3,[["u8",0]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncatedjson",3]]]]]]]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]]]]]],["vrfoutputtruncated",3]],[[["vrfoutputtruncatedjson",3]],["vrfoutputtruncated",3]],[[["versioned",3,[["vrfoutputtruncatedjson",3]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncatedjson",3]]]]]]]],["vrfoutputtruncated",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]]]],["consensusstate",3]],[[]],[[["consensusstate",3]],["consensusstate",3]],[[["versioned",3,[["consensusstate",3]]]],["consensusstate",3]],[[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]],["consensusstate",3]],[[["consensusstatejson",3]],["consensusstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]]]]]],["consensusstate",3]],[[["str",0]],["result",4,[["vrfoutputtruncated",3]]]],null,null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["vrfoutputtruncated",3],["vrfoutputtruncated",3]],["bool",0]],[[["consensusstate",3],["consensusstate",3]],["bool",0]],null,null,[[["consensusstate",3]],["vec",3,[["u32",0]]]],null,null,[[["",0]]],[[["",0]]],[[["vrfoutputtruncated",3]],["roinput",3]],[[["consensusstate",3]],["roinput",3]],[[["",0]],["string",3]],null,[[["str",0]],["result",4,[["vrfoutputtruncated",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["deltatransitionchainproof",3]],["deltatransitionchainproof",3]],[[["",0],["",0]]],[[],["deltatransitionchainproof",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["deltatransitionchainproof",3],["deltatransitionchainproof",3]],["bool",0]],[[["deltatransitionchainproof",3],["formatter",3]],["result",6]],[[]],[[],["deltatransitionchainproof",3]],[[["deltatransitionchainproofjson",3]],["deltatransitionchainproof",3]],[[["versioned",3,[["deltatransitionchainproof",3]]]],["deltatransitionchainproof",3]],[[["deltatransitionchainproof",3]],["deltatransitionchainproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]]]]]],["deltatransitionchainproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]]]],["deltatransitionchainproof",3]],[[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]],["deltatransitionchainproof",3]],[[],["usize",0]],[[]],[[["deltatransitionchainproof",3],["deltatransitionchainproof",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["epochledger",3]],["epochledger",3]],[[["epochdata",3]],["epochdata",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["epochledger",3]],[[],["epochdata",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],null,[[["epochledger",3],["epochledger",3]],["bool",0]],[[["epochdata",3],["epochdata",3]],["bool",0]],[[["epochledger",3],["formatter",3]],["result",6]],[[["epochdata",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["epochledger",3]]]]]],["epochledger",3]],[[["versioned",3,[["epochledger",3]]]],["epochledger",3]],[[]],[[["epochledger",3]],["epochledger",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["epochledger",3]]]]]]]],["epochledger",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["epochledger",3]]]]]]]]]],["epochledger",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["epochdata",3]]]]]]]]]],["epochdata",3]],[[["versioned",3,[["epochdata",3]]]],["epochdata",3]],[[["epochdata",3]],["epochdata",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["epochdata",3]]]]]]]],["epochdata",3]],[[["versioned",3,[["versioned",3,[["epochdata",3]]]]]],["epochdata",3]],null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["epochledger",3],["epochledger",3]],["bool",0]],[[["epochdata",3],["epochdata",3]],["bool",0]],null,null,[[["",0]]],[[["",0]]],[[["epochledger",3]],["roinput",3]],[[["epochdata",3]],["roinput",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["externaltransition",3]],["externaltransition",3]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["externaltransition",3],["externaltransition",3]],["bool",0]],[[["externaltransition",3],["formatter",3]],["result",6]],[[["versioned",3,[["externaltransition",3]]]],["externaltransition",3]],[[["externaltransitionjson",3]],["externaltransition",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]]]]]],["externaltransition",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]]]],["externaltransition",3]],[[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]],["externaltransition",3]],[[]],[[["externaltransition",3]],["externaltransition",3]],[[],["usize",0]],[[]],[[["externaltransition",3],["externaltransition",3]],["bool",0]],null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["externaltransition",3],["",0]],["bool",0]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["globalslot",3]],["globalslot",3]],[[["",0],["",0]]],[[],["globalslot",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["globalslot",3],["globalslot",3]],["bool",0]],[[["globalslot",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["globalslot",3]]]]]]]],["globalslot",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["globalslot",3]]]]]]]]]],["globalslot",3]],[[["versioned",3,[["versioned",3,[["globalslot",3]]]]]],["globalslot",3]],[[["versioned",3,[["globalslot",3]]]],["globalslot",3]],[[["globalslot",3]],["globalslot",3]],[[]],[[],["usize",0]],[[]],[[["globalslot",3],["globalslot",3]],["bool",0]],null,null,[[["",0]]],[[["globalslot",3]],["roinput",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bitslice",3]],[[["biginttokenid",3]],["tokenid",3]],[[["length",3]],["length",3]],[[["delta",3]],["delta",3]],[[["extendedu32",3]],["extendedu32",3]],[[["extendedu64",3]],["extendedu64",3]],[[["amount",3]],["amount",3]],[[["accountnonce",3]],["accountnonce",3]],[[["globalslotnumber",3]],["globalslotnumber",3]],[[["hex64",3]],["hex64",3]],[[["char",3]],["char",3]],[[["blocktime",3]],["blocktime",3]],[[["blocktimespan",3]],["blocktimespan",3]],[[["bigint256",3]],["bigint256",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["blocktime",3]],["offsetdatetime",3]],[[],["tokenid",3]],[[],["length",3]],[[],["delta",3]],[[],["extendedu32",3]],[[],["extendedu64",3]],[[],["amount",3]],[[],["accountnonce",3]],[[],["globalslotnumber",3]],[[],["hex64",3]],[[],["char",3]],[[],["blocktime",3]],[[],["blocktimespan",3]],[[],["bigint256",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]]],[[["",0]]],[[["blocktime",3]],["u64",0]],[[["tokenid",3],["tokenid",3]],["bool",0]],[[["length",3],["length",3]],["bool",0]],[[["delta",3],["delta",3]],["bool",0]],[[["extendedu32",3],["extendedu32",3]],["bool",0]],[[["extendedu64",3],["extendedu64",3]],["bool",0]],[[["amount",3],["amount",3]],["bool",0]],[[["parseamounterror",4],["parseamounterror",4]],["bool",0]],[[["accountnonce",3],["accountnonce",3]],["bool",0]],[[["globalslotnumber",3],["globalslotnumber",3]],["bool",0]],[[["hex64",3],["hex64",3]],["bool",0]],[[["char",3],["char",3]],["bool",0]],[[["blocktime",3],["blocktime",3]],["bool",0]],[[["blocktimespan",3],["blocktimespan",3]],["bool",0]],[[["bigint256",3],["bigint256",3]],["bool",0]],[[["tokenid",3],["formatter",3]],["result",6]],[[["length",3],["formatter",3]],["result",6]],[[["delta",3],["formatter",3]],["result",6]],[[["extendedu32",3],["formatter",3]],["result",6]],[[["extendedu64",3],["formatter",3]],["result",6]],[[["amount",3],["formatter",3]],["result",6]],[[["amount",3],["formatter",3]],["result",6]],[[["parseamounterror",4],["formatter",3]],["result",6]],[[["parseamounterror",4],["formatter",3]],["result",6]],[[["accountnonce",3],["formatter",3]],["result",6]],[[["globalslotnumber",3],["formatter",3]],["result",6]],[[["hex64",3],["formatter",3]],["result",6]],[[["char",3],["formatter",3]],["result",6]],[[["char",3],["formatter",3]],["result",4,[["error",3]]]],[[["blocktime",3],["formatter",3]],["result",6]],[[["blocktimespan",3],["formatter",3]],["result",6]],[[["bigint256",3],["formatter",3]],["result",6]],[[]],[[["tokenidv1",6]],["tokenid",3]],[[["u64",0]],["tokenid",3]],[[]],[[["lengthv1",6]],["length",3]],[[["u32",0]],["length",3]],[[["u32",0]],["delta",3]],[[["deltav1",6]],["delta",3]],[[]],[[["i32",0]],["extendedu32",3]],[[]],[[["extendedu32v1",6]],["extendedu32",3]],[[["u64",0]],["extendedu64",3]],[[]],[[["u64",0]],["amount",3]],[[["extendedu64_3",6]],["amount",3]],[[["amountv1",6]],["amount",3]],[[]],[[["parseinterror",3]],["parseamounterror",4]],[[]],[[["extendedu32v1",6]],["accountnonce",3]],[[["u32",0]],["accountnonce",3]],[[]],[[["accountnoncev1",6]],["accountnonce",3]],[[["u32",0]],["globalslotnumber",3]],[[["globalslotnumberv1",6]],["globalslotnumber",3]],[[["extendedu32v1",6]],["globalslotnumber",3]],[[]],[[]],[[["hex64v1",6]],["hex64",3]],[[["i64",0]],["hex64",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["charjson",3]]]]]]]]]],["char",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["charjson",3]]]]]]]],["char",3]],[[["charv1",6]],["char",3]],[[["versioned",3,[["versioned",3,[["charjson",3]]]]]],["char",3]],[[["versioned",3,[["charjson",3]]]],["char",3]],[[["charjson",3]],["char",3]],[[["u8",0]],["char",3]],[[]],[[["blocktimev1",6]],["blocktime",3]],[[]],[[["u64",0]],["blocktime",3]],[[["u64",0]],["blocktimespan",3]],[[]],[[]],[[],["bigint256",3]],[[["str",0]],["result",4,[["amount",3]]]],[[["str",0]],["result",4,[["char",3]]]],[[["u64",0]],["blocktime",3]],[[["u64",0]],["blocktime",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenid",3],["tokenid",3]],["bool",0]],[[["length",3],["length",3]],["bool",0]],[[["delta",3],["delta",3]],["bool",0]],[[["extendedu32",3],["extendedu32",3]],["bool",0]],[[["extendedu64",3],["extendedu64",3]],["bool",0]],[[["amount",3],["amount",3]],["bool",0]],[[["parseamounterror",4],["parseamounterror",4]],["bool",0]],[[["accountnonce",3],["accountnonce",3]],["bool",0]],[[["globalslotnumber",3],["globalslotnumber",3]],["bool",0]],[[["hex64",3],["hex64",3]],["bool",0]],[[["char",3],["char",3]],["bool",0]],[[["blocktime",3],["blocktime",3]],["bool",0]],[[["blocktimespan",3],["blocktimespan",3]],["bool",0]],[[["bigint256",3],["bigint256",3]],["bool",0]],[[["length",3],["length",3]],["option",4,[["ordering",4]]]],[[["delta",3],["delta",3]],["option",4,[["ordering",4]]]],[[["extendedu32",3],["extendedu32",3]],["option",4,[["ordering",4]]]],[[["extendedu64",3],["extendedu64",3]],["option",4,[["ordering",4]]]],[[["parseamounterror",4]],["option",4,[["error",8]]]],[[["bigint256",3]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["tokenid",3]],["roinput",3]],[[["length",3]],["roinput",3]],[[["amount",3]],["roinput",3]],[[["globalslotnumber",3]],["roinput",3]],[[["blocktime",3]],["roinput",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["result",4,[["bitslice",3],["bitspanerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["char",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asref",8]],["result",4,[["bigint256",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolconstants",3]],["protocolconstants",3]],[[["protocolstate",3]],["protocolstate",3]],[[["protocolstatebody",3]],["protocolstatebody",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["protocolstate",3]],["globalslot",3]],[[],["protocolconstants",3]],[[],["protocolstate",3]],[[],["protocolstatebody",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["protocolconstants",3],["protocolconstants",3]],["bool",0]],[[["protocolstate",3],["protocolstate",3]],["bool",0]],[[["protocolstatebody",3],["protocolstatebody",3]],["bool",0]],[[["protocolconstants",3],["formatter",3]],["result",6]],[[["protocolstate",3],["formatter",3]],["result",6]],[[["protocolstatebody",3],["formatter",3]],["result",6]],[[["protocolconstants",3]],["protocolconstants",3]],[[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]],["protocolconstants",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]]]],["protocolconstants",3]],[[["versioned",3,[["protocolconstants",3]]]],["protocolconstants",3]],[[["protocolconstantsjson",3]],["protocolconstants",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]]]]]],["protocolconstants",3]],[[["protocolstate",3]],["protocolstate",3]],[[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]],["protocolstate",3]],[[]],[[["versioned",3,[["protocolstate",3]]]],["protocolstate",3]],[[["protocolstatejson",3]],["protocolstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]]]]]],["protocolstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]]]],["protocolstate",3]],[[["versioned",3,[["protocolstatebody",3]]]],["protocolstatebody",3]],[[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]],["protocolstatebody",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]]]],["protocolstatebody",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]]]]]],["protocolstatebody",3]],[[["protocolstatebodyjson",3]],["protocolstatebody",3]],[[["protocolstatebody",3]],["protocolstatebody",3]],[[]],null,null,[[["",0]],["length",3]],[[["protocolstate",3]],["length",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],null,[[["",0]],["length",3]],[[["protocolstate",3]],["length",3]],[[["protocolconstants",3],["protocolconstants",3]],["bool",0]],[[["protocolstate",3],["protocolstate",3]],["bool",0]],[[["protocolstatebody",3],["protocolstatebody",3]],["bool",0]],null,null,null,[[["",0]],["vec",3]],[[["protocolstate",3]],["vec",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["protocolconstants",3]],["roinput",3]],[[["protocolstate",3]],["roinput",3]],[[["protocolstatebody",3]],["roinput",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,[[["protocolstateproof",3]],["protocolstateproof",3]],[[["proofstatement",3]],["proofstatement",3]],[[["proofstate",3]],["proofstate",3]],[[["proofstatedeferredvalues",3]],["proofstatedeferredvalues",3]],[[["plonk",3]],["plonk",3]],[[["shiftedvalue",4]],["shiftedvalue",4]],[[["spongedigestbeforeevaluations",3]],["spongedigestbeforeevaluations",3]],[[["proofstatepairingbased",3]],["proofstatepairingbased",3]],[[["pairingbased",3]],["pairingbased",3]],[[["prevevals",3]],["prevevals",3]],[[["prevxhat",3]],["prevxhat",3]],[[["proof",3]],["proof",3]],[[["proofopeningsevals",3]],["proofopeningsevals",3]],[[["proofopenings",3]],["proofopenings",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["protocolstateproof",3]],[[],["proofstatement",3]],[[],["proofstate",3]],[[],["proofstatedeferredvalues",3]],[[],["plonk",3]],[[],["shiftedvalue",4]],[[],["spongedigestbeforeevaluations",3]],[[],["proofstatepairingbased",3]],[[],["pairingbased",3]],[[],["prevevals",3]],[[],["prevxhat",3]],[[],["proof",3]],[[],["proofopeningsevals",3]],[[],["proofopenings",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["protocolstateproof",3],["protocolstateproof",3]],["bool",0]],[[["proofstatement",3],["proofstatement",3]],["bool",0]],[[["proofstate",3],["proofstate",3]],["bool",0]],[[["proofstatedeferredvalues",3],["proofstatedeferredvalues",3]],["bool",0]],[[["plonk",3],["plonk",3]],["bool",0]],[[["shiftedvalue",4],["shiftedvalue",4]],["bool",0]],[[["spongedigestbeforeevaluations",3],["spongedigestbeforeevaluations",3]],["bool",0]],[[["proofstatepairingbased",3],["proofstatepairingbased",3]],["bool",0]],[[["pairingbased",3],["pairingbased",3]],["bool",0]],[[["prevevals",3],["prevevals",3]],["bool",0]],[[["prevxhat",3],["prevxhat",3]],["bool",0]],[[["proof",3],["proof",3]],["bool",0]],[[["proofopeningsevals",3],["proofopeningsevals",3]],["bool",0]],[[["proofopenings",3],["proofopenings",3]],["bool",0]],null,null,[[["protocolstateproof",3],["formatter",3]],["result",6]],[[["proofstatement",3],["formatter",3]],["result",6]],[[["proofstate",3],["formatter",3]],["result",6]],[[["proofstatedeferredvalues",3],["formatter",3]],["result",6]],[[["plonk",3],["formatter",3]],["result",6]],[[["shiftedvalue",4],["formatter",3]],["result",6]],[[["spongedigestbeforeevaluations",3],["formatter",3]],["result",6]],[[["proofstatepairingbased",3],["formatter",3]],["result",6]],[[["pairingbased",3],["formatter",3]],["result",6]],[[["prevevals",3],["formatter",3]],["result",6]],[[["prevxhat",3],["formatter",3]],["result",6]],[[["proof",3],["formatter",3]],["result",6]],[[["proofopeningsevals",3],["formatter",3]],["result",6]],[[["proofopenings",3],["formatter",3]],["result",6]],[[["protocolstateproofjson",3]],["protocolstateproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]]]],["protocolstateproof",3]],[[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]],["protocolstateproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]]]]]],["protocolstateproof",3]],[[["protocolstateproofbase64json",3]],["protocolstateproof",3]],[[["versioned",3,[["protocolstateproof",3]]]],["protocolstateproof",3]],[[]],[[["protocolstateproof",3]],["protocolstateproof",3]],[[["proofstatementjson",3]],["proofstatement",3]],[[["versioned",3,[["proofstatement",3]]]],["proofstatement",3]],[[["proofstatement",3]],["proofstatement",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]]]],["proofstatement",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]]]]]],["proofstatement",3]],[[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]],["proofstatement",3]],[[["versioned",3,[["proofstate",3]]]],["proofstate",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstate",3]]]]]]]],["proofstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstate",3]]]]]]]]]],["proofstate",3]],[[["versioned",3,[["versioned",3,[["proofstate",3]]]]]],["proofstate",3]],[[["proofstate",3]],["proofstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]]]]]],["proofstatedeferredvalues",3]],[[["proofstatedeferredvalues",3]],["proofstatedeferredvalues",3]],[[]],[[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]],["proofstatedeferredvalues",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]]]],["proofstatedeferredvalues",3]],[[["versioned",3,[["proofstatedeferredvalues",3]]]],["proofstatedeferredvalues",3]],[[["plonk",3]],["plonk",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["plonk",3]]]]]]]],["plonk",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["plonk",3]]]]]]]]]],["plonk",3]],[[]],[[["versioned",3,[["versioned",3,[["plonk",3]]]]]],["plonk",3]],[[["versioned",3,[["plonk",3]]]],["plonk",3]],[[]],[[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]],["shiftedvalue",4]],[[["shiftedvalue",4]],["shiftedvalue",4]],[[["versioned",3,[["shiftedvalue",4]]]],["shiftedvalue",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]]]]]],["shiftedvalue",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]]]],["shiftedvalue",4]],[[["spongedigestbeforeevaluations",3]],["spongedigestbeforeevaluations",3]],[[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]],["spongedigestbeforeevaluations",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]]]]]],["spongedigestbeforeevaluations",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]]]],["spongedigestbeforeevaluations",3]],[[]],[[["versioned",3,[["spongedigestbeforeevaluations",3]]]],["spongedigestbeforeevaluations",3]],[[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]],["proofstatepairingbased",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]]]]]],["proofstatepairingbased",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]]]],["proofstatepairingbased",3]],[[]],[[["proofstatepairingbased",3]],["proofstatepairingbased",3]],[[["versioned",3,[["proofstatepairingbased",3]]]],["proofstatepairingbased",3]],[[]],[[["pairingbased",3]],["pairingbased",3]],[[["versioned",3,[["pairingbased",3]]]],["pairingbased",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]]]]]],["pairingbased",3]],[[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]],["pairingbased",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]]]],["pairingbased",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["prevevals",3]]]]]]]],["prevevals",3]],[[]],[[["versioned",3,[["versioned",3,[["prevevals",3]]]]]],["prevevals",3]],[[["versioned",3,[["prevevals",3]]]],["prevevals",3]],[[["prevevals",3]],["prevevals",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["prevevals",3]]]]]]]]]],["prevevals",3]],[[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]],["prevxhat",3]],[[["versioned",3,[["prevxhat",3]]]],["prevxhat",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]]]]]],["prevxhat",3]],[[]],[[["prevxhat",3]],["prevxhat",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]]]],["prevxhat",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proof",3]]]]]]]],["proof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proof",3]]]]]]]]]],["proof",3]],[[["versioned",3,[["versioned",3,[["proof",3]]]]]],["proof",3]],[[["proof",3]],["proof",3]],[[["versioned",3,[["proof",3]]]],["proof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]]]]]],["proofopeningsevals",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]]]],["proofopeningsevals",3]],[[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]],["proofopeningsevals",3]],[[["versioned",3,[["proofopeningsevals",3]]]],["proofopeningsevals",3]],[[["proofopeningsevals",3]],["proofopeningsevals",3]],[[["proofopenings",3]],["proofopenings",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]]]],["proofopenings",3]],[[]],[[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]],["proofopenings",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]]]]]],["proofopenings",3]],[[["versioned",3,[["proofopenings",3]]]],["proofopenings",3]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["protocolstateproof",3],["protocolstateproof",3]],["bool",0]],[[["proofstatement",3],["proofstatement",3]],["bool",0]],[[["proofstate",3],["proofstate",3]],["bool",0]],[[["proofstatedeferredvalues",3],["proofstatedeferredvalues",3]],["bool",0]],[[["plonk",3],["plonk",3]],["bool",0]],[[["shiftedvalue",4],["shiftedvalue",4]],["bool",0]],[[["spongedigestbeforeevaluations",3],["spongedigestbeforeevaluations",3]],["bool",0]],[[["proofstatepairingbased",3],["proofstatepairingbased",3]],["bool",0]],[[["pairingbased",3],["pairingbased",3]],["bool",0]],[[["prevevals",3],["prevevals",3]],["bool",0]],[[["prevxhat",3],["prevxhat",3]],["bool",0]],[[["proof",3],["proof",3]],["bool",0]],[[["proofopeningsevals",3],["proofopeningsevals",3]],["bool",0]],[[["proofopenings",3],["proofopenings",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bulletproofchallenge",3]],["bulletproofchallenge",3]],[[["bulletproofchallenges",3]],["bulletproofchallenges",3]],[[["proofstatebulletproofchallenges",3]],["proofstatebulletproofchallenges",3]],[[["bulletproofchallengetuple17",3]],["bulletproofchallengetuple17",3]],[[["bulletproofchallengetuple18",3]],["bulletproofchallengetuple18",3]],[[["bulletproofprechallenge",4]],["bulletproofprechallenge",4]],[[["scalarchallengevector2",3]],["scalarchallengevector2",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["bulletproofchallenge",3]],[[],["bulletproofchallenges",3]],[[],["proofstatebulletproofchallenges",3]],[[],["bulletproofchallengetuple17",3]],[[],["bulletproofchallengetuple18",3]],[[],["bulletproofprechallenge",4]],[[],["scalarchallengevector2",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["bulletproofchallenge",3],["bulletproofchallenge",3]],["bool",0]],[[["bulletproofchallenges",3],["bulletproofchallenges",3]],["bool",0]],[[["proofstatebulletproofchallenges",3],["proofstatebulletproofchallenges",3]],["bool",0]],[[["bulletproofchallengetuple17",3],["bulletproofchallengetuple17",3]],["bool",0]],[[["bulletproofchallengetuple18",3],["bulletproofchallengetuple18",3]],["bool",0]],[[["bulletproofprechallenge",4],["bulletproofprechallenge",4]],["bool",0]],[[["scalarchallengevector2",3],["scalarchallengevector2",3]],["bool",0]],[[["bulletproofchallenge",3],["formatter",3]],["result",6]],[[["bulletproofchallenges",3],["formatter",3]],["result",6]],[[["proofstatebulletproofchallenges",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple17",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple18",3],["formatter",3]],["result",6]],[[["bulletproofprechallenge",4],["formatter",3]],["result",6]],[[["scalarchallengevector2",3],["formatter",3]],["result",6]],[[["bulletproofchallenge",3]],["bulletproofchallenge",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]],["bulletproofchallenge",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]]]]]],["bulletproofchallenge",3]],[[["versioned",3,[["bulletproofchallenge",3]]]],["bulletproofchallenge",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]]]],["bulletproofchallenge",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]]]]]],["bulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]]]],["bulletproofchallenges",3]],[[["bulletproofchallenges",3]],["bulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]],["bulletproofchallenges",3]],[[]],[[["versioned",3,[["bulletproofchallenges",3]]]],["bulletproofchallenges",3]],[[["proofstatebulletproofchallenges",3]],["proofstatebulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]]]]]],["proofstatebulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]]]],["proofstatebulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]],["proofstatebulletproofchallenges",3]],[[]],[[["versioned",3,[["proofstatebulletproofchallenges",3]]]],["proofstatebulletproofchallenges",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]]]],["bulletproofchallengetuple17",3]],[[["bulletproofchallengetuple17",3]],["bulletproofchallengetuple17",3]],[[["versioned",3,[["bulletproofchallengetuple17",3]]]],["bulletproofchallengetuple17",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]],["bulletproofchallengetuple17",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]]]]]],["bulletproofchallengetuple17",3]],[[["versioned",3,[["bulletproofchallengetuple18",3]]]],["bulletproofchallengetuple18",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]]]],["bulletproofchallengetuple18",3]],[[["bulletproofchallengetuple18",3]],["bulletproofchallengetuple18",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]],["bulletproofchallengetuple18",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]]]]]],["bulletproofchallengetuple18",3]],[[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]],["bulletproofprechallenge",4]],[[["versioned",3,[["bulletproofprechallenge",4]]]],["bulletproofprechallenge",4]],[[]],[[["bulletproofprechallenge",4]],["bulletproofprechallenge",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]]]],["bulletproofprechallenge",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]]]]]],["bulletproofprechallenge",4]],[[["versioned",3,[["scalarchallengevector2",3]]]],["scalarchallengevector2",3]],[[["scalarchallengevector2",3]],["scalarchallengevector2",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]]]]]],["scalarchallengevector2",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]]]],["scalarchallengevector2",3]],[[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]],["scalarchallengevector2",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bulletproofchallenge",3],["bulletproofchallenge",3]],["bool",0]],[[["bulletproofchallenges",3],["bulletproofchallenges",3]],["bool",0]],[[["proofstatebulletproofchallenges",3],["proofstatebulletproofchallenges",3]],["bool",0]],[[["bulletproofchallengetuple17",3],["bulletproofchallengetuple17",3]],["bool",0]],[[["bulletproofchallengetuple18",3],["bulletproofchallengetuple18",3]],["bool",0]],[[["bulletproofprechallenge",4],["bulletproofprechallenge",4]],["bool",0]],[[["scalarchallengevector2",3],["scalarchallengevector2",3]],["bool",0]],[[["i64",0],["i64",0]],["bulletproofchallenge",3]],[[],["bulletproofchallengetuple17",3]],[[],["bulletproofchallengetuple18",3]],[[["i64",0],["i64",0]],["scalarchallengevector2",3]],null,[[["i64",0],["i64",0]],["bulletproofprechallenge",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["fieldelementvec",3]],["fieldelementvec",3]],[[["finiteecpoint",3]],["finiteecpoint",3]],[[["finiteecpointvec",3]],["finiteecpointvec",3]],[[["finiteecpointpair",3]],["finiteecpointpair",3]],[[["finiteecpointpairvec",3]],["finiteecpointpairvec",3]],[[["ecpoint",4]],["ecpoint",4]],[[["ecpointvec",3]],["ecpointvec",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["fieldelementvec",3]],[[],["finiteecpoint",3]],[[],["finiteecpointvec",3]],[[],["finiteecpointpair",3]],[[],["finiteecpointpairvec",3]],[[],["ecpoint",4]],[[],["ecpointvec",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["fieldelementvec",3],["fieldelementvec",3]],["bool",0]],[[["finiteecpoint",3],["finiteecpoint",3]],["bool",0]],[[["finiteecpointvec",3],["finiteecpointvec",3]],["bool",0]],[[["finiteecpointpair",3],["finiteecpointpair",3]],["bool",0]],[[["finiteecpointpairvec",3],["finiteecpointpairvec",3]],["bool",0]],[[["ecpoint",4],["ecpoint",4]],["bool",0]],[[["ecpointvec",3],["ecpointvec",3]],["bool",0]],[[["fieldelementvec",3],["formatter",3]],["result",6]],[[["finiteecpoint",3],["formatter",3]],["result",6]],[[["finiteecpointvec",3],["formatter",3]],["result",6]],[[["finiteecpointpair",3],["formatter",3]],["result",6]],[[["finiteecpointpairvec",3],["formatter",3]],["result",6]],[[["ecpoint",4],["formatter",3]],["result",6]],[[["ecpointvec",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]]]]]],["fieldelementvec",3]],[[["fieldelementvec",3]],["fieldelementvec",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]]]],["fieldelementvec",3]],[[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]],["fieldelementvec",3]],[[["versioned",3,[["fieldelementvec",3]]]],["fieldelementvec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]]]]]],["finiteecpoint",3]],[[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]],["finiteecpoint",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]]]],["finiteecpoint",3]],[[["versioned",3,[["finiteecpoint",3]]]],["finiteecpoint",3]],[[["finiteecpoint",3]],["finiteecpoint",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]]]],["finiteecpointvec",3]],[[["versioned",3,[["finiteecpointvec",3]]]],["finiteecpointvec",3]],[[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]],["finiteecpointvec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]]]]]],["finiteecpointvec",3]],[[]],[[["finiteecpointvec",3]],["finiteecpointvec",3]],[[["finiteecpointpair",3]],["finiteecpointpair",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]]]]]],["finiteecpointpair",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]]]],["finiteecpointpair",3]],[[["versioned",3,[["finiteecpointpair",3]]]],["finiteecpointpair",3]],[[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]],["finiteecpointpair",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]]]]]],["finiteecpointpairvec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]]]],["finiteecpointpairvec",3]],[[]],[[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]],["finiteecpointpairvec",3]],[[["versioned",3,[["finiteecpointpairvec",3]]]],["finiteecpointpairvec",3]],[[["finiteecpointpairvec",3]],["finiteecpointpairvec",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]]]]]],["ecpoint",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]]]],["ecpoint",4]],[[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]],["ecpoint",4]],[[["versioned",3,[["ecpoint",4]]]],["ecpoint",4]],[[["ecpoint",4]],["ecpoint",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]]]]]],["ecpointvec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]]]],["ecpointvec",3]],[[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]],["ecpointvec",3]],[[["versioned",3,[["ecpointvec",3]]]],["ecpointvec",3]],[[["ecpointvec",3]],["ecpointvec",3]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fieldelementvec",3],["fieldelementvec",3]],["bool",0]],[[["finiteecpoint",3],["finiteecpoint",3]],["bool",0]],[[["finiteecpointvec",3],["finiteecpointvec",3]],["bool",0]],[[["finiteecpointpair",3],["finiteecpointpair",3]],["bool",0]],[[["finiteecpointpairvec",3],["finiteecpointpairvec",3]],["bool",0]],[[["ecpoint",4],["ecpoint",4]],["bool",0]],[[["ecpointvec",3],["ecpointvec",3]],["bool",0]],[[["fieldelementvec",3]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asref",8]],["result",4,[["fieldelementvec",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["openingproof",3]],["openingproof",3]],[[["",0],["",0]]],[[],["openingproof",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["openingproof",3],["openingproof",3]],["bool",0]],[[["openingproof",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["openingproof",3]]]]]]]],["openingproof",3]],[[["versioned",3,[["versioned",3,[["openingproof",3]]]]]],["openingproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["openingproof",3]]]]]]]]]],["openingproof",3]],[[["versioned",3,[["openingproof",3]]]],["openingproof",3]],[[["openingproof",3]],["openingproof",3]],[[]],[[],["usize",0]],[[]],null,[[["openingproof",3],["openingproof",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["proofevaluations",3]],["proofevaluations",3]],[[["",0],["",0]]],[[],["proofevaluations",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["proofevaluations",3],["proofevaluations",3]],["bool",0]],null,[[["proofevaluations",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]]]],["proofevaluations",3]],[[["proofevaluations",3]],["proofevaluations",3]],[[["versioned",3,[["proofevaluations",3]]]],["proofevaluations",3]],[[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]],["proofevaluations",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]]]]]],["proofevaluations",3]],[[]],[[],["usize",0]],[[]],null,[[["proofevaluations",3],["proofevaluations",3]],["bool",0]],null,null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["proofmessages",3]],["proofmessages",3]],[[["proofmessagewithoutdegreeboundlist",3]],["proofmessagewithoutdegreeboundlist",3]],[[["proofmessagewithdegreebound",3]],["proofmessagewithdegreebound",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["proofmessages",3]],[[],["proofmessagewithoutdegreeboundlist",3]],[[],["proofmessagewithdegreebound",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["proofmessages",3],["proofmessages",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlist",3],["proofmessagewithoutdegreeboundlist",3]],["bool",0]],[[["proofmessagewithdegreebound",3],["proofmessagewithdegreebound",3]],["bool",0]],[[["proofmessages",3],["formatter",3]],["result",6]],[[["proofmessagewithoutdegreeboundlist",3],["formatter",3]],["result",6]],[[["proofmessagewithdegreebound",3],["formatter",3]],["result",6]],[[["versioned",3,[["proofmessages",3]]]],["proofmessages",3]],[[["proofmessages",3]],["proofmessages",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]]]],["proofmessages",3]],[[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]],["proofmessages",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]]]]]],["proofmessages",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]]]],["proofmessagewithoutdegreeboundlist",3]],[[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]],["proofmessagewithoutdegreeboundlist",3]],[[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]],["proofmessagewithoutdegreeboundlist",3]],[[["proofmessagewithoutdegreeboundlist",3]],["proofmessagewithoutdegreeboundlist",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]]]]]],["proofmessagewithoutdegreeboundlist",3]],[[]],[[["proofmessagewithdegreebound",3]],["proofmessagewithdegreebound",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]]]]]],["proofmessagewithdegreebound",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]]]],["proofmessagewithdegreebound",3]],[[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]],["proofmessagewithdegreebound",3]],[[["versioned",3,[["proofmessagewithdegreebound",3]]]],["proofmessagewithdegreebound",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],null,[[["proofmessages",3],["proofmessages",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlist",3],["proofmessagewithoutdegreeboundlist",3]],["bool",0]],[[["proofmessagewithdegreebound",3],["proofmessagewithdegreebound",3]],["bool",0]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolversion",3]],["protocolversion",3]],[[["",0],["",0]]],[[],["protocolversion",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["protocolversion",3],["protocolversion",3]],["bool",0]],[[["protocolversion",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolversion",3]]]]]]]]]],["protocolversion",3]],[[["versioned",3,[["versioned",3,[["protocolversion",3]]]]]],["protocolversion",3]],[[["protocolversion",3]],["protocolversion",3]],[[["versioned",3,[["protocolversion",3]]]],["protocolversion",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolversion",3]]]]]]]],["protocolversion",3]],[[],["usize",0]],[[]],null,null,[[["protocolversion",3],["protocolversion",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["transactionsnarkwork",3]],["transactionsnarkwork",3]],[[["oneortwo",4]],["oneortwo",4]],[[["transactionsnark",3]],["transactionsnark",3]],[[["statement",3]],["statement",3]],[[["pendingcoinbasestackstate",3]],["pendingcoinbasestackstate",3]],[[["pendingcoinbase",3]],["pendingcoinbase",3]],[[["statestack",3]],["statestack",3]],[[["feeexcesspair",3]],["feeexcesspair",3]],[[["feeexcess",3]],["feeexcess",3]],[[["signed",3]],["signed",3]],[[["sgntype",4]],["sgntype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["transactionsnarkwork",3],["transactionsnarkwork",3]],["bool",0]],[[["oneortwo",4],["oneortwo",4]],["bool",0]],[[["transactionsnark",3],["transactionsnark",3]],["bool",0]],[[["statement",3],["statement",3]],["bool",0]],[[["pendingcoinbasestackstate",3],["pendingcoinbasestackstate",3]],["bool",0]],[[["pendingcoinbase",3],["pendingcoinbase",3]],["bool",0]],[[["statestack",3],["statestack",3]],["bool",0]],[[["feeexcesspair",3],["feeexcesspair",3]],["bool",0]],[[["feeexcess",3],["feeexcess",3]],["bool",0]],[[["signed",3],["signed",3]],["bool",0]],[[["sgntype",4],["sgntype",4]],["bool",0]],null,null,[[["transactionsnarkwork",3],["formatter",3]],["result",6]],[[["oneortwo",4],["formatter",3]],["result",6]],[[["transactionsnark",3],["formatter",3]],["result",6]],[[["statement",3],["formatter",3]],["result",6]],[[["pendingcoinbasestackstate",3],["formatter",3]],["result",6]],[[["pendingcoinbase",3],["formatter",3]],["result",6]],[[["statestack",3],["formatter",3]],["result",6]],[[["feeexcesspair",3],["formatter",3]],["result",6]],[[["feeexcess",3],["formatter",3]],["result",6]],[[["signed",3],["formatter",3]],["result",6]],[[["sgntype",4],["formatter",3]],["result",6]],[[]],[[["versioned",3,[["transactionsnarkwork",3]]]],["transactionsnarkwork",3]],[[["transactionsnarkwork",3]],["transactionsnarkwork",3]],[[["transactionsnarkworkjson",3]],["transactionsnarkwork",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]]]]]],["transactionsnarkwork",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]]]],["transactionsnarkwork",3]],[[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]],["transactionsnarkwork",3]],[[["oneortwo",4]],["oneortwo",4]],[[]],[[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]],["oneortwo",4]],[[["versioned",3,[["oneortwo",4]]]],["oneortwo",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]]]],["oneortwo",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]]]]]],["oneortwo",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]]]]]],["transactionsnark",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]]]],["transactionsnark",3]],[[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]],["transactionsnark",3]],[[["versioned",3,[["transactionsnark",3]]]],["transactionsnark",3]],[[["transactionsnark",3]],["transactionsnark",3]],[[]],[[["statement",3]],["statement",3]],[[["versioned",3,[["statement",3]]]],["statement",3]],[[["versioned",3,[["versioned",3,[["statement",3]]]]]],["statement",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["statement",3]]]]]]]],["statement",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["statement",3]]]]]]]]]],["statement",3]],[[["statementjson",3]],["statement",3]],[[["versioned",3,[["pendingcoinbasestackstate",3]]]],["pendingcoinbasestackstate",3]],[[["pendingcoinbasestackstate",3]],["pendingcoinbasestackstate",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]]]],["pendingcoinbasestackstate",3]],[[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]],["pendingcoinbasestackstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]]]]]],["pendingcoinbasestackstate",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]]]],["pendingcoinbase",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]]]]]],["pendingcoinbase",3]],[[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]],["pendingcoinbase",3]],[[["versioned",3,[["pendingcoinbase",3]]]],["pendingcoinbase",3]],[[["pendingcoinbase",3]],["pendingcoinbase",3]],[[]],[[["versioned",3,[["versioned",3,[["statestack",3]]]]]],["statestack",3]],[[["versioned",3,[["statestack",3]]]],["statestack",3]],[[["statestack",3]],["statestack",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["statestack",3]]]]]]]],["statestack",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["statestack",3]]]]]]]]]],["statestack",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]]]],["feeexcesspair",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]]]]]],["feeexcesspair",3]],[[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]],["feeexcesspair",3]],[[["versioned",3,[["feeexcesspair",3]]]],["feeexcesspair",3]],[[["feeexcesspair",3]],["feeexcesspair",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]]]]]],["feeexcess",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]]]],["feeexcess",3]],[[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]],["feeexcess",3]],[[["versioned",3,[["feeexcess",3]]]],["feeexcess",3]],[[["feeexcess",3]],["feeexcess",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signed",3]]]]]]]]]],["signed",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signed",3]]]]]]]],["signed",3]],[[["versioned",3,[["versioned",3,[["signed",3]]]]]],["signed",3]],[[["versioned",3,[["signed",3]]]],["signed",3]],[[["signed",3]],["signed",3]],[[]],[[["versioned",3,[["sgntype",4]]]],["sgntype",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["sgntype",4]]]]]]]]]],["sgntype",4]],[[["sgntype",4]],["sgntype",4]],[[["versioned",3,[["versioned",3,[["sgntype",4]]]]]],["sgntype",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["sgntype",4]]]]]]]],["sgntype",4]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["transactionsnarkwork",3],["transactionsnarkwork",3]],["bool",0]],[[["oneortwo",4],["oneortwo",4]],["bool",0]],[[["transactionsnark",3],["transactionsnark",3]],["bool",0]],[[["statement",3],["statement",3]],["bool",0]],[[["pendingcoinbasestackstate",3],["pendingcoinbasestackstate",3]],["bool",0]],[[["pendingcoinbase",3],["pendingcoinbase",3]],["bool",0]],[[["statestack",3],["statestack",3]],["bool",0]],[[["feeexcesspair",3],["feeexcesspair",3]],["bool",0]],[[["feeexcess",3],["feeexcess",3]],["bool",0]],[[["signed",3],["signed",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["stagedledgerdiff",3]],["stagedledgerdiff",3]],[[["stagedledgerdifftuple",3]],["stagedledgerdifftuple",3]],[[["stagedledgerprediff",3]],["stagedledgerprediff",3]],[[["usercommandwithstatus",3]],["usercommandwithstatus",3]],[[["transactionstatus",4]],["transactionstatus",4]],[[["transactionstatusauxiliarydata",3]],["transactionstatusauxiliarydata",3]],[[["transactionstatusbalancedata",3]],["transactionstatusbalancedata",3]],[[["coinbase",4]],["coinbase",4]],[[["coinbasefeetransfer",3]],["coinbasefeetransfer",3]],[[["internalcommandbalancedata",4]],["internalcommandbalancedata",4]],[[["coinbasebalancedata",3]],["coinbasebalancedata",3]],[[["feetransferbalancedata",3]],["feetransferbalancedata",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,[[],["stagedledgerdiff",3]],[[],["stagedledgerdifftuple",3]],[[],["stagedledgerprediff",3]],[[],["coinbase",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,[[["stagedledgerdifftuple",3]],["option",4]],[[["stagedledgerdifftuple",3]],["stagedledgerprediff",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["stagedledgerdiff",3],["stagedledgerdiff",3]],["bool",0]],[[["stagedledgerdifftuple",3],["stagedledgerdifftuple",3]],["bool",0]],[[["stagedledgerprediff",3],["stagedledgerprediff",3]],["bool",0]],[[["usercommandwithstatus",3],["usercommandwithstatus",3]],["bool",0]],[[["transactionstatus",4],["transactionstatus",4]],["bool",0]],[[["transactionstatusauxiliarydata",3],["transactionstatusauxiliarydata",3]],["bool",0]],[[["transactionstatusbalancedata",3],["transactionstatusbalancedata",3]],["bool",0]],[[["coinbase",4],["coinbase",4]],["bool",0]],[[["coinbasefeetransfer",3],["coinbasefeetransfer",3]],["bool",0]],[[["internalcommandbalancedata",4],["internalcommandbalancedata",4]],["bool",0]],[[["coinbasebalancedata",3],["coinbasebalancedata",3]],["bool",0]],[[["feetransferbalancedata",3],["feetransferbalancedata",3]],["bool",0]],null,null,null,null,[[["stagedledgerdiff",3],["formatter",3]],["result",6]],[[["stagedledgerdifftuple",3],["formatter",3]],["result",6]],[[["stagedledgerprediff",3],["formatter",3]],["result",6]],[[["usercommandwithstatus",3],["formatter",3]],["result",6]],[[["transactionstatus",4],["formatter",3]],["result",6]],[[["transactionstatusauxiliarydata",3],["formatter",3]],["result",6]],[[["transactionstatusbalancedata",3],["formatter",3]],["result",6]],[[["coinbase",4],["formatter",3]],["result",6]],[[["coinbasefeetransfer",3],["formatter",3]],["result",6]],[[["internalcommandbalancedata",4],["formatter",3]],["result",6]],[[["coinbasebalancedata",3],["formatter",3]],["result",6]],[[["feetransferbalancedata",3],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]]]]]],["stagedledgerdiff",3]],[[]],[[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]],["stagedledgerdiff",3]],[[["versioned",3,[["stagedledgerdiff",3]]]],["stagedledgerdiff",3]],[[["stagedledgerdiff",3]],["stagedledgerdiff",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]]]],["stagedledgerdiff",3]],[[["stagedledgerdiffjson",3]],["stagedledgerdiff",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]]]]]],["stagedledgerdifftuple",3]],[[]],[[["stagedledgerdifftuple",3]],["stagedledgerdifftuple",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]]]],["stagedledgerdifftuple",3]],[[["versioned",3,[["stagedledgerdifftuple",3]]]],["stagedledgerdifftuple",3]],[[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]],["stagedledgerdifftuple",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]]]]]],["stagedledgerprediff",3]],[[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]],["stagedledgerprediff",3]],[[["versioned",3,[["stagedledgerprediff",3]]]],["stagedledgerprediff",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]]]],["stagedledgerprediff",3]],[[["stagedledgerprediff",3]],["stagedledgerprediff",3]],[[["usercommandwithstatusjson",3]],["usercommandwithstatus",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]]]]]],["usercommandwithstatus",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]]]],["usercommandwithstatus",3]],[[["usercommandwithstatus",3]],["usercommandwithstatus",3]],[[["versioned",3,[["usercommandwithstatus",3]]]],["usercommandwithstatus",3]],[[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]],["usercommandwithstatus",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]]]]]],["transactionstatus",4]],[[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]],["transactionstatus",4]],[[]],[[["transactionstatusjson",4]],["transactionstatus",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]]]],["transactionstatus",4]],[[["versioned",3,[["transactionstatus",4]]]],["transactionstatus",4]],[[["transactionstatus",4]],["transactionstatus",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]]]]]],["transactionstatusauxiliarydata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]]]],["transactionstatusauxiliarydata",3]],[[["transactionstatusauxiliarydata",3]],["transactionstatusauxiliarydata",3]],[[]],[[["versioned",3,[["transactionstatusauxiliarydata",3]]]],["transactionstatusauxiliarydata",3]],[[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]],["transactionstatusauxiliarydata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]]]],["transactionstatusbalancedata",3]],[[]],[[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]],["transactionstatusbalancedata",3]],[[["versioned",3,[["transactionstatusbalancedata",3]]]],["transactionstatusbalancedata",3]],[[["transactionstatusbalancedata",3]],["transactionstatusbalancedata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]]]]]],["transactionstatusbalancedata",3]],[[["coinbase",4]],["coinbase",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbase",4]]]]]]]]]],["coinbase",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbase",4]]]]]]]],["coinbase",4]],[[["versioned",3,[["versioned",3,[["coinbase",4]]]]]],["coinbase",4]],[[]],[[["coinbasejson",4]],["coinbase",4]],[[["versioned",3,[["coinbase",4]]]],["coinbase",4]],[[["versioned",3,[["coinbasefeetransfer",3]]]],["coinbasefeetransfer",3]],[[["coinbasefeetransfer",3]],["coinbasefeetransfer",3]],[[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]],["coinbasefeetransfer",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]]]]]],["coinbasefeetransfer",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]]]],["coinbasefeetransfer",3]],[[["internalcommandbalancedatajson",4]],["internalcommandbalancedata",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]]]]]],["internalcommandbalancedata",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]]]],["internalcommandbalancedata",4]],[[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]],["internalcommandbalancedata",4]],[[["versioned",3,[["internalcommandbalancedata",4]]]],["internalcommandbalancedata",4]],[[["internalcommandbalancedata",4]],["internalcommandbalancedata",4]],[[]],[[]],[[["coinbasebalancedata",3]],["coinbasebalancedata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]]]]]],["coinbasebalancedata",3]],[[["versioned",3,[["coinbasebalancedata",3]]]],["coinbasebalancedata",3]],[[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]],["coinbasebalancedata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]]]],["coinbasebalancedata",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]]]],["feetransferbalancedata",3]],[[["feetransferbalancedata",3]],["feetransferbalancedata",3]],[[["versioned",3,[["feetransferbalancedata",3]]]],["feetransferbalancedata",3]],[[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]],["feetransferbalancedata",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]]]]]],["feetransferbalancedata",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stagedledgerdiff",3],["stagedledgerdiff",3]],["bool",0]],[[["stagedledgerdifftuple",3],["stagedledgerdifftuple",3]],["bool",0]],[[["stagedledgerprediff",3],["stagedledgerprediff",3]],["bool",0]],[[["usercommandwithstatus",3],["usercommandwithstatus",3]],["bool",0]],[[["transactionstatus",4],["transactionstatus",4]],["bool",0]],[[["transactionstatusauxiliarydata",3],["transactionstatusauxiliarydata",3]],["bool",0]],[[["transactionstatusbalancedata",3],["transactionstatusbalancedata",3]],["bool",0]],[[["coinbase",4],["coinbase",4]],["bool",0]],[[["coinbasefeetransfer",3],["coinbasefeetransfer",3]],["bool",0]],[[["internalcommandbalancedata",4],["internalcommandbalancedata",4]],["bool",0]],[[["coinbasebalancedata",3],["coinbasebalancedata",3]],["bool",0]],[[["feetransferbalancedata",3],["feetransferbalancedata",3]],["bool",0]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["stagedledgerdiff",3],["",0]],["bool",0]],[[["stagedledgerprediff",3],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usercommand",4]],["usercommand",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usercommand",4],["usercommand",4]],["bool",0]],[[["usercommand",4],["formatter",3]],["result",6]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["usercommand",4]]]]]]]],["usercommand",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["usercommand",4]]]]]]]]]],["usercommand",4]],[[["usercommandjson",4]],["usercommand",4]],[[["usercommand",4]],["usercommand",4]],[[["versioned",3,[["versioned",3,[["usercommand",4]]]]]],["usercommand",4]],[[["versioned",3,[["usercommand",4]]]],["usercommand",4]],[[],["usize",0]],[[]],null,[[["usercommand",4],["usercommand",4]],["bool",0]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["usercommand",4],["",0]],["bool",0]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["signedcommandmemo",3]],["signedcommandmemo",3]],[[["",0],["",0]]],[[],["signedcommandmemo",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["signedcommandmemo",3],["signedcommandmemo",3]],["bool",0]],[[["signedcommandmemo",3],["formatter",3]],["result",6]],[[["signedcommandmemo",3],["formatter",3]],["result",4,[["error",3]]]],[[["signedcommandmemoerror",4],["formatter",3]],["result",6]],[[["signedcommandmemoerror",4],["formatter",3]],["result",6]],[[["vec",3,[["u8",0]]]],["signedcommandmemo",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]]]],["signedcommandmemo",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemojson",3]]]]]]]],["signedcommandmemo",3]],[[["signedcommandmemo",3]],["signedcommandmemo",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemojson",3]]]]]]]]]],["signedcommandmemo",3]],[[["versioned",3,[["signedcommandmemo",3]]]],["signedcommandmemo",3]],[[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]],["signedcommandmemo",3]],[[["versioned",3,[["signedcommandmemojson",3]]]],["signedcommandmemo",3]],[[["versioned",3,[["versioned",3,[["signedcommandmemojson",3]]]]]],["signedcommandmemo",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]]]]]],["signedcommandmemo",3]],[[["signedcommandmemojson",3]],["signedcommandmemo",3]],[[]],[[["str",0]],["result",4,[["signedcommandmemo",3]]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["signedcommandmemo",3],["signedcommandmemo",3]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["signedcommandmemo",3]],["string",3]],[[["str",0]],["result",4,[["signedcommandmemo",3]]]],[[],["result",4]],[[],["result",4]],[[["asref",8]],["result",4,[["signedcommandmemo",3],["signedcommandmemoerror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["paymentpayload",3]],["paymentpayload",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["paymentpayload",3],["paymentpayload",3]],["bool",0]],[[["paymentpayload",3],["formatter",3]],["result",6]],[[]],[[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]],["paymentpayload",3]],[[["paymentpayload",3]],["paymentpayload",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]]]],["paymentpayload",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]]]]]],["paymentpayload",3]],[[["versioned",3,[["paymentpayload",3]]]],["paymentpayload",3]],[[],["usize",0]],[[]],[[["paymentpayload",3],["paymentpayload",3]],["bool",0]],null,null,[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["signedcommand",3]],["signedcommand",3]],[[["signedcommandpayload",3]],["signedcommandpayload",3]],[[["signedcommandpayloadcommon",3]],["signedcommandpayloadcommon",3]],[[["signedcommandpayloadbody",4]],["signedcommandpayloadbody",4]],[[["stakedelegation",4]],["stakedelegation",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["networkid",4]],["option",4,[["string",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["signedcommand",3],["signedcommand",3]],["bool",0]],[[["signedcommandpayload",3],["signedcommandpayload",3]],["bool",0]],[[["signedcommandpayloadcommon",3],["signedcommandpayloadcommon",3]],["bool",0]],[[["signedcommandpayloadbody",4],["signedcommandpayloadbody",4]],["bool",0]],[[["stakedelegation",4],["stakedelegation",4]],["bool",0]],null,null,null,[[["signedcommand",3],["formatter",3]],["result",6]],[[["signedcommandpayload",3],["formatter",3]],["result",6]],[[["signedcommandpayloadcommon",3],["formatter",3]],["result",6]],[[["signedcommandpayloadbody",4],["formatter",3]],["result",6]],[[["stakedelegation",4],["formatter",3]],["result",6]],[[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]],["signedcommand",3]],[[["versioned",3,[["signedcommand",3]]]],["signedcommand",3]],[[["signedcommand",3]],["signedcommand",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]]]]]],["signedcommand",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]]]],["signedcommand",3]],[[["signedcommandpayload",3]],["signedcommandpayload",3]],[[["versioned",3,[["signedcommandpayload",3]]]],["signedcommandpayload",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]]]]]],["signedcommandpayload",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]]]],["signedcommandpayload",3]],[[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]],["signedcommandpayload",3]],[[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]],["signedcommandpayloadcommon",3]],[[["versioned",3,[["signedcommandpayloadcommon",3]]]],["signedcommandpayloadcommon",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]]]],["signedcommandpayloadcommon",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]]]]]],["signedcommandpayloadcommon",3]],[[]],[[["signedcommandpayloadcommon",3]],["signedcommandpayloadcommon",3]],[[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]],["signedcommandpayloadbody",4]],[[["signedcommandpayloadbody",4]],["signedcommandpayloadbody",4]],[[["versioned",3,[["signedcommandpayloadbody",4]]]],["signedcommandpayloadbody",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]]]],["signedcommandpayloadbody",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]]]]]],["signedcommandpayloadbody",4]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]]]]]],["stakedelegation",4]],[[["stakedelegation",4]],["stakedelegation",4]],[[["versioned",3,[["stakedelegation",4]]]],["stakedelegation",4]],[[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]],["stakedelegation",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]]]],["stakedelegation",4]],[[["signedcommandpayload",3],["keypair",3],["networkid",4]],["signedcommand",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[["signedcommandpayload",3],["keypair",3],["networkid",4]],["signedcommand",3]],null,[[["signedcommand",3],["signedcommand",3]],["bool",0]],[[["signedcommandpayload",3],["signedcommandpayload",3]],["bool",0]],[[["signedcommandpayloadcommon",3],["signedcommandpayloadcommon",3]],["bool",0]],[[["signedcommandpayloadbody",4],["signedcommandpayloadbody",4]],["bool",0]],[[["stakedelegation",4],["stakedelegation",4]],["bool",0]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["signedcommandpayload",3]],["roinput",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["signedcommand",3],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["signedtransfercommandbuilder",3]],["signedcommandpayload",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["signedtransfercommandbuilder",3],["compressedpubkey",3]],["signedtransfercommandbuilder",3]],[[["signedtransfercommandbuilder",3],["into",8,[["tokenid",3]]]],["signedtransfercommandbuilder",3]],[[]],[[],["usize",0]],[[]],[[["signedtransfercommandbuilder",3],["signedcommandmemo",3]],["signedtransfercommandbuilder",3]],[[["compressedpubkey",3],["compressedpubkey",3],["into",8,[["amount",3]]],["into",8,[["amount",3]]],["into",8,[["accountnonce",3]]]],["signedtransfercommandbuilder",3]],[[["signedtransfercommandbuilder",3],["into",8,[["tokenid",3]]]],["signedtransfercommandbuilder",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["signedtransfercommandbuilder",3],["into",8,[["globalslotnumber",3]]]],["signedtransfercommandbuilder",3]],[[]],null,[[["",0],["",0]],["bool",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["verificationkey",3]],["verificationkey",3]],[[["data",3]],["data",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[],["verificationkey",3]],[[],["data",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["verificationkey",3],["verificationkey",3]],["bool",0]],[[["data",3],["data",3]],["bool",0]],[[["verificationkey",3],["formatter",3]],["result",6]],[[["data",3],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["verificationkey",3],["verificationkey",3]],["bool",0]],[[["data",3],["data",3]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[8,"BinProtSerializationType"],[8,"JsonSerializationType"],[3,"Account"],[4,"AuthRequired"],[3,"Permissions"],[4,"Timing"],[3,"TimedData"],[13,"Timed"],[4,"TokenPermissions"],[13,"NotOwned"],[13,"TokenOwned"],[3,"BlockchainState"],[3,"ByteVec"],[3,"VrfOutputTruncated"],[3,"ConsensusState"],[3,"DeltaTransitionChainProof"],[3,"EpochLedger"],[3,"EpochData"],[3,"ExternalTransition"],[3,"GlobalSlot"],[3,"TokenId"],[3,"Length"],[3,"Delta"],[3,"ExtendedU32"],[3,"ExtendedU64"],[3,"Amount"],[3,"AccountNonce"],[3,"GlobalSlotNumber"],[3,"Hex64"],[3,"Char"],[3,"BlockTime"],[3,"BlockTimeSpan"],[3,"BigInt256"],[4,"ParseAmountError"],[13,"ErrorParsingInteger"],[13,"ErrorInvalidFormat"],[3,"ProtocolStateBody"],[3,"ProtocolState"],[3,"ProtocolConstants"],[8,"Header"],[3,"SpongeDigestBeforeEvaluations"],[3,"PrevEvals"],[3,"PrevXHat"],[3,"ProofOpeningsEvals"],[4,"ShiftedValue"],[3,"Plonk"],[3,"PairingBased"],[3,"ProofStateDeferredValues"],[3,"ProtocolStateProof"],[3,"ProofStatement"],[3,"ProofState"],[3,"ProofStatePairingBased"],[3,"Proof"],[3,"ProofOpenings"],[13,"ShiftedValue"],[3,"BulletproofChallenges"],[3,"ProofStateBulletproofChallenges"],[3,"BulletproofChallengeTuple17"],[3,"BulletproofChallengeTuple18"],[3,"ScalarChallengeVector2"],[4,"BulletproofPreChallenge"],[3,"BulletproofChallenge"],[13,"ScalarChallenge"],[3,"FieldElementVec"],[3,"FiniteECPoint"],[3,"FiniteECPointVec"],[3,"FiniteECPointPair"],[3,"FiniteECPointPairVec"],[3,"ECPointVec"],[4,"ECPoint"],[13,"Finite"],[3,"OpeningProof"],[3,"ProofEvaluations"],[3,"ProofMessageWithoutDegreeBoundList"],[3,"ProofMessages"],[3,"ProofMessageWithDegreeBound"],[3,"ProtocolVersion"],[3,"FeeExcessPair"],[4,"SgnType"],[4,"OneORTwo"],[3,"FeeExcess"],[3,"TransactionSnarkWork"],[3,"TransactionSnark"],[3,"Statement"],[3,"PendingCoinbaseStackState"],[3,"PendingCoinbase"],[3,"StateStack"],[3,"Signed"],[13,"One"],[13,"Two"],[4,"TransactionStatus"],[4,"InternalCommandBalanceData"],[4,"CoinBase"],[3,"StagedLedgerDiff"],[3,"StagedLedgerDiffTuple"],[3,"StagedLedgerPreDiff"],[3,"UserCommandWithStatus"],[3,"TransactionStatusAuxiliaryData"],[3,"TransactionStatusBalanceData"],[3,"CoinBaseFeeTransfer"],[3,"CoinBaseBalanceData"],[3,"FeeTransferBalanceData"],[13,"One"],[13,"CoinBase"],[13,"FeeTransfer"],[13,"Applied"],[4,"UserCommand"],[13,"SignedCommand"],[3,"SignedCommandMemo"],[4,"SignedCommandMemoError"],[3,"PaymentPayload"],[4,"SignedCommandPayloadBody"],[4,"StakeDelegation"],[3,"SignedCommandPayload"],[3,"SignedCommand"],[3,"SignedCommandPayloadCommon"],[13,"PaymentPayload"],[13,"StakeDelegation"],[13,"SetDelegate"],[3,"SignedTransferCommandBuilder"],[8,"Verifiable"],[3,"VerificationKey"],[3,"Data"]]},\
"mina_secrets":{"doc":"This crate provides utilities for managing account …","t":[0,13,13,13,4,13,13,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["secret_box","AeadError","Argon2Error","Base58DecodeError","Error","InvalidPasswordHashPrimitiveError","InvalidSecretBoxPrimitiveError","JsonSerdeError","Keypair","KeypairError","PasswordHashError","SecretBox","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_hex","from_parts_unsafe","get_address","get_keypair","get_private_key_bytes","init","init","init","into","into","into","ne","public","rand","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0"],"q":["mina_secrets","mina_secrets::secret_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_secrets::secret_box::Error","","","","",""],"d":["This module contains utilties for loading keypair from …","AeadError","Argon2Error","Fail to decode base58 string","Error type of handling wallet files generated from …","Invalid password hash primitive","Invalid secret box primitive","Fail to serialize / deserialize json","Keypair structure","KeypairError","PasswordHashError","Type that represents a wallet loaded from a wallet file …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a keypair from secret key hex","Create a keypair from scalar field <code>secret</code> element and …","Obtain the Mina address corresponding to the keypair’s …","Gets Keypair from the wallet with a password","Gets raw bytes(little-endian) of the private key from the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Public key","Generate a random keypair","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,0,1,1,0,1,2,3,1,2,3,2,3,2,3,1,2,3,1,2,3,1,2,3,3,1,1,2,3,3,1,1,1,2,3,3,3,3,2,2,1,2,3,1,2,3,3,3,3,1,2,3,1,3,1,2,2,3,1,2,2,2,3,1,2,3,1,2,3,4,5,6,7,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["secretbox",3]],["secretbox",3]],[[["keypair",3]],["keypair",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["keypair",3],["keypair",3]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["secretbox",3],["formatter",3]],["result",6]],[[["keypair",3],["formatter",3]],["result",4,[["error",3]]]],[[["keypair",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["error",4]],["error",4]],[[["error",3]],["error",4]],[[]],[[]],[[["str",0]],["result",4,[["keypair",3],["keypairerror",4]]]],[[["groupaffine",3,[["pallasparameters",3]]]],["keypair",3]],[[["keypair",3]],["string",3]],[[["secretbox",3],["asref",8]],["result",4,[["keypair",3],["error",4]]]],[[["secretbox",3],["asref",8]],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["keypair",3],["keypair",3]],["bool",0]],null,[[],["keypair",3]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[["str",0]],["result",4,[["secretbox",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["secretbox",3]],["result",4,[["string",3],["error",4]]]],[[["secretbox",3]],["result",4,[["value",4],["error",4]]]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null],"p":[[4,"Error"],[3,"SecretBox"],[3,"Keypair"],[13,"JsonSerdeError"],[13,"Base58DecodeError"],[13,"Argon2Error"],[13,"PasswordHashError"],[13,"AeadError"],[13,"KeypairError"]]},\
"mina_serialization_types":{"doc":"This crate provides a number of types that capture shape …","tn":["BinProtSerializationType","JsonSerializationType","T","T","account","blockchain_state","bulletproof_challenges","common","consensus_state","delta_transition_chain_proof","epoch_data","errors","external_transition","field_and_curve_elements","global_slot","impl_mina_enum_json_serde","impl_mina_enum_json_serde_with_option","impl_strconv_via_json","json","macros","opening_proof","proof_evaluations","proof_messages","protocol_constants","protocol_state","protocol_state_body","protocol_state_proof","protocol_version","signatures","snark_work","staged_ledger_diff","try_from_binprot","try_from_binprot","try_from_json","try_from_json","try_into_binprot","try_into_binprot","try_into_json","try_into_json","v1","version_bytes","Account","AccountV1","AuthRequired","AuthRequiredV1","Both","Either","Impossible","None","NotOwned","Permissions","PermissionsV1","Proof","Signature","Timed","TimedData","TimedDataV1","Timing","TimingV1","TokenOwned","TokenPermissions","TokenPermissionsV1","Untimed","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cliff_amount","cliff_time","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","delegate","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","edit_state","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","initial_minimum_balance","into","into","into","into","into","into","ne","ne","ne","ne","ne","nonce","permissions","public_key","receipt_chain_hash","receive","send","serialize","serialize","serialize","serialize","serialize","serialize","set_delegate","set_permissions","set_verification_key","snapp","stake","timing","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_id","token_permissions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vesting_increment","vesting_period","voting_for","vzip","vzip","vzip","vzip","vzip","vzip","0","account_disabled","disable_new_accounts","BlockchainState","BlockchainStateJson","BlockchainStateV1","NonSnarkStagedLedgerHash","NonSnarkStagedLedgerHashJson","NonSnarkStagedLedgerHashV1","StagedLedgerHash","StagedLedgerHashJson","StagedLedgerHashV1","aux_hash","aux_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_ledger_hash","genesis_ledger_hash","init","init","init","init","init","init","into","into","into","into","into","into","ledger_hash","ledger_hash","ne","ne","ne","ne","ne","ne","non_snark","non_snark","pending_coinbase_aux","pending_coinbase_aux","pending_coinbase_hash","pending_coinbase_hash","serialize","serialize","serialize","serialize","serialize","serialize","snarked_ledger_hash","snarked_ledger_hash","snarked_next_available_token","snarked_next_available_token","staged_ledger_hash","staged_ledger_hash","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","10","10","10","10","11","11","11","11","12","12","12","12","13","13","13","13","14","14","14","14","15","15","15","15","16","16","16","16","17","17","17","17","18","18","2","2","2","2","2","2","2","2","3","3","3","3","4","4","4","4","5","5","5","5","6","6","6","6","7","7","7","7","8","8","8","8","9","9","9","9","BulletproofChallenge","BulletproofChallengeJson","BulletproofChallengeTuple17","BulletproofChallengeTuple17Json","BulletproofChallengeTuple17V1","BulletproofChallengeTuple18","BulletproofChallengeTuple18Json","BulletproofChallengeTuple18V1","BulletproofChallengeV1","BulletproofChallenges","BulletproofChallengesJson","BulletproofChallengesV1","BulletproofPreChallenge","BulletproofPreChallengeJson","BulletproofPreChallengeV1","ProofStateBulletproofChallenges","ProofStateBulletproofChallengesJson","ProofStateBulletproofChallengesV1","ScalarChallenge","ScalarChallenge","ScalarChallengeVector2","ScalarChallengeVector2Json","ScalarChallengeVector2V1","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","prechallenge","prechallenge","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","AccountNonceV1","AmountV1","AuxHashJson","Base58EncodableType","Base58EncodableVersionedType","BigInt256","BlockTimeV1","ByteVec","ByteVecJson","ByteVecV1","ChainHashV1Json","CharJson","CharV1","CoinBaseHashV1Json","CoinBaseStackDataV1Json","CoinBaseStackHashV1Json","DecimalJson","DeltaV1","EpochSeedHashV1Json","ExtendedU32","ExtendedU64","ExtendedU64_2","ExtendedU64_3","GlobalSlotNumberV1","Hash2V1","HashV1","HashV1Json","Hex64V1","I64","LedgerHashV1Json","LengthV1","PendingCoinbaseAuxHashJson","StateHashV1Json","TokenIdV1","U32Json","U64Json","VrfOutputHashV1Json","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base58","from_base58","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_base58_builder","to_base58_builder","to_base58_string","to_base58_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","ConsensusState","ConsensusStateJson","ConsensusStateV1","VrfOutputTruncated","VrfOutputTruncatedJson","VrfOutputTruncatedV1","block_creator","block_creator","block_stake_winner","block_stake_winner","blockchain_length","blockchain_length","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coinbase_receiver","coinbase_receiver","curr_global_slot","curr_global_slot","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","epoch_count","epoch_count","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","global_slot_since_genesis","global_slot_since_genesis","has_ancestor_in_same_checkpoint_window","has_ancestor_in_same_checkpoint_window","init","init","init","init","into","into","into","into","last_vrf_output","last_vrf_output","min_window_density","min_window_density","ne","ne","ne","ne","next_epoch_data","next_epoch_data","serialize","serialize","serialize","serialize","staking_epoch_data","staking_epoch_data","sub_window_densities","sub_window_densities","supercharge_coinbase","supercharge_coinbase","to_owned","to_owned","to_owned","to_owned","total_currency","total_currency","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","1","1","DeltaTransitionChainProof","DeltaTransitionChainProofJson","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","ne","ne","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EpochData","EpochDataJson","EpochDataV1","EpochLedger","EpochLedgerJson","EpochLedgerV1","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","epoch_length","epoch_length","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","init","init","init","init","into","into","into","into","ledger","ledger","lock_checkpoint","lock_checkpoint","ne","ne","ne","ne","seed","seed","serialize","serialize","serialize","serialize","start_checkpoint","start_checkpoint","to_owned","to_owned","to_owned","to_owned","total_currency","total_currency","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Base58DecodeError","BinProtError","Custom","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","0","0","0","ExternalTransition","ExternalTransitionJson","ExternalTransitionV1","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","current_protocol_version","current_protocol_version","delta_transition_chain_proof","delta_transition_chain_proof","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","ne","ne","proposed_protocol_version_opt","proposed_protocol_version_opt","protocol_state","protocol_state","protocol_state_proof","protocol_state_proof","serialize","serialize","staged_ledger_diff","staged_ledger_diff","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validation_callback","validation_callback","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","ECPoint","ECPointJson","ECPointV1","ECPointVec","ECPointVecJson","ECPointVecV1","FieldElement","FieldElementJson","FieldElementVec","FieldElementVecJson","FieldElementVecV1","Finite","Finite","FiniteECPoint","FiniteECPointJson","FiniteECPointPair","FiniteECPointPairJson","FiniteECPointPairVec","FiniteECPointPairVecJson","FiniteECPointPairVecV1","FiniteECPointVec","FiniteECPointVecJson","FiniteECPointVecV1","Infinite","Infinite","InnerCurveScalar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_hex_str","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","GlobalSlot","GlobalSlotJson","GlobalSlotV1","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","ne","ne","serialize","serialize","slot_number","slot_number","slots_per_epoch","slots_per_epoch","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuxHashJson","BlockchainStateJson","BulletproofChallengeJson","BulletproofChallengeTuple17Json","BulletproofChallengeTuple18Json","BulletproofChallengesJson","BulletproofPreChallengeJson","ByteVecJson","ChainHashV1Json","CharJson","CoinBaseBalanceDataJson","CoinBaseHashV1Json","CoinBaseJson","ConsensusStateJson","DeltaTransitionChainProofJson","ECPointJson","ECPointVecJson","EpochSeedHashV1Json","ExternalTransitionJson","FeeExcessJson","FeeExcessPairJson","FeeTransferBalanceDataJson","FieldElementJson","FieldElementVecJson","FiniteECPointJson","FiniteECPointPairJson","FiniteECPointPairVecJson","FiniteECPointVecJson","HashV1Json","InternalCommandBalanceDataJson","LedgerHashV1Json","OneORTwoJson","OpeningProofJson","PairingBasedJson","PaymentPayloadJson","PendingCoinbaseAuxHashJson","PendingCoinbaseJson","PendingCoinbaseStackStateJson","PlonkJson","PrevEvalsJson","PrevXHatJson","ProofEvaluationsJson","ProofJson","ProofMessageWithDegreeBoundJson","ProofMessageWithoutDegreeBoundListJson","ProofMessagesJson","ProofOpeningsEvalsJson","ProofOpeningsJson","ProofStateBulletproofChallengesJson","ProofStateDeferredValuesJson","ProofStateJson","ProofStatePairingBasedJson","ProofStatementJson","ProtocolConstantsJson","ProtocolStateBodyJson","ProtocolStateJson","ProtocolStateProofBase64Json","ProtocolStateProofJson","ProtocolVersionJson","PublicKeyJson","ScalarChallengeVector2Json","SgnTypeJson","ShiftedValueJson","SignatureJson","SignedCommandJson","SignedCommandMemoJson","SignedCommandPayloadBodyJson","SignedCommandPayloadCommonJson","SignedCommandPayloadJson","SignedJson","SpongeDigestBeforeEvaluations","StagedLedgerDiffJson","StakeDelegationJson","StateHashV1Json","StateStackJson","StatementJson","TransactionSnarkJson","TransactionSnarkWorkJson","TransactionStatusAuxiliaryDataJson","TransactionStatusBalanceDataJson","TransactionStatusJson","UserCommandJson","UserCommandWithStatusJson","VrfOutputHashV1Json","VrfOutputTruncatedJson","OpeningProof","OpeningProofJson","OpeningProofV1","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delta","delta","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","lr","lr","ne","ne","serialize","serialize","sg","sg","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","z_1","z_1","z_2","z_2","ProofEvaluations","ProofEvaluationsJson","ProofEvaluationsV1","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","f","f","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","l","l","ne","ne","o","o","r","r","serialize","serialize","sigma1","sigma1","sigma2","sigma2","t","t","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","z","z","0","0","ProofMessageWithDegreeBound","ProofMessageWithDegreeBoundJson","ProofMessageWithDegreeBoundV1","ProofMessageWithoutDegreeBoundList","ProofMessageWithoutDegreeBoundListJson","ProofMessageWithoutDegreeBoundListV1","ProofMessages","ProofMessagesJson","ProofMessagesV1","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","l_comm","l_comm","ne","ne","ne","ne","ne","ne","o_comm","o_comm","r_comm","r_comm","serialize","serialize","serialize","serialize","serialize","serialize","shifted","shifted","t_comm","t_comm","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unshifted","unshifted","vzip","vzip","vzip","vzip","vzip","vzip","z_comm","z_comm","ProtocolConstants","ProtocolConstantsJson","ProtocolConstantsV1","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delta","delta","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","genesis_state_timestamp","genesis_state_timestamp","init","init","into","into","k","k","ne","ne","serialize","serialize","slots_per_epoch","slots_per_epoch","slots_per_sub_window","slots_per_sub_window","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ProtocolState","ProtocolStateJson","ProtocolStateV1","body","body","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","ne","ne","previous_state_hash","previous_state_hash","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ProtocolStateBody","ProtocolStateBodyJson","ProtocolStateBodyV1","blockchain_state","blockchain_state","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_state","consensus_state","constants","constants","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","genesis_state_hash","genesis_state_hash","init","init","into","into","ne","ne","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","2","2","3","3","4","4","PairingBased","PairingBasedJson","PairingBasedV1","Plonk","PlonkJson","PlonkV1","PrevEvals","PrevEvalsJson","PrevEvalsV1","PrevXHat","PrevXHatJson","PrevXHatV1","Proof","ProofJson","ProofOpenings","ProofOpeningsEvals","ProofOpeningsEvalsJson","ProofOpeningsJson","ProofOpeningsV1","ProofState","ProofStateDeferredValues","ProofStateDeferredValuesJson","ProofStateDeferredValuesV1","ProofStateJson","ProofStatePairingBased","ProofStatePairingBasedJson","ProofStatePairingBasedV1","ProofStateV1","ProofStatement","ProofStatementJson","ProofStatementV1","ProofV1","ProtocolStateProof","ProtocolStateProofBase64Json","ProtocolStateProofJson","ProtocolStateProofV1","ShiftedValue","ShiftedValue","ShiftedValue","ShiftedValueJson","ShiftedValueV1","SpongeDigestBeforeEvaluations","SpongeDigestBeforeEvaluationsJson","SpongeDigestBeforeEvaluationsV1","alpha","alpha","app_state","app_state","b","b","beta","beta","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulletproof_challenges","bulletproof_challenges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combined_inner_product","combined_inner_product","deferred_values","deferred_values","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","evals","evals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gamma","gamma","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","me_only","me_only","messages","messages","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","old_bulletproof_challenges","old_bulletproof_challenges","old_bulletproof_challenges","old_bulletproof_challenges","openings","openings","pass_through","pass_through","plonk","plonk","prev_evals","prev_evals","prev_x_hat","prev_x_hat","proof","proof","proof","proof","proof_state","proof_state","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sg","sg","sg","sg","sponge_digest_before_evaluations","sponge_digest_before_evaluations","statement","statement","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","which_branch","which_branch","xi","xi","zeta","zeta","0","0","ProtocolVersion","ProtocolVersionJson","ProtocolVersionV1","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","major","minor","ne","patch","serialize","to_owned","try_from","try_into","type_id","vzip","0","0","0","0","CompressedCurvePoint","PublicKey2V1","PublicKeyJson","PublicKeyV1","SignatureJson","SignatureV1","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","init","init","init","init","init","init","into","into","into","into","into","into","is_odd","is_odd","ne","ne","ne","ne","ne","ne","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","x","x","0","0","1","1","FeeExcess","FeeExcessJson","FeeExcessPair","FeeExcessPairJson","FeeExcessPairV1","LedgerProofV1","Neg","Neg","Neg","One","One","OneORTwo","OneORTwoJson","OneORTwoV1","PendingCoinbase","PendingCoinbaseJson","PendingCoinbaseStackState","PendingCoinbaseStackStateJson","PendingCoinbaseStackStateV1","PendingCoinbaseV1","Pos","Pos","Pos","SgnType","SgnTypeJson","SgnTypeJsonProxy","SgnTypeV1","Signed","SignedJson","SignedV1","StateStack","StateStackJson","StateStackV1","Statement","StatementJson","StatementV1","TransactionSnark","TransactionSnarkJson","TransactionSnarkV1","TransactionSnarkWork","TransactionSnarkWorkJson","TransactionSnarkWorkV1","Two","Two","amount","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","curr","curr","data_stack","data_stack","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fee","fee_excess","fee_excess","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","magnitude","magnitude","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","next_available_token_after","next_available_token_after","next_available_token_before","next_available_token_before","pending_coinbase_stack_state","pending_coinbase_stack_state","proofs","proofs","prover","prover","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sgn","sgn","sok_digest","sok_digest","source","source","source","source","state_stack","state_stack","statement","statement","supply_increase","supply_increase","target","target","target","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","token","transaction_snark_proof","transaction_snark_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","0","0","1","0","0","0","0","1","1","Applied","Applied","CoinBase","CoinBase","CoinBase","CoinBaseBalanceData","CoinBaseBalanceDataJson","CoinBaseBalanceDataV1","CoinBaseFeeTransfer","CoinBaseFeeTransferJson","CoinBaseFeeTransferV1","CoinBaseJson","CoinBaseV1","FeeTransfer","FeeTransfer","FeeTransferBalanceData","FeeTransferBalanceDataJson","FeeTransferBalanceDataV1","InternalCommandBalanceData","InternalCommandBalanceDataJson","InternalCommandBalanceDataV1","One","One","PaymentPayload","PaymentPayload","PaymentPayload","PaymentPayloadJson","PaymentPayloadV1","SetDelegate","SetDelegate","SignedCommand","SignedCommand","SignedCommand","SignedCommandFeeTokenV1","SignedCommandJson","SignedCommandMemo","SignedCommandMemoJson","SignedCommandMemoV1","SignedCommandPayload","SignedCommandPayloadBody","SignedCommandPayloadBodyJson","SignedCommandPayloadBodyV1","SignedCommandPayloadCommon","SignedCommandPayloadCommonJson","SignedCommandPayloadCommonV1","SignedCommandPayloadJson","SignedCommandPayloadV1","SignedCommandV1","SnappCommand","StagedLedgerDiff","StagedLedgerDiffJson","StagedLedgerDiffTuple","StagedLedgerDiffTupleJson","StagedLedgerDiffTupleV1","StagedLedgerDiffV1","StagedLedgerPreDiff","StagedLedgerPreDiffJson","StagedLedgerPreDiffV1","StakeDelegation","StakeDelegation","StakeDelegation","StakeDelegationJson","StakeDelegationV1","TransactionStatus","TransactionStatusAuxiliaryData","TransactionStatusAuxiliaryDataJson","TransactionStatusAuxiliaryDataV1","TransactionStatusBalanceData","TransactionStatusBalanceDataJson","TransactionStatusBalanceDataV1","TransactionStatusJson","TransactionStatusV1","Two","Two","UserCommand","UserCommandJson","UserCommandV1","UserCommandWithStatus","UserCommandWithStatusJson","UserCommandWithStatusV1","Zero","Zero","amount","amount","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coinbase","coinbase","coinbase_receiver_balance","coinbase_receiver_balance","commands","commands","common","common","completed_works","completed_works","created_token","created_token","data","data","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fee","fee","fee","fee_payer_account_creation_fee_paid","fee_payer_account_creation_fee_paid","fee_payer_balance","fee_payer_balance","fee_payer_pk","fee_payer_pk","fee_token","fee_token","fee_transfer_receiver_balance","fee_transfer_receiver_balance","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal_command_balances","internal_command_balances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","memo","memo","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","nonce","nonce","payload","payload","receiver1_balance","receiver1_balance","receiver2_balance","receiver2_balance","receiver_account_creation_fee_paid","receiver_account_creation_fee_paid","receiver_balance","receiver_balance","receiver_pk","receiver_pk","receiver_pk","receiver_pk","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signer","signer","source_balance","source_balance","source_pk","source_pk","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_id","token_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_until","valid_until","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","delegator","new_delegate","delegator","new_delegate","0","1","0","1","0","0","AccountNonceV1","AccountV1","AmountV1","AuthRequiredV1","BigInt256","BlockTimeV1","BlockchainStateV1","BulletproofChallengeTuple17V1","BulletproofChallengeTuple18V1","BulletproofChallengeV1","BulletproofChallengesV1","BulletproofPreChallengeV1","ByteVecV1","CharV1","CoinBaseBalanceDataV1","CoinBaseFeeTransferV1","CoinBaseV1","ConsensusStateV1","DeltaTransitionChainProof","DeltaV1","ECPointV1","ECPointVecV1","EpochDataV1","EpochLedgerV1","ExtendedU32","ExtendedU64","ExtendedU64_2","ExtendedU64_3","ExternalTransitionV1","FeeExcessPairV1","FeeTransferBalanceDataV1","FieldElement","FieldElementVecV1","FiniteECPoint","FiniteECPointPairVecV1","FiniteECPointVecV1","GlobalSlotNumberV1","GlobalSlotV1","Hash2V1","HashV1","Hex64V1","InnerCurveScalar","InternalCommandBalanceDataV1","LedgerProofV1","LengthV1","NonSnarkStagedLedgerHashV1","OneORTwoV1","OpeningProofV1","PairingBasedV1","PaymentPayloadV1","PendingCoinbaseStackStateV1","PendingCoinbaseV1","PermissionsV1","PlonkV1","PrevEvalsV1","PrevXHatV1","ProofEvaluationsV1","ProofMessageWithDegreeBoundV1","ProofMessageWithoutDegreeBoundListV1","ProofMessagesV1","ProofOpeningsV1","ProofStateBulletproofChallengesV1","ProofStateDeferredValuesV1","ProofStatePairingBasedV1","ProofStateV1","ProofStatementV1","ProofV1","ProtocolConstantsV1","ProtocolStateBodyV1","ProtocolStateProofV1","ProtocolStateV1","ProtocolVersionV1","PublicKey2V1","PublicKeyV1","ScalarChallengeVector2V1","SgnTypeV1","ShiftedValueV1","SignatureV1","SignedCommandFeeTokenV1","SignedCommandMemoV1","SignedCommandPayloadBodyV1","SignedCommandPayloadCommonV1","SignedCommandPayloadV1","SignedCommandV1","SignedV1","SpongeDigestBeforeEvaluationsV1","StagedLedgerDiffTupleV1","StagedLedgerDiffV1","StagedLedgerHashV1","StagedLedgerPreDiffV1","StakeDelegationV1","StateStackV1","StatementV1","TimingV1","TokenIdV1","TokenPermissionsV1","TransactionSnarkV1","TransactionSnarkWorkV1","TransactionStatusAuxiliaryDataV1","TransactionStatusBalanceDataV1","TransactionStatusV1","UserCommandV1","UserCommandWithStatusV1","VrfOutputTruncatedV1","COINBASE_HASH","COINBASE_STACK_DATA","COINBASE_STACK_HASH","EPOCH_SEED","LEDGER_HASH","SIGNATURE","STAGED_LEDGER_HASH_AUX_HASH","STAGED_LEDGER_HASH_PENDING_COINBASE_AUX","STATE_HASH","USER_COMMAND_MEMO","VRF_TRUNCATED_OUTPUT"],"q":["mina_serialization_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::account::Timing","mina_serialization_types::account::TokenPermissions","","mina_serialization_types::blockchain_statemina_serialization_types::bulletproof_challengesmina_serialization_types::bulletproof_challenges::BulletproofPreChallenge","mina_serialization_types::bulletproof_challenges::BulletproofPreChallengeJson","mina_serialization_types::commonmina_serialization_types::consensus_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::delta_transition_chain_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::epoch_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::errors","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::errors::Error","","","mina_serialization_types::external_transition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::field_and_curve_elementsmina_serialization_types::field_and_curve_elements::ECPoint","mina_serialization_types::field_and_curve_elements::ECPointJson","mina_serialization_types::global_slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::json","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::opening_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::proof_evaluations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::proof_messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::protocol_constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::protocol_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::protocol_state_body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::protocol_state_proofmina_serialization_types::protocol_state_proof::ShiftedValue","mina_serialization_types::protocol_state_proof::ShiftedValueJson","mina_serialization_types::protocol_version","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::signatures","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::snark_workmina_serialization_types::snark_work::OneORTwo","","","mina_serialization_types::snark_work::OneORTwoJson","","","mina_serialization_types::staged_ledger_diffmina_serialization_types::staged_ledger_diff::CoinBase","mina_serialization_types::staged_ledger_diff::CoinBaseJson","mina_serialization_types::staged_ledger_diff::InternalCommandBalanceData","","mina_serialization_types::staged_ledger_diff::InternalCommandBalanceDataJson","","mina_serialization_types::staged_ledger_diff::SignedCommandPayloadBody","","mina_serialization_types::staged_ledger_diff::SignedCommandPayloadBodyJson","","mina_serialization_types::staged_ledger_diff::StakeDelegation","","mina_serialization_types::staged_ledger_diff::StakeDelegationJson","","mina_serialization_types::staged_ledger_diff::TransactionStatus","","mina_serialization_types::staged_ledger_diff::TransactionStatusJson","","mina_serialization_types::staged_ledger_diff::UserCommand","mina_serialization_types::staged_ledger_diff::UserCommandJson","mina_serialization_types::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mina_serialization_types::version_bytes","","","","","","","","","",""],"d":["This trait annotates a given type its corresponding …","This trait annotates a given type its corresponding json …","The corresponding serialization type for bin-prot format …","The corresponding serialization type for json format Self …","A Mina account record and supporting types This isn’t …","Types related to the Blockchain State","Types that capture serialized bullet proof challenges and …","Some basic versioned types used throughout","Types and funcions related to the Mina consensus state","Delta transition chain proof structures and functions","Types and functions related to the EpochData structure","Types that represent errors in mina serialization and …","Mina ExternalTransition","Versioned types that represent finite field and elliptic …","Structure of a global slot","Implement list tagged enum json serde format for the given …","Implement list tagged enum json serde format for the given …","Implements std::str::FromStr and std::fmt::Display by …","json serialization types for the Mina protocol","Heper macros for type conversions","The opening proof used by the protocol state proof","Proof evaluations used by the protocol state proof","Proof messages used by the protocol state proof","Types related to the Mina protocol state","Types related to the Mina protocol state","Types related to the Mina protocol state","Module containing the components of a protocol state proof","Protocol version structure","Signatures and public key types","Types related to the Transaction Snark Work","In this context a diff refers to a difference between two …","Construct from binprot bytes reader","Construct from binprot bytes reader","Construct from json string","Construct from json string","Convert into binprot byte vec","Convert into binprot byte vec","Convert into json string","Convert into json string","Version 1 serialization types for the Mina protocol","All human readable values (e.g base58 encoded hashes and …","An account as is serialized into the Mina ledger database …","An account as is serialized into the Mina ledger database …","The level of auth required to perform a particular action …","The level of auth required to perform a particular action …","Both proof and signature must be provided","Either a proof or a signature","This action can never occur","None required","Account does not own a token","Permissions associated with the account","Permissions associated with the account (v1)","Proof must be provided","Signature must be provided","Account does have timing limitations as specified","Payload for the timing variant Timed Needs its own version …","Payload for the timing variant Timed Needs its own version …","Timing information for an account with regard to when its …","Timing information for an account with regard to when its …","Account owns a token","Need to learn exactly what this is..","","Account does not have any timing limitations","Balance of token held by account","","","","","","","","","","","","","Amount extra available when fully fested","Time when all balance is avaiable","","","","","","","","","","","","","Delegate for staking purposes","","","","","","","","","","","","","","","","","","","","","","","","","Permission required to edit state","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Initial balance for the account","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Nonce (incremented with each tx to prevent replay)","Level of permission required to do different account …","Account public key","?","Permission required to receive balance","Permission required to send a balance","","","","","","","Permission required to set the delegate","Permission required to cange permissions","Permission require to set verification key","TODO: This should contain a Snapp account data once we …","If the account can stake","Any timing limitations places on this accounts balance …","","","","","","","Account token ID","Permission associated with the given token","","","","","","","","","","","","","","","","","","","Ammount released in each vesting period","Period in whcih allocation is released in chunks","The state hash this account is voting for","","","","","","","","?","?","Mina blockchain state struct","Mina blockchain state struct (json)","Mina blockchain state struct (v1)","Non-snarked ledger hash","Non-snarked ledger hash (json)","Non-snarked ledger hash (v1)","Staged ledger hash structure","Staged ledger hash structure (json)","Staged ledger hash structure (v1)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Hash of the genesis state","Hash of the genesis state","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Hash of the most recently proven state of the blockchain","Hash of the most recently proven state of the blockchain","Check whether the change of the next token ID is …","Check whether the change of the next token ID is …","Hash of the proposed next state of the blockchain","Hash of the proposed next state of the blockchain","Timestamps for blocks","Timestamps for blockseturns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","u64 representing an account nonce (v1) // This should also …","u64 representing an amount of currency (v1)","base58 string representation of a aux hash","A wrapper of versioned type that is base58 encodable","A wrapper of versioned type that is base58 encodable with …","32 bytes representing a BigInt256","u64 representing a block time (v1)","Wrapper of Vec","Wrapper of Vec (json)","Vector of bytes with a version number. Also encodes its …","base58 string representation of a chain hash","char (json)","char (v1)","base58 string representation of a coinbase hash","base58 string representation of a coinbase stack data hash","base58 string representation of a coinbase stack hash","u64 wrapper (json) Note that integers are represented as …","u32 representing a delta (i.e. difference) (v1)","base58 string representation of a coinbase hash","u32 wrapped in 1 version byte","u64 wrapped in 1 version byte","u64 wrapped in 2 version bytes","u64 wrapped in 3 version bytes","u32 representing a slot number (v1)","32 bytes representing a hash of some kind (v1) with extra …","32 bytes representing a hash of some kind (v1)","base58 string representation of a hash","Versioned 64 bytes","i64 wrapper (json)","base58 string representation of a ledger hash","u32 representing a length (v1)","base58 string representation of a pending coinbase aux hash","base58 string representation of a state hash","u64 representing a token ID (v1)","u32 wrapper (json) Note that integers are represented as …","u64 wrapper (json) Note that integers are represented as …","base58 string representation of a vrf output hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Decode input base58 encoded bytes into Base58EncodableType","Decode input base58 encoded bytes into …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Encode inner data with version check byte into …","Encode inner data with version check byte into …","Encode inner data with version check byte into String","Encode inner data with version check byte into String","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This structure encapsulates the succinct state of the …","json protocol version of the consensus state","V1 protocol version of the consensus state","Wrapper struct for the output for a VRF","Wrapper struct for the output for a VRF (json)","Wrapper struct for the output for a VRF, with version","Compressed public key of the block producer","Compressed public key of the block producer","Compressed public key of winning account","Compressed public key of winning account","Height of block","Height of block","","","","","","","","","","","","","","","","","Compresed public key of account receiving the block reward","Compresed public key of account receiving the block reward","Current global slot number relative to the current hard …","Current global slot number relative to the current hard …","","","","","","","","","","","","","","","","","Epoch number","Epoch number","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Absolute global slot number since genesis","Absolute global slot number since genesis","If the block has an ancestor in the same checkpoint window","If the block has an ancestor in the same checkpoint window","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Additional VRS output from leader (for seeding Random …","Additional VRS output from leader (for seeding Random …","Minimum window density oberved on the chain","Minimum window density oberved on the chain","","","","","Epoch data for current epoch","Epoch data for current epoch","","","","","Epoch data for previous epoch","Epoch data for previous epoch","Current sliding window of densities","Current sliding window of densities","true if block_stake_winner has no locked tokens, false …","true if block_stake_winner has no locked tokens, false …","","","","","Total supply of currency","Total supply of currency","","","","","","","","","","","","","","","","","","","","","Proof that the block was produced within the allotted slot …","Proof that the block was produced within the allotted slot …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Epoch data","Epoch data (json)","Epoch data (v1)","Epoch Ledger","Epoch Ledger (json)","Epoch Ledger (v1)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Length of an epoch","Length of an epoch","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","A unique identifier of the EpochLedger","A unique identifier of the EpochLedger","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Epoch Ledger, contains ledger related data for the epoch","Epoch Ledger, contains ledger related data for the epoch","State hash of last known block in the first 2/3 of epoch …","State hash of last known block in the first 2/3 of epoch …","","","","","Initialize the random number generator","Initialize the random number generator","","","","","State hash of first block of epoch","State hash of first block of epoch","","","","","The total currency in circulation after the block was …","The total currency in circulation after the block was …","","","","","","","","","","","","","","","","","Error decoding base58 string","Error serde-ing bin-prot bytes","Custom error","Type that represents errors in mina serialization and …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","This structure represents a mina block received from an …","This structure represents a mina block received from an …","Versioned structure to use externally","","","","","","","","","Current protocol version","Current protocol version","Proof that the block was produced within the allotted slot …","Proof that the block was produced within the allotted slot …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Proposed protocol version","Proposed protocol version","The blockchain state, including consensus and the ledger","The blockchain state, including consensus and the ledger","Proof that the protocol state and entire history of the …","Proof that the protocol state and entire history of the …","","","Diff of the proposed next state of the blockchain","Diff of the proposed next state of the blockchain","","","","","","","","","Callback used for validating external transition received …","Callback used for validating external transition received …","","","","","","","","","","","","","","","","","","","","Elliptic curve point that can either be the coordinates of …","Elliptic curve point that can either be the coordinates of …","Elliptic curve point that can either be the coordinates of …","Vector of EC points","Vector of EC points (json)","Vector of EC points (with version number defined in the …","Represents an element in a finite field that can be …","Field element (json)","Vector of finite field elements","Vector of finite field elements (json)","Vector of finite field elements (v1)","Point on the curve","Point on the curve","An elliptic curve point defined over a base field with …","A finite EC point (json)","Pair if finite EC Points","Pair if finite EC Points (json)","Vector of 2-tuples of finite EC points","Vector of 2-tuples of finite EC points (json)","Vector of 2-tuples of finite EC points (with version …","Vector of finite EC points","Vector of finite EC points (json)","Vector of finite EC points (with version number)","The point at infinity","The point at infinity","Wrapper type for field element denoting it is on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>ECPoint::Infinite</code>","Return <code>ECPointJson::Infinite</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get hex string repr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from hex str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A global slot","A global slot (json)","A global slot (v1)","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The global slot number of a chain or block","The global slot number of a chain or block","Number of slots per epoch","Number of slots per epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constants that define the consensus parameters","Constants that define the consensus parameters (json)","Constants that define the consensus parameters (v1)","","","","","","","","","Maximum permissable delay of packets (in slots after the …","Maximum permissable delay of packets (in slots after the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Timestamp of genesis block in unixtime","Timestamp of genesis block in unixtime","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Point of finality (number of confirmations)","Point of finality (number of confirmations)","","","","","Number of slots per epoch","Number of slots per epoch","No of slots in a sub-window = 7","No of slots in a sub-window = 7","","","","","","","","","","","This structure can be thought of like the block header. It …","This structure can be thought of like the block header. It …","This structure can be thought of like the block header. It …","The body of the protocol state","The body of the protocol state","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Commitment to previous block (hash of previous protocol …","Commitment to previous block (hash of previous protocol …","","","","","","","","","","","","","Body of the protocol state","Body of the protocol state (json)","Body of the protocol state (v1)","Ledger related state","Ledger related state","","","","","","","","","Consensus related state","Consensus related state","Consensus constants","Consensus constants","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Genesis protocol state hash (used for hardforks)","Genesis protocol state hash (used for hardforks)","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNARK proof of the protocol state at some point in time","SNARK proof of the protocol state at some point in time …","SNARK proof of the protocol state at some point in time …","SNARK proof of the protocol state at some point in time …eturns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeefines a version of the Mina protocol in semver format","ProtocolVersion that is convertible from / to the mina …","Defines a version of the Mina protocol in semver format …","","","","","Return <code>ProtocolVersion { major: 2, minor: 0, patch: 0 }</code>","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Major version number","Minor version number","","Patch version number","","","","","","","","","","","An EC point stored in compressed form containing only the …","Public key (v1) with an extra version byte","An EC point stored in compressed form containing only the …","Public key (v1)","Signature (json)","Signature (v1)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the point is odd (or even)","If the point is odd (or even)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The x coordinate of the EC point","The x coordinate of the EC pointeturns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeop level wrapper type for a StagedLedgerDiff","Top level wrapper type for a StagedLedgerDiff (json)","","","","Top level wrapper type for a StagedLedgerDiff (veturn <code>CoinBase::Zero</code>","Return <code>CoinBaseJson::Zero</codeeturns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codebase58 version check byte for coinbase hash","base58 version check byte for coinbase stack data","base58 version check byte for coinbase stack hash","base58 version check byte for epoch seed hash","base58 version check byte for ledger hash","base58 version check byte for signature","base58 version check byte for aux hash","base58 version check byte for pending coinbase aux hash","base58 version check byte for state hash","base58 version check byte for user command memo","base58 version check byte for vrf output hash"],"i":[0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,2,2,0,0,0,0,0,0,3,3,3,3,4,0,0,3,3,5,0,0,0,0,4,0,0,5,6,6,4,7,3,5,8,6,4,7,3,5,8,8,8,6,4,7,3,5,8,6,4,7,3,5,8,6,6,4,7,3,5,8,6,4,7,3,5,8,6,4,7,3,5,8,6,4,7,3,5,8,7,6,4,7,3,5,8,6,4,7,3,5,8,6,4,7,3,5,8,6,4,7,3,5,8,8,6,4,7,3,5,8,6,4,7,5,8,6,6,6,6,7,7,6,4,7,3,5,8,7,7,7,6,7,6,6,4,7,3,5,8,6,6,6,4,7,3,5,8,6,4,7,3,5,8,6,4,7,3,5,8,8,8,6,6,4,7,3,5,8,9,10,11,0,0,0,0,0,0,0,0,0,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,14,15,15,15,15,15,15,16,16,17,17,17,17,17,17,12,12,13,13,13,13,13,13,14,15,14,15,16,17,12,13,14,15,16,17,12,13,12,13,14,15,16,17,12,13,16,17,12,13,16,17,14,15,16,17,12,13,14,15,14,15,14,15,14,15,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,14,15,16,17,12,13,18,19,20,21,22,23,24,25,26,27,20,21,22,23,24,25,26,27,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,24,25,20,21,22,23,24,25,26,27,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,0,0,0,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,30,31,31,31,31,31,31,18,18,19,19,19,19,19,19,20,20,21,21,21,21,21,21,22,22,23,23,23,23,23,23,24,24,25,25,25,25,25,25,28,28,29,29,29,29,29,29,29,29,29,29,26,26,27,27,27,27,27,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,30,31,18,19,20,21,22,23,24,25,28,29,26,27,32,33,34,35,36,37,38,39,40,41,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,43,44,45,46,47,47,48,49,50,51,52,34,34,34,34,35,35,35,35,36,36,36,37,37,37,38,38,38,39,39,39,39,39,40,40,40,40,40,40,40,41,41,41,41,42,42,42,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,41,42,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,53,54,0,0,0,0,0,0,55,56,55,56,55,56,53,54,55,56,53,54,55,56,53,54,55,56,53,54,55,56,55,56,55,56,53,54,55,56,53,54,55,56,53,54,55,56,53,54,55,56,55,56,53,54,55,56,53,54,55,56,53,53,54,54,54,54,54,54,55,55,56,56,56,56,56,56,55,56,55,56,53,54,55,56,53,54,55,56,55,56,55,56,53,54,55,56,55,56,53,54,55,56,55,56,55,56,55,56,53,54,55,56,55,56,53,54,55,56,53,54,55,56,53,54,55,56,53,54,55,56,57,58,57,58,0,0,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,57,58,58,58,58,58,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,0,0,0,0,0,0,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,61,62,59,60,61,62,59,60,61,62,59,59,60,60,60,60,60,60,61,61,62,62,62,62,62,62,59,60,59,60,61,62,59,60,61,62,61,62,61,62,59,60,61,62,61,62,59,60,61,62,61,62,59,60,61,62,59,60,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,65,66,0,0,0,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,67,68,68,68,68,68,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,71,72,75,76,0,0,0,0,0,0,0,0,0,0,0,82,83,0,0,0,0,0,0,0,0,0,0,82,83,0,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,82,83,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,84,69,69,70,70,70,70,70,70,71,71,72,72,72,72,72,72,73,73,74,74,74,74,74,74,75,75,76,76,76,76,76,76,77,77,78,78,78,78,78,78,82,82,83,83,83,83,83,83,83,83,83,83,79,79,80,80,80,80,80,80,81,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,69,70,71,72,73,74,75,76,77,78,82,83,79,80,81,85,86,0,0,0,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,87,88,88,88,88,88,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,89,90,90,90,90,90,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,0,0,0,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,91,92,92,92,92,92,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,93,94,0,0,0,0,0,0,0,0,0,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,95,96,96,96,96,96,96,93,93,94,94,94,94,94,94,97,97,98,98,98,98,98,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,95,96,93,94,97,98,95,96,95,96,95,96,93,94,97,98,97,98,95,96,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,95,96,93,94,97,98,97,98,95,96,93,94,97,98,95,96,0,0,0,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,99,100,100,100,100,100,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,0,0,0,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,102,102,102,102,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,0,0,0,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,103,104,104,104,104,104,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,105,106,107,108,109,110,111,112,113,106,107,108,109,112,113,106,107,106,107,106,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,115,0,0,0,0,0,116,117,118,119,120,121,116,117,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,120,121,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,120,121,126,127,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,134,122,122,123,123,123,123,123,123,105,105,124,124,125,125,125,125,125,125,126,126,127,127,127,127,127,127,120,120,121,121,121,121,121,121,116,116,117,117,117,117,117,117,114,114,115,115,115,115,115,115,115,115,115,115,106,106,107,107,107,107,107,107,128,128,129,129,129,129,129,129,118,118,119,119,119,119,119,119,108,108,109,109,109,109,109,109,110,110,111,111,111,111,111,111,130,130,131,131,131,131,131,131,112,112,113,113,113,113,113,113,132,132,133,133,133,133,133,133,116,117,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,126,127,130,131,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,128,129,118,119,130,131,124,125,120,121,122,123,122,123,122,123,132,133,124,125,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,128,129,118,119,126,127,122,123,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,122,123,105,124,125,126,127,120,121,116,117,114,115,106,107,128,129,118,119,108,109,110,111,130,131,112,113,132,133,120,121,120,121,116,117,135,136,0,0,0,137,137,137,137,137,137,137,137,137,137,137,138,137,137,137,137,137,137,137,137,137,137,137,137,137,139,140,141,142,0,0,0,0,0,0,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,143,144,139,140,141,142,143,143,143,144,144,144,144,144,144,144,144,139,139,139,140,140,140,141,141,141,142,142,142,143,143,144,139,140,141,142,143,144,139,140,141,142,143,144,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,143,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,139,140,141,142,143,144,145,146,145,146,0,0,0,0,0,0,147,148,149,150,151,0,0,0,0,0,0,0,0,0,147,148,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,151,152,153,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,164,165,162,163,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,158,159,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,154,155,155,155,155,155,155,150,150,151,151,151,151,151,151,151,151,151,151,156,156,157,157,157,157,157,157,158,158,159,159,159,159,159,159,160,160,161,161,161,161,161,161,162,162,163,163,163,163,163,163,164,164,165,165,165,165,165,165,152,152,153,153,153,153,153,153,145,145,146,146,146,146,146,146,166,166,167,167,167,167,167,167,147,147,148,148,149,149,149,149,149,149,149,149,149,149,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,164,165,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,166,167,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,158,159,158,159,158,159,154,155,154,155,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,166,167,158,159,158,159,160,161,162,163,156,157,158,159,158,159,160,161,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,152,153,156,157,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,154,155,150,151,156,157,158,159,160,161,162,163,164,165,152,153,145,146,166,167,147,148,149,168,169,169,170,171,171,172,173,174,175,172,173,176,177,0,178,179,0,0,0,0,0,0,0,0,178,179,0,0,0,0,0,0,180,181,0,182,183,0,0,184,185,0,186,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,182,183,0,0,0,0,0,0,0,0,0,0,0,180,181,0,0,0,0,0,0,180,181,188,189,190,191,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,194,195,208,209,194,195,190,191,194,195,202,203,196,197,180,181,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,200,201,206,207,202,203,204,205,200,201,200,201,208,209,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,192,193,193,193,193,193,193,172,172,173,173,173,173,173,173,194,194,195,195,195,195,195,195,196,196,197,197,197,197,197,197,186,186,187,187,187,187,187,187,187,187,187,187,198,198,199,199,199,199,199,199,190,190,191,191,191,191,191,191,200,200,201,201,201,201,201,201,182,182,183,183,183,183,183,183,183,183,183,183,188,188,189,189,189,189,189,189,184,184,185,185,185,185,185,185,185,185,185,185,174,174,175,175,175,175,175,175,176,176,177,177,177,177,177,177,177,177,177,177,202,202,203,203,203,203,203,203,204,204,205,205,205,205,205,205,180,180,181,181,181,181,181,181,181,181,181,181,206,206,207,207,207,207,207,207,178,178,179,179,179,179,179,179,179,179,179,179,208,208,209,209,209,209,209,209,210,210,211,211,211,211,211,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,194,195,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,200,201,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,200,201,198,199,210,211,210,211,202,203,204,205,188,189,206,207,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,198,199,198,199,204,205,188,189,196,197,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,188,189,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,200,201,192,193,172,173,194,195,196,197,186,187,198,199,190,191,200,201,182,183,188,189,184,185,174,175,176,177,202,203,204,205,180,181,206,207,178,179,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,223,224,224,225,225,226,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["read",8]],["result",4,[["error",4]]]],[[["read",8]],["result",4,[["error",4]]]],[[["str",0]],["result",4,[["error",3]]]],[[["str",0]],["result",4,[["error",3]]]],[[],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[],["result",4,[["string",3],["error",3]]]],[[],["result",4,[["string",3],["error",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["account",3]],["account",3]],[[["tokenpermissions",4]],["tokenpermissions",4]],[[["permissions",3]],["permissions",3]],[[["authrequired",4]],["authrequired",4]],[[["timing",4]],["timing",4]],[[["timeddata",3]],["timeddata",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["account",3]]]],[[],["result",4,[["tokenpermissions",4]]]],[[],["result",4,[["permissions",3]]]],[[],["result",4,[["authrequired",4]]]],[[],["result",4,[["timing",4]]]],[[],["result",4,[["timeddata",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["account",3],["account",3]],["bool",0]],[[["tokenpermissions",4],["tokenpermissions",4]],["bool",0]],[[["permissions",3],["permissions",3]],["bool",0]],[[["authrequired",4],["authrequired",4]],["bool",0]],[[["timing",4],["timing",4]],["bool",0]],[[["timeddata",3],["timeddata",3]],["bool",0]],[[["account",3],["formatter",3]],["result",6]],[[["tokenpermissions",4],["formatter",3]],["result",6]],[[["permissions",3],["formatter",3]],["result",6]],[[["authrequired",4],["formatter",3]],["result",6]],[[["timing",4],["formatter",3]],["result",6]],[[["timeddata",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["account",3],["account",3]],["bool",0]],[[["tokenpermissions",4],["tokenpermissions",4]],["bool",0]],[[["permissions",3],["permissions",3]],["bool",0]],[[["timing",4],["timing",4]],["bool",0]],[[["timeddata",3],["timeddata",3]],["bool",0]],null,null,null,null,null,null,[[["account",3]],["result",4]],[[["tokenpermissions",4]],["result",4]],[[["permissions",3]],["result",4]],[[["authrequired",4]],["result",4]],[[["timing",4]],["result",4]],[[["timeddata",3]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["blockchainstate",3]],["blockchainstate",3]],[[["blockchainstatejson",3]],["blockchainstatejson",3]],[[["stagedledgerhash",3]],["stagedledgerhash",3]],[[["stagedledgerhashjson",3]],["stagedledgerhashjson",3]],[[["nonsnarkstagedledgerhash",3]],["nonsnarkstagedledgerhash",3]],[[["nonsnarkstagedledgerhashjson",3]],["nonsnarkstagedledgerhashjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["blockchainstate",3]]]],[[],["result",4,[["blockchainstatejson",3]]]],[[],["result",4,[["stagedledgerhash",3]]]],[[],["result",4,[["stagedledgerhashjson",3]]]],[[],["result",4,[["nonsnarkstagedledgerhash",3]]]],[[],["result",4,[["nonsnarkstagedledgerhashjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["blockchainstate",3],["blockchainstate",3]],["bool",0]],[[["blockchainstatejson",3],["blockchainstatejson",3]],["bool",0]],[[["stagedledgerhash",3],["stagedledgerhash",3]],["bool",0]],[[["stagedledgerhashjson",3],["stagedledgerhashjson",3]],["bool",0]],[[["nonsnarkstagedledgerhash",3],["nonsnarkstagedledgerhash",3]],["bool",0]],[[["nonsnarkstagedledgerhashjson",3],["nonsnarkstagedledgerhashjson",3]],["bool",0]],[[["blockchainstate",3],["formatter",3]],["result",6]],[[["blockchainstatejson",3],["formatter",3]],["result",6]],[[["stagedledgerhash",3],["formatter",3]],["result",6]],[[["stagedledgerhashjson",3],["formatter",3]],["result",6]],[[["nonsnarkstagedledgerhash",3],["formatter",3]],["result",6]],[[["nonsnarkstagedledgerhashjson",3],["formatter",3]],["result",6]],[[]],[[["blockchainstatejson",3]],["blockchainstate",3]],[[]],[[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]],["blockchainstatejson",3]],[[["blockchainstate",3]],["blockchainstatejson",3]],[[["versioned",3,[["blockchainstate",3]]]],["blockchainstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]]]],["blockchainstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["blockchainstate",3]]]]]]]]]],["blockchainstatejson",3]],[[["stagedledgerhashjson",3]],["stagedledgerhash",3]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerhash",3]]]]]]]]]],["stagedledgerhashjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerhash",3]]]]]]]],["stagedledgerhashjson",3]],[[["versioned",3,[["versioned",3,[["stagedledgerhash",3]]]]]],["stagedledgerhashjson",3]],[[["versioned",3,[["stagedledgerhash",3]]]],["stagedledgerhashjson",3]],[[["stagedledgerhash",3]],["stagedledgerhashjson",3]],[[]],[[["nonsnarkstagedledgerhashjson",3]],["nonsnarkstagedledgerhash",3]],[[]],[[["versioned",3,[["nonsnarkstagedledgerhash",3]]]],["nonsnarkstagedledgerhashjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["nonsnarkstagedledgerhash",3]]]]]]]],["nonsnarkstagedledgerhashjson",3]],[[["versioned",3,[["versioned",3,[["nonsnarkstagedledgerhash",3]]]]]],["nonsnarkstagedledgerhashjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["nonsnarkstagedledgerhash",3]]]]]]]]]],["nonsnarkstagedledgerhashjson",3]],[[["nonsnarkstagedledgerhash",3]],["nonsnarkstagedledgerhashjson",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["blockchainstate",3],["blockchainstate",3]],["bool",0]],[[["blockchainstatejson",3],["blockchainstatejson",3]],["bool",0]],[[["stagedledgerhash",3],["stagedledgerhash",3]],["bool",0]],[[["stagedledgerhashjson",3],["stagedledgerhashjson",3]],["bool",0]],[[["nonsnarkstagedledgerhash",3],["nonsnarkstagedledgerhash",3]],["bool",0]],[[["nonsnarkstagedledgerhashjson",3],["nonsnarkstagedledgerhashjson",3]],["bool",0]],null,null,null,null,null,null,[[["blockchainstate",3]],["result",4]],[[["blockchainstatejson",3]],["result",4]],[[["stagedledgerhash",3]],["result",4]],[[["stagedledgerhashjson",3]],["result",4]],[[["nonsnarkstagedledgerhash",3]],["result",4]],[[["nonsnarkstagedledgerhashjson",3]],["result",4]],null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullbulletproofchallenge",3]],["bulletproofchallenge",3]],[[["bulletproofchallengejson",3]],["bulletproofchallengejson",3]],[[["bulletproofchallenges",3]],["bulletproofchallenges",3]],[[["bulletproofchallengesjson",3]],["bulletproofchallengesjson",3]],[[["proofstatebulletproofchallenges",3]],["proofstatebulletproofchallenges",3]],[[["proofstatebulletproofchallengesjson",3]],["proofstatebulletproofchallengesjson",3]],[[["bulletproofchallengetuple17",3]],["bulletproofchallengetuple17",3]],[[["bulletproofchallengetuple17json",3]],["bulletproofchallengetuple17json",3]],[[["bulletproofchallengetuple18",3]],["bulletproofchallengetuple18",3]],[[["bulletproofchallengetuple18json",3]],["bulletproofchallengetuple18json",3]],[[["bulletproofprechallenge",4]],["bulletproofprechallenge",4]],[[["bulletproofprechallengejson",4]],["bulletproofprechallengejson",4]],[[["scalarchallengevector2",3]],["scalarchallengevector2",3]],[[["scalarchallengevector2json",3]],["scalarchallengevector2json",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["bulletproofchallenge",3]]]],[[],["result",4,[["bulletproofchallengejson",3]]]],[[],["result",4,[["bulletproofchallenges",3]]]],[[],["result",4,[["bulletproofchallengesjson",3]]]],[[],["result",4,[["proofstatebulletproofchallenges",3]]]],[[],["result",4,[["proofstatebulletproofchallengesjson",3]]]],[[],["result",4,[["bulletproofchallengetuple17",3]]]],[[],["result",4,[["bulletproofchallengetuple17json",3]]]],[[],["result",4,[["bulletproofchallengetuple18",3]]]],[[],["result",4,[["bulletproofchallengetuple18json",3]]]],[[],["result",4,[["bulletproofprechallenge",4]]]],[[],["result",4,[["bulletproofprechallengejson",4]]]],[[],["result",4,[["scalarchallengevector2",3]]]],[[],["result",4,[["scalarchallengevector2json",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["bulletproofchallenge",3],["bulletproofchallenge",3]],["bool",0]],[[["bulletproofchallengejson",3],["bulletproofchallengejson",3]],["bool",0]],[[["bulletproofchallenges",3],["bulletproofchallenges",3]],["bool",0]],[[["bulletproofchallengesjson",3],["bulletproofchallengesjson",3]],["bool",0]],[[["proofstatebulletproofchallenges",3],["proofstatebulletproofchallenges",3]],["bool",0]],[[["proofstatebulletproofchallengesjson",3],["proofstatebulletproofchallengesjson",3]],["bool",0]],[[["bulletproofchallengetuple17",3],["bulletproofchallengetuple17",3]],["bool",0]],[[["bulletproofchallengetuple17json",3],["bulletproofchallengetuple17json",3]],["bool",0]],[[["bulletproofchallengetuple18",3],["bulletproofchallengetuple18",3]],["bool",0]],[[["bulletproofchallengetuple18json",3],["bulletproofchallengetuple18json",3]],["bool",0]],[[["bulletproofprechallenge",4],["bulletproofprechallenge",4]],["bool",0]],[[["bulletproofprechallengejson",4],["bulletproofprechallengejson",4]],["bool",0]],[[["scalarchallengevector2",3],["scalarchallengevector2",3]],["bool",0]],[[["scalarchallengevector2json",3],["scalarchallengevector2json",3]],["bool",0]],[[["bulletproofchallenge",3],["formatter",3]],["result",6]],[[["bulletproofchallengejson",3],["formatter",3]],["result",6]],[[["bulletproofchallenges",3],["formatter",3]],["result",6]],[[["bulletproofchallengesjson",3],["formatter",3]],["result",6]],[[["proofstatebulletproofchallenges",3],["formatter",3]],["result",6]],[[["proofstatebulletproofchallengesjson",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple17",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple17json",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple18",3],["formatter",3]],["result",6]],[[["bulletproofchallengetuple18json",3],["formatter",3]],["result",6]],[[["bulletproofprechallenge",4],["formatter",3]],["result",6]],[[["bulletproofprechallengejson",4],["formatter",3]],["result",6]],[[["scalarchallengevector2",3],["formatter",3]],["result",6]],[[["scalarchallengevector2json",3],["formatter",3]],["result",6]],[[]],[[["bulletproofchallengejson",3]],["bulletproofchallenge",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]]]]]],["bulletproofchallengejson",3]],[[["versioned",3,[["bulletproofchallenge",3]]]],["bulletproofchallengejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]]]],["bulletproofchallengejson",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallenge",3]]]]]],["bulletproofchallengejson",3]],[[["bulletproofchallenge",3]],["bulletproofchallengejson",3]],[[]],[[["bulletproofchallengesjson",3]],["bulletproofchallenges",3]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]]]]]],["bulletproofchallengesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]]]],["bulletproofchallengesjson",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallenges",3]]]]]],["bulletproofchallengesjson",3]],[[["versioned",3,[["bulletproofchallenges",3]]]],["bulletproofchallengesjson",3]],[[["bulletproofchallenges",3]],["bulletproofchallengesjson",3]],[[]],[[["proofstatebulletproofchallengesjson",3]],["proofstatebulletproofchallenges",3]],[[["versioned",3,[["proofstatebulletproofchallenges",3]]]],["proofstatebulletproofchallengesjson",3]],[[["proofstatebulletproofchallenges",3]],["proofstatebulletproofchallengesjson",3]],[[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]],["proofstatebulletproofchallengesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]]]]]],["proofstatebulletproofchallengesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatebulletproofchallenges",3]]]]]]]],["proofstatebulletproofchallengesjson",3]],[[]],[[]],[[["bulletproofchallengetuple17json",3]],["bulletproofchallengetuple17",3]],[[]],[[["versioned",3,[["bulletproofchallengetuple17",3]]]],["bulletproofchallengetuple17json",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]],["bulletproofchallengetuple17json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]]]],["bulletproofchallengetuple17json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple17",3]]]]]]]]]],["bulletproofchallengetuple17json",3]],[[["bulletproofchallengetuple17",3]],["bulletproofchallengetuple17json",3]],[[["bulletproofchallengetuple18json",3]],["bulletproofchallengetuple18",3]],[[]],[[["bulletproofchallengetuple18",3]],["bulletproofchallengetuple18json",3]],[[["versioned",3,[["bulletproofchallengetuple18",3]]]],["bulletproofchallengetuple18json",3]],[[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]],["bulletproofchallengetuple18json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]]]],["bulletproofchallengetuple18json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofchallengetuple18",3]]]]]]]]]],["bulletproofchallengetuple18json",3]],[[]],[[["bulletproofprechallengejson",4]],["bulletproofprechallenge",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallengejsonproxy",4]]]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallengejsonproxy",4]]]]]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["versioned",3,[["bulletproofprechallengejsonproxy",4]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["bulletproofprechallengejsonproxy",4]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["versioned",3,[["bulletproofprechallenge",4]]]]]],["bulletproofprechallengejson",4]],[[["versioned",3,[["bulletproofprechallenge",4]]]],["bulletproofprechallengejson",4]],[[["bulletproofprechallenge",4]],["bulletproofprechallengejson",4]],[[]],[[["scalarchallengevector2json",3]],["scalarchallengevector2",3]],[[]],[[]],[[["scalarchallengevector2",3]],["scalarchallengevector2json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]]]]]],["scalarchallengevector2json",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]]]],["scalarchallengevector2json",3]],[[["versioned",3,[["versioned",3,[["scalarchallengevector2",3]]]]]],["scalarchallengevector2json",3]],[[["versioned",3,[["scalarchallengevector2",3]]]],["scalarchallengevector2json",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bulletproofchallenge",3],["bulletproofchallenge",3]],["bool",0]],[[["bulletproofchallengejson",3],["bulletproofchallengejson",3]],["bool",0]],[[["bulletproofchallenges",3],["bulletproofchallenges",3]],["bool",0]],[[["bulletproofchallengesjson",3],["bulletproofchallengesjson",3]],["bool",0]],[[["proofstatebulletproofchallenges",3],["proofstatebulletproofchallenges",3]],["bool",0]],[[["proofstatebulletproofchallengesjson",3],["proofstatebulletproofchallengesjson",3]],["bool",0]],[[["bulletproofchallengetuple17",3],["bulletproofchallengetuple17",3]],["bool",0]],[[["bulletproofchallengetuple17json",3],["bulletproofchallengetuple17json",3]],["bool",0]],[[["bulletproofchallengetuple18",3],["bulletproofchallengetuple18",3]],["bool",0]],[[["bulletproofchallengetuple18json",3],["bulletproofchallengetuple18json",3]],["bool",0]],[[["bulletproofprechallenge",4],["bulletproofprechallenge",4]],["bool",0]],[[["bulletproofprechallengejson",4],["bulletproofprechallengejson",4]],["bool",0]],[[["scalarchallengevector2",3],["scalarchallengevector2",3]],["bool",0]],[[["scalarchallengevector2json",3],["scalarchallengevector2json",3]],["bool",0]],null,null,[[["bulletproofchallenge",3]],["result",4]],[[["bulletproofchallengejson",3]],["result",4]],[[["bulletproofchallenges",3]],["result",4]],[[["bulletproofchallengesjson",3]],["result",4]],[[["proofstatebulletproofchallenges",3]],["result",4]],[[["proofstatebulletproofchallengesjson",3]],["result",4]],[[["bulletproofchallengetuple17",3]],["result",4]],[[["bulletproofchallengetuple17json",3]],["result",4]],[[["bulletproofchallengetuple18",3]],["result",4]],[[["bulletproofchallengetuple18json",3]],["result",4]],[[["bulletproofprechallenge",4]],["result",4]],[[["bulletproofprechallengejson",4]],["result",4]],[[["scalarchallengevector2",3]],["result",4]],[[["scalarchallengevector2json",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["u32json",3]],["u32json",3]],[[["u64json",3]],["u64json",3]],[[["i64",3]],["i64",3]],[[["decimaljson",3]],["decimaljson",3]],[[["charjson",3]],["charjson",3]],[[["bytevec",3]],["bytevec",3]],[[["bytevecjson",3]],["bytevecjson",3]],[[["base58encodabletype",3,[["clone",8]]]],["base58encodabletype",3,[["clone",8]]]],[[["base58encodableversionedtype",3,[["clone",8]]]],["base58encodableversionedtype",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["u32json",3]]]],[[],["result",4,[["u64json",3]]]],[[],["result",4,[["i64",3]]]],[[],["result",4,[["decimaljson",3]]]],[[],["result",4,[["charjson",3]]]],[[],["result",4,[["bytevec",3]]]],[[],["result",4,[["bytevecjson",3]]]],[[],["result",4,[["base58encodabletype",3]]]],[[],["result",4,[["base58encodableversionedtype",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["u32json",3],["u32json",3]],["bool",0]],[[["u64json",3],["u64json",3]],["bool",0]],[[["i64",3],["i64",3]],["bool",0]],[[["decimaljson",3],["decimaljson",3]],["bool",0]],[[["charjson",3],["charjson",3]],["bool",0]],[[["bytevec",3],["bytevec",3]],["bool",0]],[[["bytevecjson",3],["bytevecjson",3]],["bool",0]],[[["base58encodabletype",3,[["partialeq",8]]],["base58encodabletype",3]],["bool",0]],[[["base58encodableversionedtype",3,[["partialeq",8]]],["base58encodableversionedtype",3]],["bool",0]],[[["u32json",3],["formatter",3]],["result",6]],[[["u64json",3],["formatter",3]],["result",6]],[[["i64",3],["formatter",3]],["result",6]],[[["decimaljson",3],["formatter",3]],["result",6]],[[["charjson",3],["formatter",3]],["result",6]],[[["bytevec",3],["formatter",3]],["result",6]],[[["bytevecjson",3],["formatter",3]],["result",6]],[[["base58encodabletype",3,[["debug",8]]],["formatter",3]],["result",6]],[[["base58encodableversionedtype",3,[["debug",8]]],["formatter",3]],["result",6]],[[["hashv1json",6]],["hashv1",6]],[[["hashv1json",6]],["hash2v1",6]],[[["u64json",3]],["tokenidv1",6]],[[["u32json",3]],["lengthv1",6]],[[["u64json",3]],["amountv1",6]],[[["decimaljson",3]],["amountv1",6]],[[["u32json",3]],["extendedu32",6]],[[["i64",3]],["hex64v1",6]],[[["charjson",3]],["charv1",6]],[[["base58encodabletype",3,[["vec",3,[["u8",0]]]]]],["bytevecv1",6]],[[["hash2v1",6]],["hashv1json",6]],[[["u32",0]],["u32json",3]],[[["lengthv1",6]],["u32json",3]],[[["extendedu32",6]],["u32json",3]],[[]],[[["amountv1",6]],["u64json",3]],[[["tokenidv1",6]],["u64json",3]],[[]],[[["u64",0]],["u64json",3]],[[]],[[["i64",0]],["i64",3]],[[["hex64v1",6]],["i64",3]],[[["u64",0]],["decimaljson",3]],[[["amountv1",6]],["decimaljson",3]],[[]],[[]],[[["charv1",6]],["charjson",3]],[[["u8",0]],["charjson",3]],[[["bytevecjson",3]],["bytevec",3]],[[["vec",3,[["u8",0]]]],["bytevec",3]],[[["versioned",3,[["bytevec",3]]]],["bytevec",3]],[[]],[[["versioned",3,[["versioned",3,[["bytevec",3]]]]]],["bytevec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["bytevec",3]]]]]]]]]],["bytevecjson",3]],[[["versioned",3,[["versioned",3,[["bytevec",3]]]]]],["bytevecjson",3]],[[]],[[["vec",3,[["u8",0]]]],["bytevecjson",3]],[[["bytevec",3]],["bytevecjson",3]],[[["versioned",3,[["bytevec",3]]]],["bytevecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["bytevec",3]]]]]]]],["bytevecjson",3]],[[["never",0]]],[[]],[[],["base58encodabletype",3]],[[["bytevecv1",6]],["base58encodabletype",3,[["vec",3,[["u8",0]]]]]],[[]],[[],["base58encodableversionedtype",3]],[[["never",0]]],[[["asref",8]],["result",4,[["base58encodabletype",3],["error",4]]]],[[["asref",8]],["result",4,[["base58encodableversionedtype",3],["error",4]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32json",3],["u32json",3]],["bool",0]],[[["u64json",3],["u64json",3]],["bool",0]],[[["i64",3],["i64",3]],["bool",0]],[[["decimaljson",3],["decimaljson",3]],["bool",0]],[[["charjson",3],["charjson",3]],["bool",0]],[[["bytevec",3],["bytevec",3]],["bool",0]],[[["bytevecjson",3],["bytevecjson",3]],["bool",0]],[[["base58encodabletype",3,[["partialeq",8]]],["base58encodabletype",3]],["bool",0]],[[["base58encodableversionedtype",3,[["partialeq",8]]],["base58encodableversionedtype",3]],["bool",0]],[[["u32json",3]],["result",4]],[[["u64json",3]],["result",4]],[[["i64",3]],["result",4]],[[["decimaljson",3]],["result",4]],[[["charjson",3]],["result",4]],[[["bytevec",3]],["result",4]],[[["bytevecjson",3]],["result",4]],[[["base58encodabletype",3]],["result",4]],[[["base58encodableversionedtype",3]],["result",4]],[[["base58encodabletype",3]],["encodebuilder",3]],[[["base58encodableversionedtype",3]],["result",4,[["encodebuilder",3,[["vec",3,[["u8",0]]]]],["error",4]]]],[[["base58encodabletype",3]],["result",4,[["string",3],["error",4]]]],[[["base58encodableversionedtype",3]],["result",4,[["string",3],["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["vrfoutputtruncated",3]],["vrfoutputtruncated",3]],[[["vrfoutputtruncatedjson",3]],["vrfoutputtruncatedjson",3]],[[["consensusstate",3]],["consensusstate",3]],[[["consensusstatejson",3]],["consensusstatejson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["vrfoutputtruncated",3]]]],[[],["result",4,[["vrfoutputtruncatedjson",3]]]],[[],["result",4,[["consensusstate",3]]]],[[],["result",4,[["consensusstatejson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,[[["vrfoutputtruncated",3],["vrfoutputtruncated",3]],["bool",0]],[[["vrfoutputtruncatedjson",3],["vrfoutputtruncatedjson",3]],["bool",0]],[[["consensusstate",3],["consensusstate",3]],["bool",0]],[[["consensusstatejson",3],["consensusstatejson",3]],["bool",0]],[[["vrfoutputtruncated",3],["formatter",3]],["result",6]],[[["vrfoutputtruncatedjson",3],["formatter",3]],["result",6]],[[["consensusstate",3],["formatter",3]],["result",6]],[[["consensusstatejson",3],["formatter",3]],["result",6]],[[]],[[["vrfoutputtruncatedjson",3]],["vrfoutputtruncated",3]],[[]],[[["vrfoutputtruncated",3]],["vrfoutputtruncatedjson",3]],[[["versioned",3,[["vrfoutputtruncated",3]]]],["vrfoutputtruncatedjson",3]],[[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]],["vrfoutputtruncatedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]]]],["vrfoutputtruncatedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["vrfoutputtruncated",3]]]]]]]]]],["vrfoutputtruncatedjson",3]],[[["consensusstatejson",3]],["consensusstate",3]],[[]],[[]],[[["versioned",3,[["consensusstate",3]]]],["consensusstatejson",3]],[[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]],["consensusstatejson",3]],[[["consensusstate",3]],["consensusstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]]]]]],["consensusstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["consensusstate",3]]]]]]]],["consensusstatejson",3]],null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],null,null,null,null,[[["vrfoutputtruncated",3],["vrfoutputtruncated",3]],["bool",0]],[[["vrfoutputtruncatedjson",3],["vrfoutputtruncatedjson",3]],["bool",0]],[[["consensusstate",3],["consensusstate",3]],["bool",0]],[[["consensusstatejson",3],["consensusstatejson",3]],["bool",0]],null,null,[[["vrfoutputtruncated",3]],["result",4]],[[["vrfoutputtruncatedjson",3]],["result",4]],[[["consensusstate",3]],["result",4]],[[["consensusstatejson",3]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["deltatransitionchainproof",3]],["deltatransitionchainproof",3]],[[["deltatransitionchainproofjson",3]],["deltatransitionchainproofjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["deltatransitionchainproof",3]]]],[[],["result",4,[["deltatransitionchainproofjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["deltatransitionchainproof",3],["deltatransitionchainproof",3]],["bool",0]],[[["deltatransitionchainproofjson",3],["deltatransitionchainproofjson",3]],["bool",0]],[[["deltatransitionchainproof",3],["formatter",3]],["result",6]],[[["deltatransitionchainproofjson",3],["formatter",3]],["result",6]],[[]],[[["deltatransitionchainproofjson",3]],["deltatransitionchainproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]]]],["deltatransitionchainproofjson",3]],[[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]],["deltatransitionchainproofjson",3]],[[["deltatransitionchainproof",3]],["deltatransitionchainproofjson",3]],[[["versioned",3,[["deltatransitionchainproof",3]]]],["deltatransitionchainproofjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["deltatransitionchainproof",3]]]]]]]]]],["deltatransitionchainproofjson",3]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["deltatransitionchainproof",3],["deltatransitionchainproof",3]],["bool",0]],[[["deltatransitionchainproofjson",3],["deltatransitionchainproofjson",3]],["bool",0]],[[["deltatransitionchainproof",3]],["result",4]],[[["deltatransitionchainproofjson",3]],["result",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["epochledger",3]],["epochledger",3]],[[["epochledgerjson",3]],["epochledgerjson",3]],[[["epochdata",3]],["epochdata",3]],[[["epochdatajson",3]],["epochdatajson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["epochledger",3]]]],[[],["result",4,[["epochledgerjson",3]]]],[[],["result",4,[["epochdata",3]]]],[[],["result",4,[["epochdatajson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,[[["epochledger",3],["epochledger",3]],["bool",0]],[[["epochledgerjson",3],["epochledgerjson",3]],["bool",0]],[[["epochdata",3],["epochdata",3]],["bool",0]],[[["epochdatajson",3],["epochdatajson",3]],["bool",0]],[[["epochledger",3],["formatter",3]],["result",6]],[[["epochledgerjson",3],["formatter",3]],["result",6]],[[["epochdata",3],["formatter",3]],["result",6]],[[["epochdatajson",3],["formatter",3]],["result",6]],[[]],[[["epochledgerjson",3]],["epochledger",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["epochledger",3]]]]]]]]]],["epochledgerjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["epochledger",3]]]]]]]],["epochledgerjson",3]],[[]],[[["versioned",3,[["versioned",3,[["epochledger",3]]]]]],["epochledgerjson",3]],[[["versioned",3,[["epochledger",3]]]],["epochledgerjson",3]],[[["epochledger",3]],["epochledgerjson",3]],[[["epochdatajson",3]],["epochdata",3]],[[]],[[["epochdata",3]],["epochdatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["epochdata",3]]]]]]]]]],["epochdatajson",3]],[[["versioned",3,[["epochdata",3]]]],["epochdatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["epochdata",3]]]]]]]],["epochdatajson",3]],[[]],[[["versioned",3,[["versioned",3,[["epochdata",3]]]]]],["epochdatajson",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],null,null,null,null,[[["epochledger",3],["epochledger",3]],["bool",0]],[[["epochledgerjson",3],["epochledgerjson",3]],["bool",0]],[[["epochdata",3],["epochdata",3]],["bool",0]],[[["epochdatajson",3],["epochdatajson",3]],["bool",0]],null,null,[[["epochledger",3]],["result",4]],[[["epochledgerjson",3]],["result",4]],[[["epochdata",3]],["result",4]],[[["epochdatajson",3]],["result",4]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["error",4]],["error",4]],[[["error",4]],["error",4]],[[],["usize",0]],[[]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["externaltransition",3]],["externaltransition",3]],[[["externaltransitionjson",3]],["externaltransitionjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["externaltransition",3]]]],[[],["result",4,[["externaltransitionjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["externaltransition",3],["externaltransition",3]],["bool",0]],[[["externaltransitionjson",3],["externaltransitionjson",3]],["bool",0]],[[["externaltransition",3],["formatter",3]],["result",6]],[[["externaltransitionjson",3],["formatter",3]],["result",6]],[[]],[[["externaltransitionjson",3]],["externaltransition",3]],[[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]],["externaltransitionjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]]]]]],["externaltransitionjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["externaltransition",3]]]]]]]],["externaltransitionjson",3]],[[["versioned",3,[["externaltransition",3]]]],["externaltransitionjson",3]],[[["externaltransition",3]],["externaltransitionjson",3]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["externaltransition",3],["externaltransition",3]],["bool",0]],[[["externaltransitionjson",3],["externaltransitionjson",3]],["bool",0]],null,null,null,null,null,null,[[["externaltransition",3]],["result",4]],[[["externaltransitionjson",3]],["result",4]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullfieldelementvec",3]],["fieldelementvec",3]],[[["fieldelementvecjson",3]],["fieldelementvecjson",3]],[[["finiteecpoint",3]],["finiteecpoint",3]],[[["finiteecpointjson",3]],["finiteecpointjson",3]],[[["finiteecpointvec",3]],["finiteecpointvec",3]],[[["finiteecpointvecjson",3]],["finiteecpointvecjson",3]],[[["finiteecpointpair",3]],["finiteecpointpair",3]],[[["finiteecpointpairjson",3]],["finiteecpointpairjson",3]],[[["finiteecpointpairvec",3]],["finiteecpointpairvec",3]],[[["finiteecpointpairvecjson",3]],["finiteecpointpairvecjson",3]],[[["ecpoint",4]],["ecpoint",4]],[[["ecpointjson",4]],["ecpointjson",4]],[[["ecpointvec",3]],["ecpointvec",3]],[[["ecpointvecjson",3]],["ecpointvecjson",3]],[[["fieldelementjson",3]],["fieldelementjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["ecpoint",4]],[[],["ecpointjson",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["fieldelementvec",3]]]],[[],["result",4,[["fieldelementvecjson",3]]]],[[],["result",4,[["finiteecpoint",3]]]],[[],["result",4,[["finiteecpointjson",3]]]],[[],["result",4,[["finiteecpointvec",3]]]],[[],["result",4,[["finiteecpointvecjson",3]]]],[[],["result",4,[["finiteecpointpair",3]]]],[[],["result",4,[["finiteecpointpairjson",3]]]],[[],["result",4,[["finiteecpointpairvec",3]]]],[[],["result",4,[["finiteecpointpairvecjson",3]]]],[[],["result",4,[["ecpoint",4]]]],[[],["result",4,[["ecpointjson",4]]]],[[],["result",4,[["ecpointvec",3]]]],[[],["result",4,[["ecpointvecjson",3]]]],[[],["result",4,[["fieldelementjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["fieldelementvec",3],["fieldelementvec",3]],["bool",0]],[[["fieldelementvecjson",3],["fieldelementvecjson",3]],["bool",0]],[[["finiteecpoint",3],["finiteecpoint",3]],["bool",0]],[[["finiteecpointjson",3],["finiteecpointjson",3]],["bool",0]],[[["finiteecpointvec",3],["finiteecpointvec",3]],["bool",0]],[[["finiteecpointvecjson",3],["finiteecpointvecjson",3]],["bool",0]],[[["finiteecpointpair",3],["finiteecpointpair",3]],["bool",0]],[[["finiteecpointpairjson",3],["finiteecpointpairjson",3]],["bool",0]],[[["finiteecpointpairvec",3],["finiteecpointpairvec",3]],["bool",0]],[[["finiteecpointpairvecjson",3],["finiteecpointpairvecjson",3]],["bool",0]],[[["ecpoint",4],["ecpoint",4]],["bool",0]],[[["ecpointjson",4],["ecpointjson",4]],["bool",0]],[[["ecpointvec",3],["ecpointvec",3]],["bool",0]],[[["ecpointvecjson",3],["ecpointvecjson",3]],["bool",0]],[[["fieldelementjson",3],["fieldelementjson",3]],["bool",0]],[[["fieldelementvec",3],["formatter",3]],["result",6]],[[["fieldelementvecjson",3],["formatter",3]],["result",6]],[[["finiteecpoint",3],["formatter",3]],["result",6]],[[["finiteecpointjson",3],["formatter",3]],["result",6]],[[["finiteecpointvec",3],["formatter",3]],["result",6]],[[["finiteecpointvecjson",3],["formatter",3]],["result",6]],[[["finiteecpointpair",3],["formatter",3]],["result",6]],[[["finiteecpointpairjson",3],["formatter",3]],["result",6]],[[["finiteecpointpairvec",3],["formatter",3]],["result",6]],[[["finiteecpointpairvecjson",3],["formatter",3]],["result",6]],[[["ecpoint",4],["formatter",3]],["result",6]],[[["ecpointjson",4],["formatter",3]],["result",6]],[[["ecpointvec",3],["formatter",3]],["result",6]],[[["ecpointvecjson",3],["formatter",3]],["result",6]],[[["fieldelementjson",3],["formatter",3]],["result",6]],[[["fieldelementjson",3]],["fieldelement",6]],[[["fieldelementvecjson",3]],["fieldelementvec",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]]]]]],["fieldelementvecjson",3]],[[]],[[["fieldelementvec",3]],["fieldelementvecjson",3]],[[["versioned",3,[["fieldelementvec",3]]]],["fieldelementvecjson",3]],[[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]],["fieldelementvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["fieldelementvec",3]]]]]]]],["fieldelementvecjson",3]],[[["finiteecpointjson",3]],["finiteecpoint",3]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]]]]]],["finiteecpointjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]]]],["finiteecpointjson",3]],[[["versioned",3,[["versioned",3,[["finiteecpoint",3]]]]]],["finiteecpointjson",3]],[[["versioned",3,[["finiteecpoint",3]]]],["finiteecpointjson",3]],[[["finiteecpoint",3]],["finiteecpointjson",3]],[[]],[[["finiteecpointvecjson",3]],["finiteecpointvec",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]]]]]],["finiteecpointvecjson",3]],[[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]],["finiteecpointvecjson",3]],[[]],[[["finiteecpointvec",3]],["finiteecpointvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointvec",3]]]]]]]],["finiteecpointvecjson",3]],[[["versioned",3,[["finiteecpointvec",3]]]],["finiteecpointvecjson",3]],[[]],[[["finiteecpointpairjson",3]],["finiteecpointpair",3]],[[["versioned",3,[["finiteecpointpair",3]]]],["finiteecpointpairjson",3]],[[["finiteecpointpair",3]],["finiteecpointpairjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]]]],["finiteecpointpairjson",3]],[[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]],["finiteecpointpairjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpair",3]]]]]]]]]],["finiteecpointpairjson",3]],[[]],[[]],[[["finiteecpointpairvecjson",3]],["finiteecpointpairvec",3]],[[]],[[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]],["finiteecpointpairvecjson",3]],[[["versioned",3,[["finiteecpointpairvec",3]]]],["finiteecpointpairvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]]]],["finiteecpointpairvecjson",3]],[[["finiteecpointpairvec",3]],["finiteecpointpairvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["finiteecpointpairvec",3]]]]]]]]]],["finiteecpointpairvecjson",3]],[[["ecpointjson",4]],["ecpoint",4]],[[]],[[["versioned",3,[["ecpointjsonproxy",4]]]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointjsonproxy",4]]]]]]]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointjsonproxy",4]]]]]]]]]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]],["ecpointjson",4]],[[]],[[["ecpoint",4]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["ecpointjsonproxy",4]]]]]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]]]]]],["ecpointjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["ecpoint",4]]]]]]]],["ecpointjson",4]],[[["versioned",3,[["ecpoint",4]]]],["ecpointjson",4]],[[["ecpointvecjson",3]],["ecpointvec",3]],[[]],[[["ecpointvec",3]],["ecpointvecjson",3]],[[["versioned",3,[["ecpointvec",3]]]],["ecpointvecjson",3]],[[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]],["ecpointvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]]]],["ecpointvecjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["ecpointvec",3]]]]]]]]]],["ecpointvecjson",3]],[[]],[[]],[[["fieldelement",6]],["fieldelementjson",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fieldelementvec",3],["fieldelementvec",3]],["bool",0]],[[["fieldelementvecjson",3],["fieldelementvecjson",3]],["bool",0]],[[["finiteecpoint",3],["finiteecpoint",3]],["bool",0]],[[["finiteecpointjson",3],["finiteecpointjson",3]],["bool",0]],[[["finiteecpointvec",3],["finiteecpointvec",3]],["bool",0]],[[["finiteecpointvecjson",3],["finiteecpointvecjson",3]],["bool",0]],[[["finiteecpointpair",3],["finiteecpointpair",3]],["bool",0]],[[["finiteecpointpairjson",3],["finiteecpointpairjson",3]],["bool",0]],[[["finiteecpointpairvec",3],["finiteecpointpairvec",3]],["bool",0]],[[["finiteecpointpairvecjson",3],["finiteecpointpairvecjson",3]],["bool",0]],[[["ecpoint",4],["ecpoint",4]],["bool",0]],[[["ecpointjson",4],["ecpointjson",4]],["bool",0]],[[["ecpointvec",3],["ecpointvec",3]],["bool",0]],[[["ecpointvecjson",3],["ecpointvecjson",3]],["bool",0]],[[["fieldelementjson",3],["fieldelementjson",3]],["bool",0]],[[["fieldelementvec",3]],["result",4]],[[["fieldelementvecjson",3]],["result",4]],[[["finiteecpoint",3]],["result",4]],[[["finiteecpointjson",3]],["result",4]],[[["finiteecpointvec",3]],["result",4]],[[["finiteecpointvecjson",3]],["result",4]],[[["finiteecpointpair",3]],["result",4]],[[["finiteecpointpairjson",3]],["result",4]],[[["finiteecpointpairvec",3]],["result",4]],[[["finiteecpointpairvecjson",3]],["result",4]],[[["ecpoint",4]],["result",4]],[[["ecpointjson",4]],["result",4]],[[["ecpointvec",3]],["result",4]],[[["ecpointvecjson",3]],["result",4]],[[["fieldelementjson",3]],["result",4]],[[["fieldelementjson",3]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asref",8]],["result",4,[["fieldelementjson",3],["fromhexerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["globalslot",3]],["globalslot",3]],[[["globalslotjson",3]],["globalslotjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["globalslot",3]]]],[[],["result",4,[["globalslotjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["globalslot",3],["globalslot",3]],["bool",0]],[[["globalslotjson",3],["globalslotjson",3]],["bool",0]],[[["globalslot",3],["formatter",3]],["result",6]],[[["globalslotjson",3],["formatter",3]],["result",6]],[[["globalslotjson",3]],["globalslot",3]],[[]],[[]],[[["globalslot",3]],["globalslotjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["globalslot",3]]]]]]]]]],["globalslotjson",3]],[[["versioned",3,[["globalslot",3]]]],["globalslotjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["globalslot",3]]]]]]]],["globalslotjson",3]],[[["versioned",3,[["versioned",3,[["globalslot",3]]]]]],["globalslotjson",3]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["globalslot",3],["globalslot",3]],["bool",0]],[[["globalslotjson",3],["globalslotjson",3]],["bool",0]],[[["globalslot",3]],["result",4]],[[["globalslotjson",3]],["result",4]],null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["openingproof",3]],["openingproof",3]],[[["openingproofjson",3]],["openingproofjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["openingproof",3]]]],[[],["result",4,[["openingproofjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["openingproof",3],["openingproof",3]],["bool",0]],[[["openingproofjson",3],["openingproofjson",3]],["bool",0]],[[["openingproof",3],["formatter",3]],["result",6]],[[["openingproofjson",3],["formatter",3]],["result",6]],[[]],[[["openingproofjson",3]],["openingproof",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["openingproof",3]]]]]]]]]],["openingproofjson",3]],[[["versioned",3,[["versioned",3,[["openingproof",3]]]]]],["openingproofjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["openingproof",3]]]]]]]],["openingproofjson",3]],[[]],[[["openingproof",3]],["openingproofjson",3]],[[["versioned",3,[["openingproof",3]]]],["openingproofjson",3]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["openingproof",3],["openingproof",3]],["bool",0]],[[["openingproofjson",3],["openingproofjson",3]],["bool",0]],[[["openingproof",3]],["result",4]],[[["openingproofjson",3]],["result",4]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["proofevaluations",3]],["proofevaluations",3]],[[["proofevaluationsjson",3]],["proofevaluationsjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["proofevaluations",3]]]],[[],["result",4,[["proofevaluationsjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["proofevaluations",3],["proofevaluations",3]],["bool",0]],[[["proofevaluationsjson",3],["proofevaluationsjson",3]],["bool",0]],null,null,[[["proofevaluations",3],["formatter",3]],["result",6]],[[["proofevaluationsjson",3],["formatter",3]],["result",6]],[[]],[[["proofevaluationsjson",3]],["proofevaluations",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]]]]]],["proofevaluationsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]]]],["proofevaluationsjson",3]],[[["versioned",3,[["versioned",3,[["proofevaluations",3]]]]]],["proofevaluationsjson",3]],[[["versioned",3,[["proofevaluations",3]]]],["proofevaluationsjson",3]],[[["proofevaluations",3]],["proofevaluationsjson",3]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["proofevaluations",3],["proofevaluations",3]],["bool",0]],[[["proofevaluationsjson",3],["proofevaluationsjson",3]],["bool",0]],null,null,null,null,[[["proofevaluations",3]],["result",4]],[[["proofevaluationsjson",3]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["proofmessages",3]],["proofmessages",3]],[[["proofmessagesjson",3]],["proofmessagesjson",3]],[[["proofmessagewithoutdegreeboundlist",3]],["proofmessagewithoutdegreeboundlist",3]],[[["proofmessagewithoutdegreeboundlistjson",3]],["proofmessagewithoutdegreeboundlistjson",3]],[[["proofmessagewithdegreebound",3]],["proofmessagewithdegreebound",3]],[[["proofmessagewithdegreeboundjson",3]],["proofmessagewithdegreeboundjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["proofmessages",3]]]],[[],["result",4,[["proofmessagesjson",3]]]],[[],["result",4,[["proofmessagewithoutdegreeboundlist",3]]]],[[],["result",4,[["proofmessagewithoutdegreeboundlistjson",3]]]],[[],["result",4,[["proofmessagewithdegreebound",3]]]],[[],["result",4,[["proofmessagewithdegreeboundjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["proofmessages",3],["proofmessages",3]],["bool",0]],[[["proofmessagesjson",3],["proofmessagesjson",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlist",3],["proofmessagewithoutdegreeboundlist",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlistjson",3],["proofmessagewithoutdegreeboundlistjson",3]],["bool",0]],[[["proofmessagewithdegreebound",3],["proofmessagewithdegreebound",3]],["bool",0]],[[["proofmessagewithdegreeboundjson",3],["proofmessagewithdegreeboundjson",3]],["bool",0]],[[["proofmessages",3],["formatter",3]],["result",6]],[[["proofmessagesjson",3],["formatter",3]],["result",6]],[[["proofmessagewithoutdegreeboundlist",3],["formatter",3]],["result",6]],[[["proofmessagewithoutdegreeboundlistjson",3],["formatter",3]],["result",6]],[[["proofmessagewithdegreebound",3],["formatter",3]],["result",6]],[[["proofmessagewithdegreeboundjson",3],["formatter",3]],["result",6]],[[]],[[["proofmessagesjson",3]],["proofmessages",3]],[[["proofmessages",3]],["proofmessagesjson",3]],[[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]],["proofmessagesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]]]]]],["proofmessagesjson",3]],[[]],[[["versioned",3,[["proofmessages",3]]]],["proofmessagesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessages",3]]]]]]]],["proofmessagesjson",3]],[[["proofmessagewithoutdegreeboundlistjson",3]],["proofmessagewithoutdegreeboundlist",3]],[[]],[[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]],["proofmessagewithoutdegreeboundlistjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]]]]]],["proofmessagewithoutdegreeboundlistjson",3]],[[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]],["proofmessagewithoutdegreeboundlistjson",3]],[[["proofmessagewithoutdegreeboundlist",3]],["proofmessagewithoutdegreeboundlistjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithoutdegreeboundlist",3]]]]]]]],["proofmessagewithoutdegreeboundlistjson",3]],[[]],[[["proofmessagewithdegreeboundjson",3]],["proofmessagewithdegreebound",3]],[[]],[[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]],["proofmessagewithdegreeboundjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]]]],["proofmessagewithdegreeboundjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofmessagewithdegreebound",3]]]]]]]]]],["proofmessagewithdegreeboundjson",3]],[[["versioned",3,[["proofmessagewithdegreebound",3]]]],["proofmessagewithdegreeboundjson",3]],[[["proofmessagewithdegreebound",3]],["proofmessagewithdegreeboundjson",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["proofmessages",3],["proofmessages",3]],["bool",0]],[[["proofmessagesjson",3],["proofmessagesjson",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlist",3],["proofmessagewithoutdegreeboundlist",3]],["bool",0]],[[["proofmessagewithoutdegreeboundlistjson",3],["proofmessagewithoutdegreeboundlistjson",3]],["bool",0]],[[["proofmessagewithdegreebound",3],["proofmessagewithdegreebound",3]],["bool",0]],[[["proofmessagewithdegreeboundjson",3],["proofmessagewithdegreeboundjson",3]],["bool",0]],null,null,null,null,[[["proofmessages",3]],["result",4]],[[["proofmessagesjson",3]],["result",4]],[[["proofmessagewithoutdegreeboundlist",3]],["result",4]],[[["proofmessagewithoutdegreeboundlistjson",3]],["result",4]],[[["proofmessagewithdegreebound",3]],["result",4]],[[["proofmessagewithdegreeboundjson",3]],["result",4]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolconstants",3]],["protocolconstants",3]],[[["protocolconstantsjson",3]],["protocolconstantsjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["protocolconstants",3]]]],[[],["result",4,[["protocolconstantsjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["protocolconstants",3],["protocolconstants",3]],["bool",0]],[[["protocolconstantsjson",3],["protocolconstantsjson",3]],["bool",0]],[[["protocolconstants",3],["formatter",3]],["result",6]],[[["protocolconstantsjson",3],["formatter",3]],["result",6]],[[["protocolconstantsjson",3]],["protocolconstants",3]],[[]],[[]],[[["protocolconstants",3]],["protocolconstantsjson",3]],[[["versioned",3,[["protocolconstants",3]]]],["protocolconstantsjson",3]],[[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]],["protocolconstantsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]]]],["protocolconstantsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolconstants",3]]]]]]]]]],["protocolconstantsjson",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["protocolconstants",3],["protocolconstants",3]],["bool",0]],[[["protocolconstantsjson",3],["protocolconstantsjson",3]],["bool",0]],[[["protocolconstants",3]],["result",4]],[[["protocolconstantsjson",3]],["result",4]],null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolstate",3]],["protocolstate",3]],[[["protocolstatejson",3]],["protocolstatejson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["protocolstate",3]]]],[[],["result",4,[["protocolstatejson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["protocolstate",3],["protocolstate",3]],["bool",0]],[[["protocolstatejson",3],["protocolstatejson",3]],["bool",0]],[[["protocolstate",3],["formatter",3]],["result",6]],[[["protocolstatejson",3],["formatter",3]],["result",6]],[[]],[[["protocolstatejson",3]],["protocolstate",3]],[[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]],["protocolstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]]]],["protocolstatejson",3]],[[["protocolstate",3]],["protocolstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstate",3]]]]]]]]]],["protocolstatejson",3]],[[["versioned",3,[["protocolstate",3]]]],["protocolstatejson",3]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["protocolstate",3],["protocolstate",3]],["bool",0]],[[["protocolstatejson",3],["protocolstatejson",3]],["bool",0]],null,null,[[["protocolstate",3]],["result",4]],[[["protocolstatejson",3]],["result",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolstatebody",3]],["protocolstatebody",3]],[[["protocolstatebodyjson",3]],["protocolstatebodyjson",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["protocolstatebody",3]]]],[[],["result",4,[["protocolstatebodyjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["protocolstatebody",3],["protocolstatebody",3]],["bool",0]],[[["protocolstatebodyjson",3],["protocolstatebodyjson",3]],["bool",0]],[[["protocolstatebody",3],["formatter",3]],["result",6]],[[["protocolstatebodyjson",3],["formatter",3]],["result",6]],[[["protocolstatebodyjson",3]],["protocolstatebody",3]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]]]]]],["protocolstatebodyjson",3]],[[["protocolstatebody",3]],["protocolstatebodyjson",3]],[[["versioned",3,[["protocolstatebody",3]]]],["protocolstatebodyjson",3]],[[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]],["protocolstatebodyjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstatebody",3]]]]]]]],["protocolstatebodyjson",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["protocolstatebody",3],["protocolstatebody",3]],["bool",0]],[[["protocolstatebodyjson",3],["protocolstatebodyjson",3]],["bool",0]],[[["protocolstatebody",3]],["result",4]],[[["protocolstatebodyjson",3]],["result",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,[[["protocolstateproof",3]],["protocolstateproof",3]],[[["protocolstateproofjson",3]],["protocolstateproofjson",3]],[[["protocolstateproofbase64json",3]],["protocolstateproofbase64json",3]],[[["proofstatement",3]],["proofstatement",3]],[[["proofstatementjson",3]],["proofstatementjson",3]],[[["proofstate",3]],["proofstate",3]],[[["proofstatejson",3]],["proofstatejson",3]],[[["proofstatedeferredvalues",3]],["proofstatedeferredvalues",3]],[[["proofstatedeferredvaluesjson",3]],["proofstatedeferredvaluesjson",3]],[[["plonk",3]],["plonk",3]],[[["plonkjson",3]],["plonkjson",3]],[[["shiftedvalue",4]],["shiftedvalue",4]],[[["shiftedvaluejson",4]],["shiftedvaluejson",4]],[[["spongedigestbeforeevaluations",3]],["spongedigestbeforeevaluations",3]],[[["spongedigestbeforeevaluationsjson",3]],["spongedigestbeforeevaluationsjson",3]],[[["proofstatepairingbased",3]],["proofstatepairingbased",3]],[[["proofstatepairingbasedjson",3]],["proofstatepairingbasedjson",3]],[[["pairingbased",3]],["pairingbased",3]],[[["pairingbasedjson",3]],["pairingbasedjson",3]],[[["prevevals",3]],["prevevals",3]],[[["prevevalsjson",3]],["prevevalsjson",3]],[[["prevxhat",3]],["prevxhat",3]],[[["prevxhatjson",3]],["prevxhatjson",3]],[[["proof",3]],["proof",3]],[[["proofjson",3]],["proofjson",3]],[[["proofopeningsevals",3]],["proofopeningsevals",3]],[[["proofopeningsevalsjson",3]],["proofopeningsevalsjson",3]],[[["proofopenings",3]],["proofopenings",3]],[[["proofopeningsjson",3]],["proofopeningsjsonnull,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["protocolstateproof",3]]]],[[],["result",4,[["protocolstateproofjson",3]]]],[[],["result",4,[["protocolstateproofbase64json",3]]]],[[],["result",4,[["proofstatement",3]]]],[[],["result",4,[["proofstatementjson",3]]]],[[],["result",4,[["proofstate",3]]]],[[],["result",4,[["proofstatejson",3]]]],[[],["result",4,[["proofstatedeferredvalues",3]]]],[[],["result",4,[["proofstatedeferredvaluesjson",3]]]],[[],["result",4,[["plonk",3]]]],[[],["result",4,[["plonkjson",3]]]],[[],["result",4,[["shiftedvalue",4]]]],[[],["result",4,[["shiftedvaluejson",4]]]],[[],["result",4,[["spongedigestbeforeevaluations",3]]]],[[],["result",4,[["spongedigestbeforeevaluationsjson",3]]]],[[],["result",4,[["proofstatepairingbased",3]]]],[[],["result",4,[["proofstatepairingbasedjson",3]]]],[[],["result",4,[["pairingbased",3]]]],[[],["result",4,[["pairingbasedjson",3]]]],[[],["result",4,[["prevevals",3]]]],[[],["result",4,[["prevevalsjson",3]]]],[[],["result",4,[["prevxhat",3]]]],[[],["result",4,[["prevxhatjson",3]]]],[[],["result",4,[["proof",3]]]],[[],["result",4,[["proofjson",3]]]],[[],["result",4,[["proofopeningsevals",3]]]],[[],["result",4,[["proofopeningsevalsjson",3]]]],[[],["result",4,[["proofopenings",3]]]],[[],["result",4,[["proofopeningsjson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["protocolstateproof",3],["protocolstateproof",3]],["bool",0]],[[["protocolstateproofjson",3],["protocolstateproofjson",3]],["bool",0]],[[["protocolstateproofbase64json",3],["protocolstateproofbase64json",3]],["bool",0]],[[["proofstatement",3],["proofstatement",3]],["bool",0]],[[["proofstatementjson",3],["proofstatementjson",3]],["bool",0]],[[["proofstate",3],["proofstate",3]],["bool",0]],[[["proofstatejson",3],["proofstatejson",3]],["bool",0]],[[["proofstatedeferredvalues",3],["proofstatedeferredvalues",3]],["bool",0]],[[["proofstatedeferredvaluesjson",3],["proofstatedeferredvaluesjson",3]],["bool",0]],[[["plonk",3],["plonk",3]],["bool",0]],[[["plonkjson",3],["plonkjson",3]],["bool",0]],[[["shiftedvalue",4],["shiftedvalue",4]],["bool",0]],[[["shiftedvaluejson",4],["shiftedvaluejson",4]],["bool",0]],[[["spongedigestbeforeevaluations",3],["spongedigestbeforeevaluations",3]],["bool",0]],[[["spongedigestbeforeevaluationsjson",3],["spongedigestbeforeevaluationsjson",3]],["bool",0]],[[["proofstatepairingbased",3],["proofstatepairingbased",3]],["bool",0]],[[["proofstatepairingbasedjson",3],["proofstatepairingbasedjson",3]],["bool",0]],[[["pairingbased",3],["pairingbased",3]],["bool",0]],[[["pairingbasedjson",3],["pairingbasedjson",3]],["bool",0]],[[["prevevals",3],["prevevals",3]],["bool",0]],[[["prevevalsjson",3],["prevevalsjson",3]],["bool",0]],[[["prevxhat",3],["prevxhat",3]],["bool",0]],[[["prevxhatjson",3],["prevxhatjson",3]],["bool",0]],[[["proof",3],["proof",3]],["bool",0]],[[["proofjson",3],["proofjson",3]],["bool",0]],[[["proofopeningsevals",3],["proofopeningsevals",3]],["bool",0]],[[["proofopeningsevalsjson",3],["proofopeningsevalsjson",3]],["bool",0]],[[["proofopenings",3],["proofopenings",3]],["bool",0]],[[["proofopeningsjson",3],["proofopeningsjson",3]],["bool",0]],null,null,[[["protocolstateproof",3],["formatter",3]],["result",6]],[[["protocolstateproofjson",3],["formatter",3]],["result",6]],[[["protocolstateproofbase64json",3],["formatter",3]],["result",6]],[[["proofstatement",3],["formatter",3]],["result",6]],[[["proofstatementjson",3],["formatter",3]],["result",6]],[[["proofstate",3],["formatter",3]],["result",6]],[[["proofstatejson",3],["formatter",3]],["result",6]],[[["proofstatedeferredvalues",3],["formatter",3]],["result",6]],[[["proofstatedeferredvaluesjson",3],["formatter",3]],["result",6]],[[["plonk",3],["formatter",3]],["result",6]],[[["plonkjson",3],["formatter",3]],["result",6]],[[["shiftedvalue",4],["formatter",3]],["result",6]],[[["shiftedvaluejson",4],["formatter",3]],["result",6]],[[["spongedigestbeforeevaluations",3],["formatter",3]],["result",6]],[[["spongedigestbeforeevaluationsjson",3],["formatter",3]],["result",6]],[[["proofstatepairingbased",3],["formatter",3]],["result",6]],[[["proofstatepairingbasedjson",3],["formatter",3]],["result",6]],[[["pairingbased",3],["formatter",3]],["result",6]],[[["pairingbasedjson",3],["formatter",3]],["result",6]],[[["prevevals",3],["formatter",3]],["result",6]],[[["prevevalsjson",3],["formatter",3]],["result",6]],[[["prevxhat",3],["formatter",3]],["result",6]],[[["prevxhatjson",3],["formatter",3]],["result",6]],[[["proof",3],["formatter",3]],["result",6]],[[["proofjson",3],["formatter",3]],["result",6]],[[["proofopeningsevals",3],["formatter",3]],["result",6]],[[["proofopeningsevalsjson",3],["formatter",3]],["result",6]],[[["proofopenings",3],["formatter",3]],["result",6]],[[["proofopeningsjson",3],["formatter",3]],["result",6]],[[["protocolstateproofbase64json",3]],["protocolstateproofv1",6]],[[["protocolstateproofjson",3]],["protocolstateproof",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]]]]]],["protocolstateproofjson",3]],[[["protocolstateproof",3]],["protocolstateproofjson",3]],[[["versioned",3,[["protocolstateproof",3]]]],["protocolstateproofjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]]]],["protocolstateproofjson",3]],[[["versioned",3,[["versioned",3,[["protocolstateproof",3]]]]]],["protocolstateproofjson",3]],[[["protocolstateproofv1",6]],["protocolstateproofbase64json",3]],[[]],[[]],[[["proofstatementjson",3]],["proofstatement",3]],[[["versioned",3,[["proofstatement",3]]]],["proofstatementjson",3]],[[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]],["proofstatementjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]]]],["proofstatementjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatement",3]]]]]]]]]],["proofstatementjson",3]],[[["proofstatement",3]],["proofstatementjson",3]],[[]],[[]],[[["proofstatejson",3]],["proofstate",3]],[[["versioned",3,[["versioned",3,[["proofstate",3]]]]]],["proofstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstate",3]]]]]]]]]],["proofstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstate",3]]]]]]]],["proofstatejson",3]],[[]],[[["versioned",3,[["proofstate",3]]]],["proofstatejson",3]],[[["proofstate",3]],["proofstatejson",3]],[[["proofstatedeferredvaluesjson",3]],["proofstatedeferredvalues",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]]]]]],["proofstatedeferredvaluesjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]]]],["proofstatedeferredvaluesjson",3]],[[["versioned",3,[["versioned",3,[["proofstatedeferredvalues",3]]]]]],["proofstatedeferredvaluesjson",3]],[[["versioned",3,[["proofstatedeferredvalues",3]]]],["proofstatedeferredvaluesjson",3]],[[["proofstatedeferredvalues",3]],["proofstatedeferredvaluesjson",3]],[[]],[[]],[[["plonkjson",3]],["plonk",3]],[[["plonk",3]],["plonkjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["plonk",3]]]]]]]]]],["plonkjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["plonk",3]]]]]]]],["plonkjson",3]],[[["versioned",3,[["versioned",3,[["plonk",3]]]]]],["plonkjson",3]],[[["versioned",3,[["plonk",3]]]],["plonkjson",3]],[[]],[[]],[[["shiftedvaluejson",4]],["shiftedvalue",4]],[[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]],["shiftedvaluejson",4]],[[["versioned",3,[["shiftedvalue",4]]]],["shiftedvaluejson",4]],[[["shiftedvalue",4]],["shiftedvaluejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]]]],["shiftedvaluejson",4]],[[["versioned",3,[["versioned",3,[["shiftedvaluejsonproxy",4]]]]]],["shiftedvaluejson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvaluejsonproxy",4]]]]]]]]]],["shiftedvaluejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvaluejsonproxy",4]]]]]]]],["shiftedvaluejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["shiftedvalue",4]]]]]]]]]],["shiftedvaluejson",4]],[[["versioned",3,[["shiftedvaluejsonproxy",4]]]],["shiftedvaluejson",4]],[[]],[[["spongedigestbeforeevaluationsjson",3]],["spongedigestbeforeevaluations",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]]]]]],["spongedigestbeforeevaluationsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]]]],["spongedigestbeforeevaluationsjson",3]],[[["versioned",3,[["spongedigestbeforeevaluations",3]]]],["spongedigestbeforeevaluationsjson",3]],[[["spongedigestbeforeevaluations",3]],["spongedigestbeforeevaluationsjson",3]],[[]],[[["versioned",3,[["versioned",3,[["spongedigestbeforeevaluations",3]]]]]],["spongedigestbeforeevaluationsjson",3]],[[["proofstatepairingbasedjson",3]],["proofstatepairingbased",3]],[[]],[[]],[[["proofstatepairingbased",3]],["proofstatepairingbasedjson",3]],[[["versioned",3,[["proofstatepairingbased",3]]]],["proofstatepairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]],["proofstatepairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]]]],["proofstatepairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofstatepairingbased",3]]]]]]]]]],["proofstatepairingbasedjson",3]],[[["pairingbasedjson",3]],["pairingbased",3]],[[]],[[["pairingbased",3]],["pairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]]]],["pairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]]]]]],["pairingbasedjson",3]],[[["versioned",3,[["versioned",3,[["pairingbased",3]]]]]],["pairingbasedjson",3]],[[["versioned",3,[["pairingbased",3]]]],["pairingbasedjson",3]],[[]],[[["prevevalsjson",3]],["prevevals",3]],[[]],[[["versioned",3,[["versioned",3,[["prevevals",3]]]]]],["prevevalsjson",3]],[[["versioned",3,[["prevevals",3]]]],["prevevalsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["prevevals",3]]]]]]]],["prevevalsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["prevevals",3]]]]]]]]]],["prevevalsjson",3]],[[]],[[["prevevals",3]],["prevevalsjson",3]],[[]],[[["prevxhatjson",3]],["prevxhat",3]],[[["prevxhat",3]],["prevxhatjson",3]],[[["versioned",3,[["prevxhat",3]]]],["prevxhatjson",3]],[[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]],["prevxhatjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]]]],["prevxhatjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["prevxhat",3]]]]]]]]]],["prevxhatjson",3]],[[["proofjson",3]],["proof",3]],[[]],[[["proof",3]],["proofjson",3]],[[]],[[["versioned",3,[["proof",3]]]],["proofjson",3]],[[["versioned",3,[["versioned",3,[["proof",3]]]]]],["proofjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proof",3]]]]]]]],["proofjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proof",3]]]]]]]]]],["proofjson",3]],[[]],[[["proofopeningsevalsjson",3]],["proofopeningsevals",3]],[[["versioned",3,[["proofopeningsevals",3]]]],["proofopeningsevalsjson",3]],[[["proofopeningsevals",3]],["proofopeningsevalsjson",3]],[[]],[[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]],["proofopeningsevalsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]]]],["proofopeningsevalsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofopeningsevals",3]]]]]]]]]],["proofopeningsevalsjson",3]],[[["proofopeningsjson",3]],["proofopenings",3]],[[]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]]]]]],["proofopeningsjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]]]],["proofopeningsjson",3]],[[["versioned",3,[["versioned",3,[["proofopenings",3]]]]]],["proofopeningsjson",3]],[[["versioned",3,[["proofopenings",3]]]],["proofopeningsjson",3]],[[["proofopenings",3]],["proofopeningsjson",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["protocolstateproof",3],["protocolstateproof",3]],["bool",0]],[[["protocolstateproofjson",3],["protocolstateproofjson",3]],["bool",0]],[[["protocolstateproofbase64json",3],["protocolstateproofbase64json",3]],["bool",0]],[[["proofstatement",3],["proofstatement",3]],["bool",0]],[[["proofstatementjson",3],["proofstatementjson",3]],["bool",0]],[[["proofstate",3],["proofstate",3]],["bool",0]],[[["proofstatejson",3],["proofstatejson",3]],["bool",0]],[[["proofstatedeferredvalues",3],["proofstatedeferredvalues",3]],["bool",0]],[[["proofstatedeferredvaluesjson",3],["proofstatedeferredvaluesjson",3]],["bool",0]],[[["plonk",3],["plonk",3]],["bool",0]],[[["plonkjson",3],["plonkjson",3]],["bool",0]],[[["shiftedvalue",4],["shiftedvalue",4]],["bool",0]],[[["shiftedvaluejson",4],["shiftedvaluejson",4]],["bool",0]],[[["spongedigestbeforeevaluations",3],["spongedigestbeforeevaluations",3]],["bool",0]],[[["spongedigestbeforeevaluationsjson",3],["spongedigestbeforeevaluationsjson",3]],["bool",0]],[[["proofstatepairingbased",3],["proofstatepairingbased",3]],["bool",0]],[[["proofstatepairingbasedjson",3],["proofstatepairingbasedjson",3]],["bool",0]],[[["pairingbased",3],["pairingbased",3]],["bool",0]],[[["pairingbasedjson",3],["pairingbasedjson",3]],["bool",0]],[[["prevevals",3],["prevevals",3]],["bool",0]],[[["prevevalsjson",3],["prevevalsjson",3]],["bool",0]],[[["prevxhat",3],["prevxhat",3]],["bool",0]],[[["prevxhatjson",3],["prevxhatjson",3]],["bool",0]],[[["proof",3],["proof",3]],["bool",0]],[[["proofjson",3],["proofjson",3]],["bool",0]],[[["proofopeningsevals",3],["proofopeningsevals",3]],["bool",0]],[[["proofopeningsevalsjson",3],["proofopeningsevalsjson",3]],["bool",0]],[[["proofopenings",3],["proofopenings",3]],["bool",0]],[[["proofopeningsjson",3],["proofopeningsjson",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["protocolstateproof",3]],["result",4]],[[["protocolstateproofjson",3]],["result",4]],[[["protocolstateproofbase64json",3]],["result",4]],[[["proofstatement",3]],["result",4]],[[["proofstatementjson",3]],["result",4]],[[["proofstate",3]],["result",4]],[[["proofstatejson",3]],["result",4]],[[["proofstatedeferredvalues",3]],["result",4]],[[["proofstatedeferredvaluesjson",3]],["result",4]],[[["plonk",3]],["result",4]],[[["plonkjson",3]],["result",4]],[[["shiftedvalue",4]],["result",4]],[[["shiftedvaluejson",4]],["result",4]],[[["spongedigestbeforeevaluations",3]],["result",4]],[[["spongedigestbeforeevaluationsjson",3]],["result",4]],[[["proofstatepairingbased",3]],["result",4]],[[["proofstatepairingbasedjson",3]],["result",4]],[[["pairingbased",3]],["result",4]],[[["pairingbasedjson",3]],["result",4]],[[["prevevals",3]],["result",4]],[[["prevevalsjson",3]],["result",4]],[[["prevxhat",3]],["result",4]],[[["prevxhatjson",3]],["result",4]],[[["proof",3]],["result",4]],[[["proofjson",3]],["result",4]],[[["proofopeningsevals",3]],["result",4]],[[["proofopeningsevalsjson",3]],["result",4]],[[["proofopenings",3]],["result",4]],[[["proofopeningsjson",3]],["result",4]],null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["protocolversion",3]],["protocolversion",3]],[[["",0],["",0]]],[[],["protocolversion",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["protocolversion",3]]]],[[["usize",0]]],[[["protocolversion",3],["protocolversion",3]],["bool",0]],[[["protocolversion",3],["formatter",3]],["result",6]],[[["protocolversionv1",6]],["protocolversionjson",6]],[[]],[[],["usize",0]],[[]],null,null,[[["protocolversion",3],["protocolversion",3]],["bool",0]],null,[[["protocolversion",3]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compressedcurvepoint",3]],["compressedcurvepoint",3]],[[["publickeyjson",3]],["publickeyjson",3]],[[["publickeyv1",3]],["publickeyv1",3]],[[["publickey2v1",3]],["publickey2v1",3]],[[["signaturev1",3]],["signaturev1",3]],[[["signaturejson",3]],["signaturejson",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["compressedcurvepoint",3]]]],[[],["result",4,[["publickeyjson",3]]]],[[],["result",4,[["publickeyv1",3]]]],[[],["result",4,[["publickey2v1",3]]]],[[],["result",4,[["signaturev1",3]]]],[[],["result",4,[["signaturejson",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["compressedcurvepoint",3],["compressedcurvepoint",3]],["bool",0]],[[["publickeyjson",3],["publickeyjson",3]],["bool",0]],[[["publickeyv1",3],["publickeyv1",3]],["bool",0]],[[["publickey2v1",3],["publickey2v1",3]],["bool",0]],[[["signaturev1",3],["signaturev1",3]],["bool",0]],[[["signaturejson",3],["signaturejson",3]],["bool",0]],[[["compressedcurvepoint",3],["formatter",3]],["result",6]],[[["compressedcurvepoint",3],["formatter",3]],["result",4,[["error",3]]]],[[["publickeyjson",3],["formatter",3]],["result",6]],[[["publickeyv1",3],["formatter",3]],["result",6]],[[["publickey2v1",3],["formatter",3]],["result",6]],[[["signaturev1",3],["formatter",3]],["result",6]],[[["signaturejson",3],["formatter",3]],["result",6]],[[["publickeyjson",3]],["compressedcurvepoint",3]],[[]],[[["compressedpubkey",3]],["compressedcurvepoint",3]],[[["publickeyv1",3]],["publickeyjson",3]],[[["compressedcurvepoint",3]],["publickeyjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["compressedcurvepoint",3]]]]]]]]]],["publickeyjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["compressedcurvepoint",3]]]]]]]],["publickeyjson",3]],[[["versioned",3,[["versioned",3,[["compressedcurvepoint",3]]]]]],["publickeyjson",3]],[[["versioned",3,[["compressedcurvepoint",3]]]],["publickeyjson",3]],[[["publickey2v1",3]],["publickeyjson",3]],[[]],[[["compressedpubkey",3]],["publickeyv1",3]],[[["publickeyjson",3]],["publickeyv1",3]],[[]],[[]],[[["publickeyjson",3]],["publickey2v1",3]],[[["compressedpubkey",3]],["publickey2v1",3]],[[["signature",3]],["signaturev1",3]],[[]],[[["signaturejson",3]],["signaturev1",3]],[[["signaturev1",3]],["signaturejson",3]],[[]],[[["signature",3]],["signaturejson",3]],[[["str",0]],["result",4,[["compressedcurvepoint",3]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["compressedcurvepoint",3],["compressedcurvepoint",3]],["bool",0]],[[["publickeyjson",3],["publickeyjson",3]],["bool",0]],[[["publickeyv1",3],["publickeyv1",3]],["bool",0]],[[["publickey2v1",3],["publickey2v1",3]],["bool",0]],[[["signaturev1",3],["signaturev1",3]],["bool",0]],[[["signaturejson",3],["signaturejson",3]],["bool",0]],[[["compressedcurvepoint",3]],["result",4]],[[["publickeyjson",3]],["result",4]],[[["publickeyv1",3]],["result",4]],[[["publickey2v1",3]],["result",4]],[[["signaturev1",3]],["result",4]],[[["signaturejson",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["str",0]],["result",4,[["compressedcurvepoint",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nulltransactionsnarkwork",3]],["transactionsnarkwork",3]],[[["transactionsnarkworkjson",3]],["transactionsnarkworkjson",3]],[[["oneortwo",4]],["oneortwo",4]],[[["oneortwojson",4]],["oneortwojson",4]],[[["transactionsnark",3]],["transactionsnark",3]],[[["transactionsnarkjson",3]],["transactionsnarkjson",3]],[[["statement",3]],["statement",3]],[[["statementjson",3]],["statementjson",3]],[[["pendingcoinbasestackstate",3]],["pendingcoinbasestackstate",3]],[[["pendingcoinbasestackstatejson",3]],["pendingcoinbasestackstatejson",3]],[[["pendingcoinbase",3]],["pendingcoinbase",3]],[[["pendingcoinbasejson",3]],["pendingcoinbasejson",3]],[[["statestack",3]],["statestack",3]],[[["statestackjson",3]],["statestackjson",3]],[[["feeexcess",3]],["feeexcess",3]],[[["feeexcessjson",3]],["feeexcessjson",3]],[[["feeexcesspair",3]],["feeexcesspair",3]],[[["feeexcesspairjson",3]],["feeexcesspairjson",3]],[[["signed",3]],["signed",3]],[[["signedjson",3]],["signedjson",3]],[[["sgntype",4]],["sgntype",4]],[[["sgntypejsonproxy",4]],["sgntypejsonproxy",4]],[[["sgntypejson",4]],["sgntypejson",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["transactionsnarkwork",3]]]],[[],["result",4,[["transactionsnarkworkjson",3]]]],[[],["result",4,[["oneortwo",4]]]],[[],["result",4,[["oneortwojson",4]]]],[[],["result",4,[["transactionsnark",3]]]],[[],["result",4,[["transactionsnarkjson",3]]]],[[],["result",4,[["statement",3]]]],[[],["result",4,[["statementjson",3]]]],[[],["result",4,[["pendingcoinbasestackstate",3]]]],[[],["result",4,[["pendingcoinbasestackstatejson",3]]]],[[],["result",4,[["pendingcoinbase",3]]]],[[],["result",4,[["pendingcoinbasejson",3]]]],[[],["result",4,[["statestack",3]]]],[[],["result",4,[["statestackjson",3]]]],[[],["result",4,[["feeexcess",3]]]],[[],["result",4,[["feeexcessjson",3]]]],[[],["result",4,[["feeexcesspair",3]]]],[[],["result",4,[["feeexcesspairjson",3]]]],[[],["result",4,[["signed",3]]]],[[],["result",4,[["signedjson",3]]]],[[],["result",4,[["sgntype",4]]]],[[],["result",4,[["sgntypejsonproxy",4]]]],[[],["result",4,[["sgntypejson",4]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["transactionsnarkwork",3],["transactionsnarkwork",3]],["bool",0]],[[["transactionsnarkworkjson",3],["transactionsnarkworkjson",3]],["bool",0]],[[["oneortwo",4],["oneortwo",4]],["bool",0]],[[["oneortwojson",4],["oneortwojson",4]],["bool",0]],[[["transactionsnark",3],["transactionsnark",3]],["bool",0]],[[["transactionsnarkjson",3],["transactionsnarkjson",3]],["bool",0]],[[["statement",3],["statement",3]],["bool",0]],[[["statementjson",3],["statementjson",3]],["bool",0]],[[["pendingcoinbasestackstate",3],["pendingcoinbasestackstate",3]],["bool",0]],[[["pendingcoinbasestackstatejson",3],["pendingcoinbasestackstatejson",3]],["bool",0]],[[["pendingcoinbase",3],["pendingcoinbase",3]],["bool",0]],[[["pendingcoinbasejson",3],["pendingcoinbasejson",3]],["bool",0]],[[["statestack",3],["statestack",3]],["bool",0]],[[["statestackjson",3],["statestackjson",3]],["bool",0]],[[["feeexcess",3],["feeexcess",3]],["bool",0]],[[["feeexcessjson",3],["feeexcessjson",3]],["bool",0]],[[["feeexcesspair",3],["feeexcesspair",3]],["bool",0]],[[["feeexcesspairjson",3],["feeexcesspairjson",3]],["bool",0]],[[["signed",3],["signed",3]],["bool",0]],[[["signedjson",3],["signedjson",3]],["bool",0]],[[["sgntype",4],["sgntype",4]],["bool",0]],[[["sgntypejsonproxy",4],["sgntypejsonproxy",4]],["bool",0]],[[["sgntypejson",4],["sgntypejson",4]],["bool",0]],null,null,null,null,[[["transactionsnarkwork",3],["formatter",3]],["result",6]],[[["transactionsnarkworkjson",3],["formatter",3]],["result",6]],[[["oneortwo",4],["formatter",3]],["result",6]],[[["oneortwojson",4],["formatter",3]],["result",6]],[[["transactionsnark",3],["formatter",3]],["result",6]],[[["transactionsnarkjson",3],["formatter",3]],["result",6]],[[["statement",3],["formatter",3]],["result",6]],[[["statementjson",3],["formatter",3]],["result",6]],[[["pendingcoinbasestackstate",3],["formatter",3]],["result",6]],[[["pendingcoinbasestackstatejson",3],["formatter",3]],["result",6]],[[["pendingcoinbase",3],["formatter",3]],["result",6]],[[["pendingcoinbasejson",3],["formatter",3]],["result",6]],[[["statestack",3],["formatter",3]],["result",6]],[[["statestackjson",3],["formatter",3]],["result",6]],[[["feeexcess",3],["formatter",3]],["result",6]],[[["feeexcessjson",3],["formatter",3]],["result",6]],[[["feeexcesspair",3],["formatter",3]],["result",6]],[[["feeexcesspairjson",3],["formatter",3]],["result",6]],[[["signed",3],["formatter",3]],["result",6]],[[["signedjson",3],["formatter",3]],["result",6]],[[["sgntype",4],["formatter",3]],["result",6]],[[["sgntypejsonproxy",4],["formatter",3]],["result",6]],[[["sgntypejson",4],["formatter",3]],["result",6]],[[]],[[["transactionsnarkworkjson",3]],["transactionsnarkwork",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]]]]]],["transactionsnarkworkjson",3]],[[["transactionsnarkwork",3]],["transactionsnarkworkjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]]]],["transactionsnarkworkjson",3]],[[["versioned",3,[["transactionsnarkwork",3]]]],["transactionsnarkworkjson",3]],[[["versioned",3,[["versioned",3,[["transactionsnarkwork",3]]]]]],["transactionsnarkworkjson",3]],[[]],[[["oneortwojson",4]],["oneortwo",4]],[[["versioned",3,[["oneortwojsonproxy",4]]]],["oneortwojson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]]]],["oneortwojson",4]],[[["versioned",3,[["versioned",3,[["oneortwojsonproxy",4]]]]]],["oneortwojson",4]],[[["oneortwo",4]],["oneortwojson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]]]]]],["oneortwojson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwojsonproxy",4]]]]]]]],["oneortwojson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["oneortwojsonproxy",4]]]]]]]]]],["oneortwojson",4]],[[["versioned",3,[["oneortwo",4]]]],["oneortwojson",4]],[[]],[[["versioned",3,[["versioned",3,[["oneortwo",4]]]]]],["oneortwojson",4]],[[["transactionsnarkjson",3]],["transactionsnark",3]],[[]],[[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]],["transactionsnarkjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]]]]]],["transactionsnarkjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionsnark",3]]]]]]]],["transactionsnarkjson",3]],[[["versioned",3,[["transactionsnark",3]]]],["transactionsnarkjson",3]],[[["transactionsnark",3]],["transactionsnarkjson",3]],[[["statementjson",3]],["statement",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["statement",3]]]]]]]]]],["statementjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["statement",3]]]]]]]],["statementjson",3]],[[["statement",3]],["statementjson",3]],[[["versioned",3,[["statement",3]]]],["statementjson",3]],[[["versioned",3,[["versioned",3,[["statement",3]]]]]],["statementjson",3]],[[]],[[["pendingcoinbasestackstatejson",3]],["pendingcoinbasestackstate",3]],[[]],[[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]],["pendingcoinbasestackstatejson",3]],[[["pendingcoinbasestackstate",3]],["pendingcoinbasestackstatejson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]]]]]],["pendingcoinbasestackstatejson",3]],[[["versioned",3,[["pendingcoinbasestackstate",3]]]],["pendingcoinbasestackstatejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbasestackstate",3]]]]]]]],["pendingcoinbasestackstatejson",3]],[[["pendingcoinbasejson",3]],["pendingcoinbase",3]],[[]],[[["pendingcoinbase",3]],["pendingcoinbasejson",3]],[[]],[[["versioned",3,[["pendingcoinbase",3]]]],["pendingcoinbasejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]]]]]],["pendingcoinbasejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]]]],["pendingcoinbasejson",3]],[[["versioned",3,[["versioned",3,[["pendingcoinbase",3]]]]]],["pendingcoinbasejson",3]],[[]],[[["statestackjson",3]],["statestack",3]],[[["versioned",3,[["versioned",3,[["statestack",3]]]]]],["statestackjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["statestack",3]]]]]]]]]],["statestackjson",3]],[[["statestack",3]],["statestackjson",3]],[[]],[[["versioned",3,[["statestack",3]]]],["statestackjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["statestack",3]]]]]]]],["statestackjson",3]],[[]],[[["feeexcessjson",3]],["feeexcess",3]],[[]],[[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]],["feeexcessjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]]]]]],["feeexcessjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcess",3]]]]]]]],["feeexcessjson",3]],[[["feeexcess",3]],["feeexcessjson",3]],[[["versioned",3,[["feeexcess",3]]]],["feeexcessjson",3]],[[["feeexcesspairjson",3]],["feeexcesspair",3]],[[]],[[["versioned",3,[["feeexcesspair",3]]]],["feeexcesspairjson",3]],[[]],[[["feeexcesspair",3]],["feeexcesspairjson",3]],[[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]],["feeexcesspairjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]]]],["feeexcesspairjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feeexcesspair",3]]]]]]]]]],["feeexcesspairjson",3]],[[]],[[["signedjson",3]],["signed",3]],[[]],[[["signed",3]],["signedjson",3]],[[["versioned",3,[["signed",3]]]],["signedjson",3]],[[["versioned",3,[["versioned",3,[["signed",3]]]]]],["signedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signed",3]]]]]]]],["signedjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signed",3]]]]]]]]]],["signedjson",3]],[[]],[[["sgntypejson",4]],["sgntype",4]],[[["sgntypejson",4]],["sgntypejsonproxy",4]],[[]],[[["versioned",3,[["sgntype",4]]]],["sgntypejson",4]],[[["versioned",3,[["sgntypejsonproxy",4]]]],["sgntypejson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["sgntypejsonproxy",4]]]]]]]]]],["sgntypejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["sgntypejsonproxy",4]]]]]]]],["sgntypejson",4]],[[["sgntype",4]],["sgntypejson",4]],[[["versioned",3,[["versioned",3,[["sgntype",4]]]]]],["sgntypejson",4]],[[["versioned",3,[["versioned",3,[["sgntypejsonproxy",4]]]]]],["sgntypejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["sgntype",4]]]]]]]],["sgntypejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["sgntype",4]]]]]]]]]],["sgntypejson",4]],[[["sgntypejsonproxy",4]],["sgntypejson",4]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["transactionsnarkwork",3],["transactionsnarkwork",3]],["bool",0]],[[["transactionsnarkworkjson",3],["transactionsnarkworkjson",3]],["bool",0]],[[["oneortwo",4],["oneortwo",4]],["bool",0]],[[["oneortwojson",4],["oneortwojson",4]],["bool",0]],[[["transactionsnark",3],["transactionsnark",3]],["bool",0]],[[["transactionsnarkjson",3],["transactionsnarkjson",3]],["bool",0]],[[["statement",3],["statement",3]],["bool",0]],[[["statementjson",3],["statementjson",3]],["bool",0]],[[["pendingcoinbasestackstate",3],["pendingcoinbasestackstate",3]],["bool",0]],[[["pendingcoinbasestackstatejson",3],["pendingcoinbasestackstatejson",3]],["bool",0]],[[["pendingcoinbase",3],["pendingcoinbase",3]],["bool",0]],[[["pendingcoinbasejson",3],["pendingcoinbasejson",3]],["bool",0]],[[["statestack",3],["statestack",3]],["bool",0]],[[["statestackjson",3],["statestackjson",3]],["bool",0]],[[["feeexcess",3],["feeexcess",3]],["bool",0]],[[["feeexcessjson",3],["feeexcessjson",3]],["bool",0]],[[["feeexcesspair",3],["feeexcesspair",3]],["bool",0]],[[["feeexcesspairjson",3],["feeexcesspairjson",3]],["bool",0]],[[["signed",3],["signed",3]],["bool",0]],[[["signedjson",3],["signedjson",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,[[["transactionsnarkwork",3]],["result",4]],[[["transactionsnarkworkjson",3]],["result",4]],[[["oneortwo",4]],["result",4]],[[["oneortwojson",4]],["result",4]],[[["transactionsnark",3]],["result",4]],[[["transactionsnarkjson",3]],["result",4]],[[["statement",3]],["result",4]],[[["statementjson",3]],["result",4]],[[["pendingcoinbasestackstate",3]],["result",4]],[[["pendingcoinbasestackstatejson",3]],["result",4]],[[["pendingcoinbase",3]],["result",4]],[[["pendingcoinbasejson",3]],["result",4]],[[["statestack",3]],["result",4]],[[["statestackjson",3]],["result",4]],[[["feeexcess",3]],["result",4]],[[["feeexcessjson",3]],["result",4]],[[["feeexcesspair",3]],["result",4]],[[["feeexcesspairjson",3]],["result",4]],[[["signed",3]],["result",4]],[[["signedjson",3]],["result",4]],[[["sgntype",4]],["result",4]],[[["sgntypejsonproxy",4]],["result",4]],[[["sgntypejson",4]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullstagedledgerdiff",3]],["stagedledgerdiff",3]],[[["stagedledgerdiffjson",3]],["stagedledgerdiffjson",3]],[[["stagedledgerdifftuple",3]],["stagedledgerdifftuple",3]],[[["stagedledgerdifftuplejson",3]],["stagedledgerdifftuplejson",3]],[[["stagedledgerprediff",3]],["stagedledgerprediff",3]],[[["stagedledgerprediffjson",3]],["stagedledgerprediffjson",3]],[[["usercommandwithstatus",3]],["usercommandwithstatus",3]],[[["usercommandwithstatusjson",3]],["usercommandwithstatusjson",3]],[[["usercommand",4]],["usercommand",4]],[[["usercommandjson",4]],["usercommandjson",4]],[[["signedcommand",3]],["signedcommand",3]],[[["signedcommandjson",3]],["signedcommandjson",3]],[[["signedcommandpayload",3]],["signedcommandpayload",3]],[[["signedcommandpayloadjson",3]],["signedcommandpayloadjson",3]],[[["signedcommandpayloadcommon",3]],["signedcommandpayloadcommon",3]],[[["signedcommandpayloadcommonjson",3]],["signedcommandpayloadcommonjson",3]],[[["signedcommandpayloadbody",4]],["signedcommandpayloadbody",4]],[[["signedcommandpayloadbodyjson",4]],["signedcommandpayloadbodyjson",4]],[[["paymentpayload",3]],["paymentpayload",3]],[[["paymentpayloadjson",3]],["paymentpayloadjson",3]],[[["stakedelegation",4]],["stakedelegation",4]],[[["stakedelegationjson",4]],["stakedelegationjson",4]],[[["signedcommandmemo",3]],["signedcommandmemo",3]],[[["signedcommandmemojson",3]],["signedcommandmemojson",3]],[[["transactionstatus",4]],["transactionstatus",4]],[[["transactionstatusjson",4]],["transactionstatusjson",4]],[[["transactionstatusauxiliarydata",3]],["transactionstatusauxiliarydata",3]],[[["transactionstatusauxiliarydatajson",3]],["transactionstatusauxiliarydatajson",3]],[[["transactionstatusbalancedata",3]],["transactionstatusbalancedata",3]],[[["transactionstatusbalancedatajson",3]],["transactionstatusbalancedatajson",3]],[[["coinbase",4]],["coinbase",4]],[[["coinbasejson",4]],["coinbasejson",4]],[[["coinbasefeetransfer",3]],["coinbasefeetransfer",3]],[[["coinbasefeetransferjson",3]],["coinbasefeetransferjson",3]],[[["internalcommandbalancedata",4]],["internalcommandbalancedata",4]],[[["internalcommandbalancedatajson",4]],["internalcommandbalancedatajson",4]],[[["coinbasebalancedata",3]],["coinbasebalancedata",3]],[[["coinbasebalancedatajson",3]],["coinbasebalancedatajson",3]],[[["feetransferbalancedata",3]],["feetransferbalancedata",3]],[[["feetransferbalancedatajson",3]],["feetransferbalancedatajsonnull,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["coinbase",4]],[[],["coinbasejson",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["stagedledgerdiff",3]]]],[[],["result",4,[["stagedledgerdiffjson",3]]]],[[],["result",4,[["stagedledgerdifftuple",3]]]],[[],["result",4,[["stagedledgerdifftuplejson",3]]]],[[],["result",4,[["stagedledgerprediff",3]]]],[[],["result",4,[["stagedledgerprediffjson",3]]]],[[],["result",4,[["usercommandwithstatus",3]]]],[[],["result",4,[["usercommandwithstatusjson",3]]]],[[],["result",4,[["usercommand",4]]]],[[],["result",4,[["usercommandjson",4]]]],[[],["result",4,[["signedcommand",3]]]],[[],["result",4,[["signedcommandjson",3]]]],[[],["result",4,[["signedcommandpayload",3]]]],[[],["result",4,[["signedcommandpayloadjson",3]]]],[[],["result",4,[["signedcommandpayloadcommon",3]]]],[[],["result",4,[["signedcommandpayloadcommonjson",3]]]],[[],["result",4,[["signedcommandpayloadbody",4]]]],[[],["result",4,[["signedcommandpayloadbodyjson",4]]]],[[],["result",4,[["paymentpayload",3]]]],[[],["result",4,[["paymentpayloadjson",3]]]],[[],["result",4,[["stakedelegation",4]]]],[[],["result",4,[["stakedelegationjson",4]]]],[[],["result",4,[["signedcommandmemo",3]]]],[[],["result",4,[["signedcommandmemojson",3]]]],[[],["result",4,[["transactionstatus",4]]]],[[],["result",4,[["transactionstatusjson",4]]]],[[],["result",4,[["transactionstatusauxiliarydata",3]]]],[[],["result",4,[["transactionstatusauxiliarydatajson",3]]]],[[],["result",4,[["transactionstatusbalancedata",3]]]],[[],["result",4,[["transactionstatusbalancedatajson",3]]]],[[],["result",4,[["coinbase",4]]]],[[],["result",4,[["coinbasejson",4]]]],[[],["result",4,[["coinbasefeetransfer",3]]]],[[],["result",4,[["coinbasefeetransferjson",3]]]],[[],["result",4,[["internalcommandbalancedata",4]]]],[[],["result",4,[["internalcommandbalancedatajson",4]]]],[[],["result",4,[["coinbasebalancedata",3]]]],[[],["result",4,[["coinbasebalancedatajson",3]]]],[[],["result",4,[["feetransferbalancedata",3]]]],[[],["result",4,[["feetransferbalancedatajson",3]]]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["stagedledgerdiff",3],["stagedledgerdiff",3]],["bool",0]],[[["stagedledgerdiffjson",3],["stagedledgerdiffjson",3]],["bool",0]],[[["stagedledgerdifftuple",3],["stagedledgerdifftuple",3]],["bool",0]],[[["stagedledgerdifftuplejson",3],["stagedledgerdifftuplejson",3]],["bool",0]],[[["stagedledgerprediff",3],["stagedledgerprediff",3]],["bool",0]],[[["stagedledgerprediffjson",3],["stagedledgerprediffjson",3]],["bool",0]],[[["usercommandwithstatus",3],["usercommandwithstatus",3]],["bool",0]],[[["usercommandwithstatusjson",3],["usercommandwithstatusjson",3]],["bool",0]],[[["usercommand",4],["usercommand",4]],["bool",0]],[[["usercommandjson",4],["usercommandjson",4]],["bool",0]],[[["signedcommand",3],["signedcommand",3]],["bool",0]],[[["signedcommandjson",3],["signedcommandjson",3]],["bool",0]],[[["signedcommandpayload",3],["signedcommandpayload",3]],["bool",0]],[[["signedcommandpayloadjson",3],["signedcommandpayloadjson",3]],["bool",0]],[[["signedcommandpayloadcommon",3],["signedcommandpayloadcommon",3]],["bool",0]],[[["signedcommandpayloadcommonjson",3],["signedcommandpayloadcommonjson",3]],["bool",0]],[[["signedcommandpayloadbody",4],["signedcommandpayloadbody",4]],["bool",0]],[[["signedcommandpayloadbodyjson",4],["signedcommandpayloadbodyjson",4]],["bool",0]],[[["paymentpayload",3],["paymentpayload",3]],["bool",0]],[[["paymentpayloadjson",3],["paymentpayloadjson",3]],["bool",0]],[[["stakedelegation",4],["stakedelegation",4]],["bool",0]],[[["stakedelegationjson",4],["stakedelegationjson",4]],["bool",0]],[[["signedcommandmemo",3],["signedcommandmemo",3]],["bool",0]],[[["signedcommandmemojson",3],["signedcommandmemojson",3]],["bool",0]],[[["transactionstatus",4],["transactionstatus",4]],["bool",0]],[[["transactionstatusjson",4],["transactionstatusjson",4]],["bool",0]],[[["transactionstatusauxiliarydata",3],["transactionstatusauxiliarydata",3]],["bool",0]],[[["transactionstatusauxiliarydatajson",3],["transactionstatusauxiliarydatajson",3]],["bool",0]],[[["transactionstatusbalancedata",3],["transactionstatusbalancedata",3]],["bool",0]],[[["transactionstatusbalancedatajson",3],["transactionstatusbalancedatajson",3]],["bool",0]],[[["coinbase",4],["coinbase",4]],["bool",0]],[[["coinbasejson",4],["coinbasejson",4]],["bool",0]],[[["coinbasefeetransfer",3],["coinbasefeetransfer",3]],["bool",0]],[[["coinbasefeetransferjson",3],["coinbasefeetransferjson",3]],["bool",0]],[[["internalcommandbalancedata",4],["internalcommandbalancedata",4]],["bool",0]],[[["internalcommandbalancedatajson",4],["internalcommandbalancedatajson",4]],["bool",0]],[[["coinbasebalancedata",3],["coinbasebalancedata",3]],["bool",0]],[[["coinbasebalancedatajson",3],["coinbasebalancedatajson",3]],["bool",0]],[[["feetransferbalancedata",3],["feetransferbalancedata",3]],["bool",0]],[[["feetransferbalancedatajson",3],["feetransferbalancedatajson",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["stagedledgerdiff",3],["formatter",3]],["result",6]],[[["stagedledgerdiffjson",3],["formatter",3]],["result",6]],[[["stagedledgerdifftuple",3],["formatter",3]],["result",6]],[[["stagedledgerdifftuplejson",3],["formatter",3]],["result",6]],[[["stagedledgerprediff",3],["formatter",3]],["result",6]],[[["stagedledgerprediffjson",3],["formatter",3]],["result",6]],[[["usercommandwithstatus",3],["formatter",3]],["result",6]],[[["usercommandwithstatusjson",3],["formatter",3]],["result",6]],[[["usercommand",4],["formatter",3]],["result",6]],[[["usercommandjson",4],["formatter",3]],["result",6]],[[["signedcommand",3],["formatter",3]],["result",6]],[[["signedcommandjson",3],["formatter",3]],["result",6]],[[["signedcommandpayload",3],["formatter",3]],["result",6]],[[["signedcommandpayloadjson",3],["formatter",3]],["result",6]],[[["signedcommandpayloadcommon",3],["formatter",3]],["result",6]],[[["signedcommandpayloadcommonjson",3],["formatter",3]],["result",6]],[[["signedcommandpayloadbody",4],["formatter",3]],["result",6]],[[["signedcommandpayloadbodyjson",4],["formatter",3]],["result",6]],[[["paymentpayload",3],["formatter",3]],["result",6]],[[["paymentpayloadjson",3],["formatter",3]],["result",6]],[[["stakedelegation",4],["formatter",3]],["result",6]],[[["stakedelegationjson",4],["formatter",3]],["result",6]],[[["signedcommandmemo",3],["formatter",3]],["result",6]],[[["signedcommandmemojson",3],["formatter",3]],["result",6]],[[["transactionstatus",4],["formatter",3]],["result",6]],[[["transactionstatusjson",4],["formatter",3]],["result",6]],[[["transactionstatusauxiliarydata",3],["formatter",3]],["result",6]],[[["transactionstatusauxiliarydatajson",3],["formatter",3]],["result",6]],[[["transactionstatusbalancedata",3],["formatter",3]],["result",6]],[[["transactionstatusbalancedatajson",3],["formatter",3]],["result",6]],[[["coinbase",4],["formatter",3]],["result",6]],[[["coinbasejson",4],["formatter",3]],["result",6]],[[["coinbasefeetransfer",3],["formatter",3]],["result",6]],[[["coinbasefeetransferjson",3],["formatter",3]],["result",6]],[[["internalcommandbalancedata",4],["formatter",3]],["result",6]],[[["internalcommandbalancedatajson",4],["formatter",3]],["result",6]],[[["coinbasebalancedata",3],["formatter",3]],["result",6]],[[["coinbasebalancedatajson",3],["formatter",3]],["result",6]],[[["feetransferbalancedata",3],["formatter",3]],["result",6]],[[["feetransferbalancedatajson",3],["formatter",3]],["result",6]],[[["stagedledgerdiffjson",3]],["stagedledgerdiff",3]],[[]],[[["stagedledgerdiff",3]],["stagedledgerdiffjson",3]],[[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]],["stagedledgerdiffjson",3]],[[["versioned",3,[["stagedledgerdiff",3]]]],["stagedledgerdiffjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]]]],["stagedledgerdiffjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdiff",3]]]]]]]]]],["stagedledgerdiffjson",3]],[[["stagedledgerdifftuplejson",3]],["stagedledgerdifftuple",3]],[[]],[[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]],["stagedledgerdifftuplejson",3]],[[["stagedledgerdifftuple",3]],["stagedledgerdifftuplejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]]]]]],["stagedledgerdifftuplejson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerdifftuple",3]]]]]]]],["stagedledgerdifftuplejson",3]],[[]],[[["versioned",3,[["stagedledgerdifftuple",3]]]],["stagedledgerdifftuplejson",3]],[[["stagedledgerprediffjson",3]],["stagedledgerprediff",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]]]],["stagedledgerprediffjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]]]]]],["stagedledgerprediffjson",3]],[[]],[[["stagedledgerprediff",3]],["stagedledgerprediffjson",3]],[[["versioned",3,[["stagedledgerprediff",3]]]],["stagedledgerprediffjson",3]],[[["versioned",3,[["versioned",3,[["stagedledgerprediff",3]]]]]],["stagedledgerprediffjson",3]],[[["usercommandwithstatusjson",3]],["usercommandwithstatus",3]],[[]],[[["usercommandwithstatus",3]],["usercommandwithstatusjson",3]],[[["versioned",3,[["usercommandwithstatus",3]]]],["usercommandwithstatusjson",3]],[[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]],["usercommandwithstatusjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]]]]]],["usercommandwithstatusjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandwithstatus",3]]]]]]]],["usercommandwithstatusjson",3]],[[]],[[]],[[["usercommandjson",4]],["usercommand",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandjsonproxy",4]]]]]]]]]],["usercommandjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["usercommandjsonproxy",4]]]]]]]],["usercommandjson",4]],[[["versioned",3,[["versioned",3,[["usercommandjsonproxy",4]]]]]],["usercommandjson",4]],[[["versioned",3,[["usercommandjsonproxy",4]]]],["usercommandjson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["usercommand",4]]]]]]]]]],["usercommandjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["usercommand",4]]]]]]]],["usercommandjson",4]],[[["versioned",3,[["versioned",3,[["usercommand",4]]]]]],["usercommandjson",4]],[[["versioned",3,[["usercommand",4]]]],["usercommandjson",4]],[[["usercommand",4]],["usercommandjson",4]],[[]],[[["signedcommandjson",3]],["signedcommand",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]]]],["signedcommandjson",3]],[[]],[[["signedcommand",3]],["signedcommandjson",3]],[[["versioned",3,[["signedcommand",3]]]],["signedcommandjson",3]],[[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]],["signedcommandjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommand",3]]]]]]]]]],["signedcommandjson",3]],[[]],[[["signedcommandpayloadjson",3]],["signedcommandpayload",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]]]]]],["signedcommandpayloadjson",3]],[[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]],["signedcommandpayloadjson",3]],[[]],[[["signedcommandpayload",3]],["signedcommandpayloadjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayload",3]]]]]]]],["signedcommandpayloadjson",3]],[[["versioned",3,[["signedcommandpayload",3]]]],["signedcommandpayloadjson",3]],[[["signedcommandpayloadcommonjson",3]],["signedcommandpayloadcommon",3]],[[]],[[["signedcommandpayloadcommon",3]],["signedcommandpayloadcommonjson",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]]]],["signedcommandpayloadcommonjson",3]],[[["versioned",3,[["signedcommandpayloadcommon",3]]]],["signedcommandpayloadcommonjson",3]],[[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]],["signedcommandpayloadcommonjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadcommon",3]]]]]]]]]],["signedcommandpayloadcommonjson",3]],[[]],[[["signedcommandpayloadbodyjson",4]],["signedcommandpayloadbody",4]],[[["versioned",3,[["versioned",3,[["signedcommandpayloadbodyjsonproxy",4]]]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["signedcommandpayloadbodyjsonproxy",4]]]],["signedcommandpayloadbodyjson",4]],[[["signedcommandpayloadbody",4]],["signedcommandpayloadbodyjson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbodyjsonproxy",4]]]]]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]]]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbodyjsonproxy",4]]]]]]]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["signedcommandpayloadbody",4]]]],["signedcommandpayloadbodyjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandpayloadbody",4]]]]]]]],["signedcommandpayloadbodyjson",4]],[[]],[[["paymentpayloadjson",3]],["paymentpayload",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]]]]]],["paymentpayloadjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]]]],["paymentpayloadjson",3]],[[["versioned",3,[["versioned",3,[["paymentpayload",3]]]]]],["paymentpayloadjson",3]],[[["versioned",3,[["paymentpayload",3]]]],["paymentpayloadjson",3]],[[["paymentpayload",3]],["paymentpayloadjson",3]],[[]],[[["stakedelegationjson",4]],["stakedelegation",4]],[[["stakedelegation",4]],["stakedelegationjson",4]],[[["versioned",3,[["versioned",3,[["stakedelegationjsonproxy",4]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["stakedelegation",4]]]],["stakedelegationjson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegationjsonproxy",4]]]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegationjsonproxy",4]]]]]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["stakedelegation",4]]]]]]]]]],["stakedelegationjson",4]],[[["versioned",3,[["stakedelegationjsonproxy",4]]]],["stakedelegationjson",4]],[[]],[[["signedcommandmemojson",3]],["signedcommandmemo",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]]]]]],["signedcommandmemojson",3]],[[["signedcommandmemo",3]],["signedcommandmemojson",3]],[[["versioned",3,[["signedcommandmemo",3]]]],["signedcommandmemojson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]]]],["signedcommandmemojson",3]],[[["versioned",3,[["versioned",3,[["signedcommandmemo",3]]]]]],["signedcommandmemojson",3]],[[["transactionstatusjson",4]],["transactionstatus",4]],[[]],[[["transactionstatus",4]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusjsonproxy",4]]]]]]]]]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusjsonproxy",4]]]]]]]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["transactionstatusjsonproxy",4]]]]]],["transactionstatusjson",4]],[[]],[[["versioned",3,[["transactionstatus",4]]]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]]]],["transactionstatusjson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatus",4]]]]]]]]]],["transactionstatusjson",4]],[[["versioned",3,[["transactionstatusjsonproxy",4]]]],["transactionstatusjson",4]],[[["transactionstatusauxiliarydatajson",3]],["transactionstatusauxiliarydata",3]],[[]],[[]],[[["versioned",3,[["transactionstatusauxiliarydata",3]]]],["transactionstatusauxiliarydatajson",3]],[[["transactionstatusauxiliarydata",3]],["transactionstatusauxiliarydatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]]]],["transactionstatusauxiliarydatajson",3]],[[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]],["transactionstatusauxiliarydatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusauxiliarydata",3]]]]]]]]]],["transactionstatusauxiliarydatajson",3]],[[["transactionstatusbalancedatajson",3]],["transactionstatusbalancedata",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]]]]]],["transactionstatusbalancedatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]]]],["transactionstatusbalancedatajson",3]],[[]],[[["transactionstatusbalancedata",3]],["transactionstatusbalancedatajson",3]],[[["versioned",3,[["transactionstatusbalancedata",3]]]],["transactionstatusbalancedatajson",3]],[[["versioned",3,[["versioned",3,[["transactionstatusbalancedata",3]]]]]],["transactionstatusbalancedatajson",3]],[[]],[[["coinbasejson",4]],["coinbase",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasejsonproxy",4]]]]]]]]]],["coinbasejson",4]],[[]],[[["versioned",3,[["versioned",3,[["coinbase",4]]]]]],["coinbasejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbase",4]]]]]]]]]],["coinbasejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbase",4]]]]]]]],["coinbasejson",4]],[[["versioned",3,[["coinbasejsonproxy",4]]]],["coinbasejson",4]],[[["versioned",3,[["versioned",3,[["coinbasejsonproxy",4]]]]]],["coinbasejson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasejsonproxy",4]]]]]]]],["coinbasejson",4]],[[["versioned",3,[["coinbase",4]]]],["coinbasejson",4]],[[["coinbase",4]],["coinbasejson",4]],[[]],[[["coinbasefeetransferjson",3]],["coinbasefeetransfer",3]],[[]],[[["coinbasefeetransfer",3]],["coinbasefeetransferjson",3]],[[["versioned",3,[["coinbasefeetransfer",3]]]],["coinbasefeetransferjson",3]],[[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]],["coinbasefeetransferjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]]]],["coinbasefeetransferjson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasefeetransfer",3]]]]]]]]]],["coinbasefeetransferjson",3]],[[]],[[["internalcommandbalancedatajson",4]],["internalcommandbalancedata",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedatajsonproxy",4]]]]]]]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedatajsonproxy",4]]]]]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["versioned",3,[["internalcommandbalancedatajsonproxy",4]]]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["internalcommandbalancedatajsonproxy",4]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]]]]]],["internalcommandbalancedatajson",4]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["versioned",3,[["internalcommandbalancedata",4]]]]]],["internalcommandbalancedatajson",4]],[[["versioned",3,[["internalcommandbalancedata",4]]]],["internalcommandbalancedatajson",4]],[[["internalcommandbalancedata",4]],["internalcommandbalancedatajson",4]],[[["coinbasebalancedatajson",3]],["coinbasebalancedata",3]],[[]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]]]]]],["coinbasebalancedatajson",3]],[[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]],["coinbasebalancedatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["coinbasebalancedata",3]]]]]]]],["coinbasebalancedatajson",3]],[[["coinbasebalancedata",3]],["coinbasebalancedatajson",3]],[[]],[[["versioned",3,[["coinbasebalancedata",3]]]],["coinbasebalancedatajson",3]],[[]],[[["feetransferbalancedatajson",3]],["feetransferbalancedata",3]],[[["feetransferbalancedata",3]],["feetransferbalancedatajson",3]],[[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]],["feetransferbalancedatajson",3]],[[["versioned",3,[["feetransferbalancedata",3]]]],["feetransferbalancedatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]]]]]],["feetransferbalancedatajson",3]],[[["versioned",3,[["versioned",3,[["versioned",3,[["feetransferbalancedata",3]]]]]]]],["feetransferbalancedatajson",3]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["stagedledgerdiff",3],["stagedledgerdiff",3]],["bool",0]],[[["stagedledgerdiffjson",3],["stagedledgerdiffjson",3]],["bool",0]],[[["stagedledgerdifftuple",3],["stagedledgerdifftuple",3]],["bool",0]],[[["stagedledgerdifftuplejson",3],["stagedledgerdifftuplejson",3]],["bool",0]],[[["stagedledgerprediff",3],["stagedledgerprediff",3]],["bool",0]],[[["stagedledgerprediffjson",3],["stagedledgerprediffjson",3]],["bool",0]],[[["usercommandwithstatus",3],["usercommandwithstatus",3]],["bool",0]],[[["usercommandwithstatusjson",3],["usercommandwithstatusjson",3]],["bool",0]],[[["usercommand",4],["usercommand",4]],["bool",0]],[[["usercommandjson",4],["usercommandjson",4]],["bool",0]],[[["signedcommand",3],["signedcommand",3]],["bool",0]],[[["signedcommandjson",3],["signedcommandjson",3]],["bool",0]],[[["signedcommandpayload",3],["signedcommandpayload",3]],["bool",0]],[[["signedcommandpayloadjson",3],["signedcommandpayloadjson",3]],["bool",0]],[[["signedcommandpayloadcommon",3],["signedcommandpayloadcommon",3]],["bool",0]],[[["signedcommandpayloadcommonjson",3],["signedcommandpayloadcommonjson",3]],["bool",0]],[[["signedcommandpayloadbody",4],["signedcommandpayloadbody",4]],["bool",0]],[[["signedcommandpayloadbodyjson",4],["signedcommandpayloadbodyjson",4]],["bool",0]],[[["paymentpayload",3],["paymentpayload",3]],["bool",0]],[[["paymentpayloadjson",3],["paymentpayloadjson",3]],["bool",0]],[[["stakedelegation",4],["stakedelegation",4]],["bool",0]],[[["stakedelegationjson",4],["stakedelegationjson",4]],["bool",0]],[[["signedcommandmemo",3],["signedcommandmemo",3]],["bool",0]],[[["signedcommandmemojson",3],["signedcommandmemojson",3]],["bool",0]],[[["transactionstatus",4],["transactionstatus",4]],["bool",0]],[[["transactionstatusjson",4],["transactionstatusjson",4]],["bool",0]],[[["transactionstatusauxiliarydata",3],["transactionstatusauxiliarydata",3]],["bool",0]],[[["transactionstatusauxiliarydatajson",3],["transactionstatusauxiliarydatajson",3]],["bool",0]],[[["transactionstatusbalancedata",3],["transactionstatusbalancedata",3]],["bool",0]],[[["transactionstatusbalancedatajson",3],["transactionstatusbalancedatajson",3]],["bool",0]],[[["coinbase",4],["coinbase",4]],["bool",0]],[[["coinbasejson",4],["coinbasejson",4]],["bool",0]],[[["coinbasefeetransfer",3],["coinbasefeetransfer",3]],["bool",0]],[[["coinbasefeetransferjson",3],["coinbasefeetransferjson",3]],["bool",0]],[[["internalcommandbalancedata",4],["internalcommandbalancedata",4]],["bool",0]],[[["internalcommandbalancedatajson",4],["internalcommandbalancedatajson",4]],["bool",0]],[[["coinbasebalancedata",3],["coinbasebalancedata",3]],["bool",0]],[[["coinbasebalancedatajson",3],["coinbasebalancedatajson",3]],["bool",0]],[[["feetransferbalancedata",3],["feetransferbalancedata",3]],["bool",0]],[[["feetransferbalancedatajson",3],["feetransferbalancedatajson",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["stagedledgerdiff",3]],["result",4]],[[["stagedledgerdiffjson",3]],["result",4]],[[["stagedledgerdifftuple",3]],["result",4]],[[["stagedledgerdifftuplejson",3]],["result",4]],[[["stagedledgerprediff",3]],["result",4]],[[["stagedledgerprediffjson",3]],["result",4]],[[["usercommandwithstatus",3]],["result",4]],[[["usercommandwithstatusjson",3]],["result",4]],[[["usercommand",4]],["result",4]],[[["usercommandjson",4]],["result",4]],[[["signedcommand",3]],["result",4]],[[["signedcommandjson",3]],["result",4]],[[["signedcommandpayload",3]],["result",4]],[[["signedcommandpayloadjson",3]],["result",4]],[[["signedcommandpayloadcommon",3]],["result",4]],[[["signedcommandpayloadcommonjson",3]],["result",4]],[[["signedcommandpayloadbody",4]],["result",4]],[[["signedcommandpayloadbodyjson",4]],["result",4]],[[["paymentpayload",3]],["result",4]],[[["paymentpayloadjson",3]],["result",4]],[[["stakedelegation",4]],["result",4]],[[["stakedelegationjson",4]],["result",4]],[[["signedcommandmemo",3]],["result",4]],[[["signedcommandmemojson",3]],["result",4]],[[["transactionstatus",4]],["result",4]],[[["transactionstatusjson",4]],["result",4]],[[["transactionstatusauxiliarydata",3]],["result",4]],[[["transactionstatusauxiliarydatajson",3]],["result",4]],[[["transactionstatusbalancedata",3]],["result",4]],[[["transactionstatusbalancedatajson",3]],["result",4]],[[["coinbase",4]],["result",4]],[[["coinbasejson",4]],["result",4]],[[["coinbasefeetransfer",3]],["result",4]],[[["coinbasefeetransferjson",3]],["result",4]],[[["internalcommandbalancedata",4]],["result",4]],[[["internalcommandbalancedatajson",4]],["result",4]],[[["coinbasebalancedata",3]],["result",4]],[[["coinbasebalancedatajson",3]],["result",4]],[[["feetransferbalancedata",3]],["result",4]],[[["feetransferbalancedatajson",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[8,"BinProtSerializationType"],[8,"JsonSerializationType"],[4,"AuthRequired"],[4,"TokenPermissions"],[4,"Timing"],[3,"Account"],[3,"Permissions"],[3,"TimedData"],[13,"Timed"],[13,"NotOwned"],[13,"TokenOwned"],[3,"NonSnarkStagedLedgerHash"],[3,"NonSnarkStagedLedgerHashJson"],[3,"BlockchainState"],[3,"BlockchainStateJson"],[3,"StagedLedgerHash"],[3,"StagedLedgerHashJson"],[3,"BulletproofChallenges"],[3,"BulletproofChallengesJson"],[3,"ProofStateBulletproofChallenges"],[3,"ProofStateBulletproofChallengesJson"],[3,"BulletproofChallengeTuple17"],[3,"BulletproofChallengeTuple17Json"],[3,"BulletproofChallengeTuple18"],[3,"BulletproofChallengeTuple18Json"],[3,"ScalarChallengeVector2"],[3,"ScalarChallengeVector2Json"],[4,"BulletproofPreChallenge"],[4,"BulletproofPreChallengeJson"],[3,"BulletproofChallenge"],[3,"BulletproofChallengeJson"],[13,"ScalarChallenge"],[13,"ScalarChallenge"],[3,"U32Json"],[3,"U64Json"],[3,"I64"],[3,"DecimalJson"],[3,"CharJson"],[3,"ByteVec"],[3,"ByteVecJson"],[3,"Base58EncodableType"],[3,"Base58EncodableVersionedType"],[6,"HashV1"],[6,"Hash2V1"],[6,"TokenIdV1"],[6,"LengthV1"],[6,"AmountV1"],[6,"ExtendedU32"],[6,"Hex64V1"],[6,"CharV1"],[6,"ByteVecV1"],[6,"HashV1Json"],[3,"VrfOutputTruncated"],[3,"VrfOutputTruncatedJson"],[3,"ConsensusState"],[3,"ConsensusStateJson"],[3,"DeltaTransitionChainProof"],[3,"DeltaTransitionChainProofJson"],[3,"EpochLedger"],[3,"EpochLedgerJson"],[3,"EpochData"],[3,"EpochDataJson"],[4,"Error"],[13,"Base58DecodeError"],[13,"BinProtError"],[13,"Custom"],[3,"ExternalTransition"],[3,"ExternalTransitionJson"],[3,"FieldElementVec"],[3,"FieldElementVecJson"],[3,"FiniteECPoint"],[3,"FiniteECPointJson"],[3,"FiniteECPointVec"],[3,"FiniteECPointVecJson"],[3,"FiniteECPointPair"],[3,"FiniteECPointPairJson"],[3,"FiniteECPointPairVec"],[3,"FiniteECPointPairVecJson"],[3,"ECPointVec"],[3,"ECPointVecJson"],[3,"FieldElementJson"],[4,"ECPoint"],[4,"ECPointJson"],[6,"FieldElement"],[13,"Finite"],[13,"Finite"],[3,"GlobalSlot"],[3,"GlobalSlotJson"],[3,"OpeningProof"],[3,"OpeningProofJson"],[3,"ProofEvaluations"],[3,"ProofEvaluationsJson"],[3,"ProofMessageWithoutDegreeBoundList"],[3,"ProofMessageWithoutDegreeBoundListJson"],[3,"ProofMessages"],[3,"ProofMessagesJson"],[3,"ProofMessageWithDegreeBound"],[3,"ProofMessageWithDegreeBoundJson"],[3,"ProtocolConstants"],[3,"ProtocolConstantsJson"],[3,"ProtocolState"],[3,"ProtocolStateJson"],[3,"ProtocolStateBody"],[3,"ProtocolStateBodyJson"],[3,"ProtocolStateProofBase64Json"],[3,"SpongeDigestBeforeEvaluations"],[3,"SpongeDigestBeforeEvaluationsJson"],[3,"PrevEvals"],[3,"PrevEvalsJson"],[3,"PrevXHat"],[3,"PrevXHatJson"],[3,"ProofOpeningsEvals"],[3,"ProofOpeningsEvalsJson"],[4,"ShiftedValue"],[4,"ShiftedValueJson"],[3,"Plonk"],[3,"PlonkJson"],[3,"PairingBased"],[3,"PairingBasedJson"],[3,"ProofStateDeferredValues"],[3,"ProofStateDeferredValuesJson"],[3,"ProtocolStateProof"],[3,"ProtocolStateProofJson"],[3,"ProofStatement"],[3,"ProofStatementJson"],[3,"ProofState"],[3,"ProofStateJson"],[3,"ProofStatePairingBased"],[3,"ProofStatePairingBasedJson"],[3,"Proof"],[3,"ProofJson"],[3,"ProofOpenings"],[3,"ProofOpeningsJson"],[6,"ProtocolStateProofV1"],[13,"ShiftedValue"],[13,"ShiftedValue"],[3,"ProtocolVersion"],[6,"ProtocolVersionJson"],[3,"PublicKeyV1"],[3,"PublicKey2V1"],[3,"SignatureV1"],[3,"SignatureJson"],[3,"CompressedCurvePoint"],[3,"PublicKeyJson"],[3,"FeeExcessPair"],[3,"FeeExcessPairJson"],[4,"SgnType"],[4,"SgnTypeJsonProxy"],[4,"SgnTypeJson"],[4,"OneORTwo"],[4,"OneORTwoJson"],[3,"FeeExcess"],[3,"FeeExcessJson"],[3,"TransactionSnarkWork"],[3,"TransactionSnarkWorkJson"],[3,"TransactionSnark"],[3,"TransactionSnarkJson"],[3,"Statement"],[3,"StatementJson"],[3,"PendingCoinbaseStackState"],[3,"PendingCoinbaseStackStateJson"],[3,"PendingCoinbase"],[3,"PendingCoinbaseJson"],[3,"StateStack"],[3,"StateStackJson"],[3,"Signed"],[3,"SignedJson"],[13,"One"],[13,"Two"],[13,"One"],[13,"Two"],[3,"StagedLedgerDiffTuple"],[3,"StagedLedgerDiffTupleJson"],[3,"SignedCommandMemo"],[3,"SignedCommandMemoJson"],[4,"TransactionStatus"],[4,"TransactionStatusJson"],[4,"InternalCommandBalanceData"],[4,"InternalCommandBalanceDataJson"],[4,"CoinBase"],[4,"CoinBaseJson"],[4,"SignedCommandPayloadBody"],[4,"SignedCommandPayloadBodyJson"],[4,"StakeDelegation"],[4,"StakeDelegationJson"],[4,"UserCommand"],[4,"UserCommandJson"],[3,"PaymentPayload"],[3,"PaymentPayloadJson"],[3,"SignedCommandPayload"],[3,"SignedCommandPayloadJson"],[3,"StagedLedgerDiff"],[3,"StagedLedgerDiffJson"],[3,"StagedLedgerPreDiff"],[3,"StagedLedgerPreDiffJson"],[3,"UserCommandWithStatus"],[3,"UserCommandWithStatusJson"],[3,"SignedCommand"],[3,"SignedCommandJson"],[3,"SignedCommandPayloadCommon"],[3,"SignedCommandPayloadCommonJson"],[3,"TransactionStatusAuxiliaryData"],[3,"TransactionStatusAuxiliaryDataJson"],[3,"TransactionStatusBalanceData"],[3,"TransactionStatusBalanceDataJson"],[3,"CoinBaseFeeTransfer"],[3,"CoinBaseFeeTransferJson"],[3,"CoinBaseBalanceData"],[3,"CoinBaseBalanceDataJson"],[3,"FeeTransferBalanceData"],[3,"FeeTransferBalanceDataJson"],[13,"One"],[13,"One"],[13,"CoinBase"],[13,"FeeTransfer"],[13,"CoinBase"],[13,"FeeTransfer"],[13,"PaymentPayload"],[13,"StakeDelegation"],[13,"PaymentPayload"],[13,"StakeDelegation"],[13,"SetDelegate"],[13,"SetDelegate"],[13,"Applied"],[13,"Applied"],[13,"SignedCommand"],[13,"SignedCommand"]]},\
"mina_serialization_types_macros":{"doc":"This crate provides helper procedural macros for type …","t":[24],"n":["AutoFrom"],"q":["mina_serialization_types_macros"],"d":["A derive macro that automatically implements From trait …"],"i":[0],"f":[null],"p":[]},\
"proof_systems":{"doc":"This is a shim crate that directly reexports crates under …","t":[2,2,2],"n":["mina_hasher","mina_signer","o1_utils"],"q":["proof_systems","",""],"d":["","",""],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"test_fixtures":{"doc":"","t":[17,3,3,3,3,3,3,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11],"n":["BLOCK_LAYOUT","BLOCK_RULE","BlockFixture","GENESIS_BLOCK_DEVNET","GENESIS_BLOCK_MAINNET","GENESIS_BLOCK_MAINNET_JSON","JSON_TEST_BLOCKS","TEST_BLOCKS","VERIFICATION_KEY","block_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","external_transitionv1","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","load_json_test_blocks","load_test_blocks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["test_fixtures","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,1,2,2,3,3,4,4,5,5,6,6,7,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,1,2,3,4,5,6,7],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["block_rule",3]],["binprotrule",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["genesis_block_mainnet_json",3]],["value",4]],[[["usize",0]],["",0]],[[["genesis_block_mainnet",3]],["blockfixture",3]],[[["genesis_block_devnet",3]],["blockfixture",3]],[[["usize",0]],["",0]],[[["test_blocks",3]],["hashmap",3]],[[["usize",0]],["",0]],[[["json_test_blocks",3]],["hashmap",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["blockfixture",3]],["result",6,[["externaltransitionv1",6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"BlockFixture"],[3,"BLOCK_RULE"],[3,"GENESIS_BLOCK_MAINNET_JSON"],[3,"GENESIS_BLOCK_MAINNET"],[3,"GENESIS_BLOCK_DEVNET"],[3,"TEST_BLOCKS"],[3,"JSON_TEST_BLOCKS"]]},\
"test_serialization":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"versioned":{"doc":"Versioned wrapper types for serialization","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,11,11,0,11,11,11,12,11,11,11,11,11,12],"n":["Versioned","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","from","from","from","from","from","impl_from_for_generic_with_proxy","impl_from_for_newtype","impl_from_for_versioned_with_proxy","impl_from_versioned","impl_from_with_proxy","inner","into","macros","ne","new","serialize","t","to_owned","try_from","try_into","type_id","version","version"],"q":["versioned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A generic version wrapper around another type","","","","","","","","","","","","","Returns the argument unchanged.","","Macro that implements From trait for 2-way conversion …","Macro that implements From trait for a newtype struct and …","Macro that implements From trait for 2-way conversion …","Macro that implements From trait for for a struct and its …","Macro that implements From trait for 2-way conversion …","Return the inner type","Calls <code>U::from(self)</code>.","Macros that help implement common traits for versioned …","","create a new version type of the given const version","","The wrapped type","","","","","Return the version number","Version byte to be encoded first when the whole wrapper is …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["versioned",3,[["clone",8]]]],["versioned",3,[["clone",8]]]],[[["",0],["",0]]],[[],["versioned",3]],[[],["result",4,[["versioned",3]]]],[[["versioned",3,[["partialeq",8]]],["versioned",3]],["bool",0]],[[["versioned",3,[["debug",8]]],["formatter",3]],["result",6]],[[],["versioned",3,[["versioned",3,[["versioned",3,[["versioned",3]]]]]]]],[[],["versioned",3,[["versioned",3,[["versioned",3]]]]]],[[],["versioned",3,[["versioned",3]]]],[[],["versioned",3]],[[]],[[["never",0]]],null,null,null,null,null,[[["versioned",3]]],[[]],null,[[["versioned",3,[["partialeq",8]]],["versioned",3]],["bool",0]],[[],["versioned",3]],[[["versioned",3]],["result",4]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["versioned",3]],["u16",0]],null],"p":[[3,"Versioned"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
