on:
  push:
    branches: [main]
  pull_request:

name: CI

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v2
      - run: cat .github/cargo-config > $HOME/.cargo/config
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-checks-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - run: cargo fmt --all -- --check
      - run: cargo fmt --all --manifest-path apps/Cargo.toml -- --check
      - name: Check license
        run: ./scripts/add_license.sh
      - run: cargo install cargo-udeps || echo 'already installed'
      - run: rustup install nightly
      - run: cargo +nightly udeps --all-targets --all-features
      - run: cargo +nightly udeps --all-targets --all-features --manifest-path apps/Cargo.toml
      - run: cargo install cargo-deny || echo 'already installed'
      - run: cargo deny check All -s
      - run: |
          cd apps
          cargo deny check All -s
  x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cat .github/cargo-config > $HOME/.cargo/config      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - run: cargo build --release --all-features -v
      - run: cargo build --release --all-features --manifest-path apps/Cargo.toml
      - run: cargo test --release --all-features
      - run: cargo test --release --all-features --manifest-path apps/Cargo.toml
      - run: cargo bench --all-features
      - run: cargo bench --all-features --manifest-path apps/Cargo.toml
      - run: cargo doc --no-deps --release --all-features
      - run: cargo doc --no-deps --release --all-features --manifest-path apps/Cargo.toml
      - run: cargo clippy --release --all-features -- --deny warnings
      - run: cargo clippy --release --all-features --manifest-path apps/Cargo.toml -- --deny warnings
      - name: Run profilers
        run: |
          sudo apt-get install -y valgrind graphviz
          sudo pip install gprof2dot
          ./scripts/profiler.sh
      - uses: actions/upload-artifact@v2
        with:
          name: doc
          path: |
            target/doc/**/*
            apps/target/doc/**/*
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: criterion
          path: |
            target/criterion/**/*
            apps/target/criterion/**/*
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: profiler-reports
          path: apps/target/release/profiler-reports/**/*
          if-no-files-found: error
  wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cat .github/cargo-config > $HOME/.cargo/config      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          target: wasm32-unknown-unknown
          override: true
      # clippy includes cargo check
      - run: cargo clippy --release --all-features --target wasm32-unknown-unknown -- --deny warnings
      - run: cargo clippy --release --all-features --target wasm32-unknown-unknown --manifest-path apps/Cargo.toml -- --deny warnings
      - run: cargo doc --no-deps --release --all-features --target wasm32-unknown-unknown
      - run: cargo doc --no-deps --release --all-features --target wasm32-unknown-unknown --manifest-path apps/Cargo.toml
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: wasm-pack tests for test-serialization
        run: |
          cd protocol/test-serialization
          wasm-pack test --node --release
          wasm-pack test --headless --chrome --release --features browser
      - name: wasm-pack tests for consensus
        run: |
          cd consensus
          wasm-pack test --node --release
          wasm-pack test --headless --chrome --release --features browser
  codecov-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cat .github/cargo-config > $HOME/.cargo/config      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          # Pin to nightly-2022-01-14 until https://github.com/taiki-e/cargo-llvm-cov/issues/128 is resolved
          toolchain: nightly-2022-01-14
          override: true
          components: llvm-tools-preview      
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: cargo llvm-cov --all-features --lcov --output-path lcov.info
      - uses: actions/upload-artifact@v2
        with:
          name: lcov.info
          path: lcov.info
          if-no-files-found: error
      - name: Upload to codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -f lcov.info -Z
