on:
  push:
    branches: [main]
  pull_request:

name: CI

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - run: cargo fmt --all -- --check
      - name: Check license
        run: ./scripts/add_license.sh
      - run: cargo install cargo-deny
      - run: cargo deny check Ban -s
      - run: cargo deny check License -s
      - run: cargo deny check Sources -s
      - run: cargo deny check Advisories -s
  x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - run: cargo test --release --all-features
      - run: cargo clippy --release --all-features -- --deny warnings
  wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          target: wasm32-unknown-unknown
          override: true
      # clippy includes cargo check
      - run: cargo clippy --release --all-features --target wasm32-unknown-unknown -- --deny warnings
      - name: Install wasm-pack
        # run: cargo install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: wasm-pack tests for test-serialization
        run: |
          cd protocol/test-serialization
          wasm-pack test --node --release
          wasm-pack test --headless --chrome --release --features browser
  codecov-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: llvm-tools-preview
      - run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Run code coverage
        env:
          RUSTFLAGS: -Zinstrument-coverage
          LLVM_PROFILE_FILE: coverage-%p-%m.profraw
        run: |
          cargo test --all-features
          ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
      - uses: actions/upload-artifact@v2
        with:
          name: lcov.info
          path: lcov.info
          if-no-files-found: error
      - name: Upload to codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -f lcov.info -Z
